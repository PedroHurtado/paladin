{"version":3,"sources":["webpack://Paladin/./src/app/paladinapp/constants/globals.js","webpack://Paladin/./src/app/paladinapp/app.js","webpack://Paladin/./src/app/paladinapp/constants/enums.js","webpack://Paladin/./src/app/paladinapp/services/acuantService.js","webpack://Paladin/./src/app/paladinapp/services/apiService.js","webpack://Paladin/./src/app/paladinapp/services/appStateManager.js","webpack://Paladin/./src/app/paladinapp/services/chatService.js","webpack://Paladin/./src/app/paladinapp/services/dataService.js","webpack://Paladin/./src/app/paladinapp/services/filters.js","webpack://Paladin/./src/app/paladinapp/services/geoLocationService.js","webpack://Paladin/./src/app/paladinapp/services/gtmService.js","webpack://Paladin/./src/app/paladinapp/services/menusService.js","webpack://Paladin/./src/app/paladinapp/services/multilanguage.js","webpack://Paladin/./src/app/paladinapp/services/navigationService.js","webpack://Paladin/./src/app/paladinapp/services/pager.js","webpack://Paladin/./src/app/paladinapp/services/popupService.js","webpack://Paladin/./src/app/paladinapp/services/productReviewService.js","webpack://Paladin/./src/app/paladinapp/services/products.js","webpack://Paladin/./src/app/paladinapp/services/ptLog.js","webpack://Paladin/./src/app/paladinapp/services/ptUtils.js","webpack://Paladin/./src/app/paladinapp/services/referralsService.js","webpack://Paladin/./src/app/paladinapp/services/stripeService.js","webpack://Paladin/./src/app/paladinapp/services/toastService.js","webpack://Paladin/./src/app/paladinapp/services/transactionService.js","webpack://Paladin/./src/app/paladinapp/services/uploadHandler.js","webpack://Paladin/./src/app/paladinapp/controllers/app.js","webpack://Paladin/./src/app/paladinapp/controllers/bookingDetailed.js","webpack://Paladin/./src/app/paladinapp/controllers/chat.js","webpack://Paladin/./src/app/paladinapp/controllers/home.js","webpack://Paladin/./src/app/paladinapp/controllers/homeV2.js","webpack://Paladin/./src/app/paladinapp/controllers/myListings.js","webpack://Paladin/./src/app/paladinapp/controllers/newProduct.js","webpack://Paladin/./src/app/paladinapp/controllers/paymentDetailed.js","webpack://Paladin/./src/app/paladinapp/controllers/popups/bookingTrackerInfoMobile.popup.js","webpack://Paladin/./src/app/paladinapp/controllers/popups/changePassword.popup.js","webpack://Paladin/./src/app/paladinapp/controllers/popups/confirm.popup.js","webpack://Paladin/./src/app/paladinapp/controllers/popups/emailVerification.popup.js","webpack://Paladin/./src/app/paladinapp/controllers/popups/forgotPassword.popup.js","webpack://Paladin/./src/app/paladinapp/controllers/popups/idVerificationFailureHandlerPopup.js","webpack://Paladin/./src/app/paladinapp/controllers/popups/inputField.popup.js","webpack://Paladin/./src/app/paladinapp/controllers/popups/loader.popup.js","webpack://Paladin/./src/app/paladinapp/controllers/popups/loginSignup.popup.js","webpack://Paladin/./src/app/paladinapp/controllers/popups/shareToSocialMedia.popup.js","webpack://Paladin/./src/app/paladinapp/controllers/popups/transactionStatusChange.popup.js","webpack://Paladin/./src/app/paladinapp/controllers/productDetailed.js","webpack://Paladin/./src/app/paladinapp/controllers/productPreview.js","webpack://Paladin/./src/app/paladinapp/controllers/productReview.js","webpack://Paladin/./src/app/paladinapp/controllers/userBookings.js","webpack://Paladin/./src/app/paladinapp/controllers/userProfile.js","webpack://Paladin/./src/app/paladinapp/controllers/userVerification.js","webpack://Paladin/./src/app/paladinapp/directives/authedAction.js","webpack://Paladin/./src/app/paladinapp/directives/bookingCoupon.js","webpack://Paladin/./src/app/paladinapp/directives/bookingDatePicker.js","webpack://Paladin/./src/app/paladinapp/directives/bookingDetailedCTAButton.js","webpack://Paladin/./src/app/paladinapp/directives/bookingDetailedStatus.js","webpack://Paladin/./src/app/paladinapp/directives/bookingListItem.js","webpack://Paladin/./src/app/paladinapp/directives/bookingTrackerInfo.js","webpack://Paladin/./src/app/paladinapp/directives/chatCTAButton.js","webpack://Paladin/./src/app/paladinapp/directives/chatDetailed.js","webpack://Paladin/./src/app/paladinapp/directives/chatListMessageItem.js","webpack://Paladin/./src/app/paladinapp/directives/chatsList.js","webpack://Paladin/./src/app/paladinapp/directives/contactLenderOrBorrower.js","webpack://Paladin/./src/app/paladinapp/directives/copyTextToClipboard.js","webpack://Paladin/./src/app/paladinapp/directives/filters.js","webpack://Paladin/./src/app/paladinapp/directives/focusMe.js","webpack://Paladin/./src/app/paladinapp/directives/footer.js","webpack://Paladin/./src/app/paladinapp/directives/header.js","webpack://Paladin/./src/app/paladinapp/directives/headerV2.js","webpack://Paladin/./src/app/paladinapp/directives/homeStepsTutorial.js","webpack://Paladin/./src/app/paladinapp/directives/lazyLoading.js","webpack://Paladin/./src/app/paladinapp/directives/lazyLoadingManual.js","webpack://Paladin/./src/app/paladinapp/directives/loaderContainer.js","webpack://Paladin/./src/app/paladinapp/directives/loadMoreOnScroll.js","webpack://Paladin/./src/app/paladinapp/directives/productImage.js","webpack://Paladin/./src/app/paladinapp/directives/products.js","webpack://Paladin/./src/app/paladinapp/directives/productStatusLabel.js","webpack://Paladin/./src/app/paladinapp/directives/productsTeaser.js","webpack://Paladin/./src/app/paladinapp/directives/productTeaserListItem.js","webpack://Paladin/./src/app/paladinapp/directives/product_list.js","webpack://Paladin/./src/app/paladinapp/directives/profileImage.js","webpack://Paladin/./src/app/paladinapp/directives/ratingView.js","webpack://Paladin/./src/app/paladinapp/directives/rentalRequestHowTo.js","webpack://Paladin/./src/app/paladinapp/directives/rentalRequestPicker.js","webpack://Paladin/./src/app/paladinapp/directives/reviewsList.js","webpack://Paladin/./src/app/paladinapp/directives/reviewsListItem.js","webpack://Paladin/./src/app/paladinapp/directives/search.js","webpack://Paladin/./src/app/paladinapp/directives/searchBar.js","webpack://Paladin/./src/app/paladinapp/directives/userAvatar.js","webpack://Paladin/./src/app/paladinapp/directives/userItem.js","webpack://Paladin/./src/app/paladinapp/directives/userListingsList.js","webpack://Paladin/./src/app/paladinapp/directives/userListingsListItem.js","webpack://Paladin/./src/app/paladinapp/filters/capitalize.js","webpack://Paladin/./src/app/paladinapp/filters/ptCurrency.js","webpack://Paladin/./src/app/paladinapp/filters/ptHtmlToPlainText.js","webpack://Paladin/./src/app/paladinapp/filters/ptTruncate.js"],"names":["window","glObj","ENV","IS_PROMO","START_DATE","END_DATE","COUPON_VALUE","COUPON_CODE","PROMO_VERSION","isProd","SUPPORTED_LANGS","code","name","defaultLocation","tryAndBuyWordPressPath","RENT_NOW_URL","RENT_URL","ROOT_PATH","BASE_URL","PROFILE_IMAGE_URL","PRODUCT_IMAGE_URL","CATEGORY_IMAGE_URL","LOG_LEVEL","STRIPE_SK","API_URL","TOKEN_URL","STRIPE_URL","PROMO_SIGNUP_TIMER","globals","angular","module","config","$stateProvider","$urlRouterProvider","$httpProvider","$locationProvider","ZendeskWidgetProvider","$mdThemingProvider","enums","paladinTheme","extendPalette","500","200","A200","A300","A400","A500","A600","A700","definePalette","50","100","300","400","600","700","800","900","A100","theme","primaryPalette","accentPalette","init","accountUrl","beforePageLoad","zE","hide","html5Mode","defaults","headers","common","state","url","templateUrl","controller","isPublic","abstract","params","languageCode","localStorage","getItem","localStorageKeys","preferredLanguage","data","isCollapsingHeader","resolve","validReferralCode","$stateParams","appStateManager","referralsService","validateReferralCode","referralNameCode","reloadOnSearch","isCustomSEO","category","squash","value","subCategory","city","search","sortBy","pageIndex","isTryAndBuy","isResetSearch","productNameAndId","undefined","productId","prereqData","console","log","userId","Borrower_Id","currentLang","getCurrentLang","bookingId","startDate","endDate","purchase","template","chatId","isHeaderHidden","rule","$injector","$location","path","langCode","split","lang","find","toLowerCase","setItem","location","reload","replace","otherwise","includes","run","ngMeta","$window","$rootScope","facebook","$trace","$transitions","$state","navigationService","dataService","chatService","facebook_user","facebookApiLoaded","$emit","busEvents","facebookApiLoad","isLoaded","fbAsyncInit","FB","appId","channelUrl","status","cookie","xfbml","version","Event","subscribe","res","api","fields","$apply","stateData","enable","onStart","trans","$on","arguments","onBefore","to","getUserId","forceLogin","router","stateService","target","onSuccess","nextState","isMenuOpen","currentState","current","updateGeneralSEO","factory","directive","restrict","link","scope","iElement","iAttrs","languageCodeFacebook","d","js","id","ref","getElementsByTagName","createElement","async","src","getElementById","parentNode","replaceChild","document","appendChild","insertBefore","XFBML","parse","parent","$route","original","lastRoute","un","apply","constant","onAppOnlineState","$routeChangeError","userLogin","userSignup","userLogout","preferredLanguageChange","updatedUser","tokenRefresh","triggerEmailValidation","locationUpdate","categoriesUpdate","googlePlacesAutocompletePlaceChanged","reloadDetailedBooking","footerExtraHeight","scrollMainScrollerToTop","rentalRequestPickerUpdateDates","busNavigation","homePage","productDetailed","browseCategory","browseKeyword","browseSort","switchBrowseMode","userProfile","userListings","newProduct","rentals","transactionDetailed","idVerification","userReview","paymentDetailed","chat","busChatEvents","updateUnreadCount","newMessage","detailedChatSelected","startNewMessagesPoller","selectPendingChat","ngMetaValues","currentUrl","categoriesBannersPaths","all","en","it","promo","promo1","promo2","addProduct","allP2P","jwtToken","refreshToken","locationLatLong","pendingPrivateState","allCategories","de","secret","inAppSideNavsIds","mainMobileNav","chatSideNav","categoriesIds","tryAndBuy","outdoor","homeAppliance","hiTech","smartMobility","kids","productsSortOptions","geoLocation","popularity","bestProduct","review","lowPrice","highPrice","recent","productsSortByTextCode","SortByPopularity","SortByRecent","SortByGeoLocation","SortByBestProduct","SortByLowPrice","SortByHighPrice","userProductsFilter","borrowedProducts","lentProduct","allProducts","myProductsToBorrow","productRentalStatus","available","requested","notVerified","verified","timeout","denied","canceled","accepted","started","ended","criticalCancel","moderateCancel","canceledByLender","timeoutByBorrower","verifying","booked","productRentalStatusNames","cancelled","trackingStep","pending","success","failure","bookingReviewStatus","noReview","reviewByBorrower","reviewByLender","reviewByBoth","idVerificationMethod","passport","driverLicense","acuantImageSource","mobileCropped","scanShellTwain","SnapShell","Other","acuantRegions","USA","Canada","SouthAmerica","Europe","Australia","Asia","GeneralDocs","Africa","service","$http","$base64","ACUANT_URL","LISENCE","encode","post","imageData","method","Content-Type","Authorization","dataType","processPassportImage","imageToProcess","imageSource","usePreprocessing","toString","processNICDLDuplexImage","frontImage","backImage","selectedRegion","imgsToProcess","FormData","append","transformRequest","identity","postDuplex","processFacialMatch","idFaceImage","selfie","facialMatchData","processDriversLicense","$q","ptLog","self","this","slice","timeoutCounter","maxTimeouts","raiseTimeout","isAppOnline","loweTimeout","getHttpConfig","Access-Control-Allow-Origin","X-Requested","Access-Control-Allow-Methods","Access-Control-Allow-Headers","Object","keys","forEach","headerKey","getDefaultParams","LanguageCode","getRequest","curRetryCounter","deferred","defer","get","then","response","Status","reject","warn","apiMethods","users","setTimeout","catch","promise","postRequest","putRequest","put","categories","getCategories","pages","getHomePageData","Categories","getProductDetailData","Product_Id","User_Id","products","getSearchedProducts","keyword","isShop","categoryId","subCategoryId","minPriceRange","maxPriceRange","lat","lng","range","page","productPerPage","isWeb","productIDs","KeywordProduct","encodeURIComponent","user","Category_Id","SubCategory_Id","IsShop","MinPriceRange","MaxPriceRange","Latitude","Longitude","Product_City","Range","IsWeb","PageIndex","getPopularTryAndBuy","getSuggestions","Keyword","getDetailedProduct","getUserProducts","productsFilter","getProductBookingDetails","Product_ItemCategory_Id","Product_Title","Product_Description","Product_Price_Perday","Product_IsShop","Product_ShopURL","Price1Day","Price15Day","Product_TryAndBuy","MinRentalPeriod","MaxRentalPeriod","Product_Longitude","Product_Latitude","ProductImage_Image1","Product_LenduserId","reviews","submitTransactionReview","signUp","email","username","password","referralCode","obj","User_UserName","User_Email","User_Address","User_Password","User_UDIDType","ReferralCode","signupFacebook","facebookName","address","facebookUserId","dataObj","User_DisplayPicturePath","User_DisplayPicture","User_FacebookId","User_FullName","User_QBId","signUpReferred","login","User_Mobile","forgotPassword","changePassword","newPassword","oldPassword","User_NewPassword","User_OldPassword","emailVerification","getUserProfile","getUserCredit","str","p","push","join","grant_type","refresh_token","editProfile","profile","body","updateNotificaton","emailNotif","chatNotif","Notification_Chat","Notification_Push","Notification_Email","Notification_UserId","deleteAccount","bookings","getUserBookings","getBookingDetailed","BookingId","acceptBookingRequest","Lender_Id","rejectBookingRequest","cancelBookingRequest","reason","Reason","startRental","endRental","bookProduct","stripeEmail","borrowerId","lenderId","noOfDays","coupon","stripeCustomerId","isSaveCard","idVerified","isPickUp","deliveryLat","deliveryLng","deliveryAddress","deliveryName","deliveryPhone","deliveryBell","Stripe_Email","Borrower_UserId","Lender_UserId","StartDate","EndDate","NoOfDays","CouponNumber","CustomerAccountId","SaveCard","IdVerfied","Booking_PickupProduct","Delivery_Latitude","Delivery_Longitude","Delivery_Address","Complete_Borrower_Name","Phone_Number","House_Name","payments","createUserStripeAccount","country","Booking_Id","User_Country","verifyCoupon","Coupon","createStripeCustomer","cardToken","Email","TokenId","buyProduct","purchaseAmount","Stripe_Amount","verification","uploadPassport","passportImage","PassPort","User_Selfie","sendToManualVerification","NICFront","NICDLFront","NICBack","NICDLBack","uploadNICDL","chats","getChatsList","getChatDetailed","Chat_Id","ChatDone","getChatByQBId","chatQbId","Chat_QBRoomId","startBookingChat","chatRoomId","appState","chatUser","hash","decode","categoriesDict","apiService","toastService","CHAT_HASH","userDialogs","kApplicationID","kAuthKey","kAuthSecret","kAccountKey","onMessage","message","msg","isMe","_id","extension","attachments","length","img","QB","content","privateUrl","uid","onDisconnectedListener","onReconnectListener","getAppSession","Promise","chatAppSession","createSession","err","result","token","getUserParams","signupToChat","session","create","syncQbUserId","error","getUnreadMessage","dialogIds","map","key","getUnreadMessagesForDialogId","results","item","dialogId","count","unreadCount","chat_dialog_ids","debug","mode","chatProtocol","active","onMessageListener","loginToChat","createOrStartChat","lenderQBId","borrowerQBId","productName","Data","type","occupants_ids","dialog","setUserTyping","isTyping","uploadMedia","inputElement","getChatList","lists","Chat_Borrow","concat","Chat_Lent","thumbnail","Borrower_ProfileImage","Lender_ProfileImage","recipient","Borrower_FullName","Lender_FullName","initialBadge","lastUpdatedDate","Date","ChatLastUpdated","isLent","sort","a","b","pendingChatToJoin","Error","getChatHistory","skip","list","chat_dialog_id","limit","sort_desc","msgs","items","sender_id","dateSent","date_sent","reverse","connectToChat","userToken","connect","err2","disconnectChat","disconnect","syncDialogList","sendMessage","text","input","chatDialog","helpers","getRoomJidFromDialogId","files","inputFile","file","size","public","createAndUpload","fileUID","ProductId","save_to_history","dialogID","isBot","markable","send","joinChat","muc","presence","leaveChat","leave","notifyUser","isNewChat","notification_type","clearUnreadBadgesForDialog","numberOfUnreadMessages","total","detailedDict","activateChatWhenReady","$translate","popupService","$timeout","geoLocationService","$interval","TAG","didInit","registerBus","event","oAuthToken","setTokens","setUserId","getMe","use","refresh","newPath","pathname","clear","go","showEmailVerification","geoLocationUpdate","getLocation","updateGeoLocationStorage","JSON","stringify","latLong","geometry","access_token","token_type","messagesPollerInterval","getUnreadMessages","dialogsDict","nummberOfUnreadMessages","activatePendingPrivateState","isStart","cancel","messagesPoller","setPendingPrivateState","encodedState","removeItem","targetState","options","catDict","getGeoLocationForApp","transition","nexState","stateObjToSave","identifier","showLoginSignupPopup","setTag","absUrl","Filters","getHeaders","callback","categoriesMap","formatLanguageCode","getCategoryById","i","getSubcategoryById","j","Category_SubCatrgories","getCategoryByName","IsTryAndBuy","Category_Name","getSubcategoryByName","SubCategory_Name","findByName","keywords","getCategoriesUrl","categoryName","subcategoryName","filter","glCity","geocoder","google","maps","Geocoder","geoCodeLocation","locData","geocode","getDefaultLocationAddressForLang","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","defaultLoc","getUserCountryFromUserAddress","address_components","comp","types","getUserAddressFromCoordinates","streetAddress","formatted_address","trackEvent","action","label","dataLayer","attributes","nonInteraction","$mdToast","ZendeskWidget","commonMenus","aboutMenu","title","itemId","accountLoggedOut","shouldHide","BL","accountLoggedIn","linksMenu","instant","activate","menuClickHandlerMethod","menuItem","open","shouldShowMenuItem","translationID","uses","$translateProvider","useStaticFilesLoader","prefix","suffix","useMissingTranslationHandler","useSanitizeValueStrategy","ptUtils","product","getProductNameAndId","subCategoryName","isLender","booking","pagerService","GetPager","totalPages","currentPage","pageSize","startPage","endPage","totalItems","startIndex","endIndex","Math","min","_","$mdDialogProvider","addPreset","bindToController","controllerAs","clickOutsideToClose","escapeToClose","panelClass","$mdDialog","$mdDateRangePicker","moment","showAlert","okBtn","confirm2","confirmPreset","locals","isConfirm","show","showConfirm","yesButton","noButton","isSignUp","loginSignup","selectedTab","showForgotPassword","showIdVerificationFailureHandler","idVerificationHandler","idVerificationFailureHandler","showShareReferralLink","referralLink","shareReferralLink","showDateRangePicker","productBookingDetails","dateRanges","getBookedDateRanges","onePanel","autoConfirm","model","localizationMap","getTranslationDictForDatePicker","maxRange","isDisabledDate","$date","momentDate","isBetween","isSame","isBefore","showChangePassword","changePass","wot","showTransactionStatusChange","apiMethod","statusChange","transactionStatusChange","showInputField","initialValue","inputRegexValidation","validationErrorMessage","inputField","showLoader","loader","hideLoader","showBookingTrackerInfoMobilePopup","bookingTracker","bookingTrackerInfoMobile","startReviewFlow","leaveProductReviewPage","toState","history","back","simpleToast","getBookingToReview","Products","getAll","filters","searchProductParam","getTotalPageCount","encryptProductURL","trim","getDetail","isNaN","decryptProductURL","json","paramStr","k","val","selectedCategoryId","selectedSubCategoryId","minPrice","maxPrice","finalStr","searchStr","sortByCode","endsWith","substring","$sce","getPriceForRentalPeriod","rentalPeriodInDays","Price3Day","Price5Day","Price7Day","Price10Day","Product_CategoryId","daysFactor","getRentalPeriodInDays","startRentDate","endRentDate","isMoment","diff","ProductBookingDetail","isBookingDateBookedForDateRange","isMobile","Android","userAgent","match","BlackBerry","iOS","Opera","Windows","any","isProductTryAndBuy","extractAndGeoLocateAddressFromObjectForFieldNames","object","addressFieldName","latFieldName","lngFieldName","Number","geoLocatedAddress","stringToDate","dateString","format","dateDelimiter","timeDelimiter","dateTimeSplitter","isHasTime","indexOf","dateTimeSplits","datePartFormat","dateItems","yearI","monthI","dayI","hourI","minuteI","timeItems","timePartFormat","parseInt","getDisplayDataForTransactionStatus","statusId","color","calculatePricingListForProduct","isDelivery","userCredit","isBuy","days","prices","DeliveryAndPickupDetail","Delivery_Fee","PickUp_Address","price","periodFixedPrice","getPriceForRentalPeriodLegacy","priceDescription","description","tooltip","totalPrice","CouponValue","CouponIsPercentage","CouponIsFixed","isCoupon","discount","User_Credit","credit","isCredit","Product_PurchasePrice","Product_Process_Fee","getPriceCalculatedDescriptionForRentalPeriod","priceDivisions","division","divisionPrice","div","getProductFirstAvailableDatesToRent","firstAvailableDates","add","regexPatterns","numbersOnly","minMaxLength","max","RegExp","sorters","bookingLastModifiedEpoch","Last_Modified","playErrorSound","context","AudioContext","o","createOscillator","g","createGain","destination","start","gain","exponentialRampToValueAtTime","currentTime","dataUrlToBlob","dataUrl","binary","atob","array","charCodeAt","Blob","Uint8Array","isCrawler","test","getAddressToDisplayForBooking","isProductTryAndBuyBool","Lender_User_Address","PickUp_Latitude","PickUp_Longitude","calculatePriceingListForBooking","FullEndDate","FullStartDate","Discount","RentAmount","Fix_Amount_Coupon","AmountCharge","parseBookingStepTutorialHTMLTemplateForTranslationId","translationId","translatedText","HTML_TEXT","index","trustAsHtml","getTranslationIdForBookingStatus","bookingStatus","Month","Year","Date Range Template","Custom Date Range","Today","Yesterday","This Week","Last Week","This Month","Last Month","This Year","Last Year","Cancel","Clear","Ok","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sun","Mon","Tue","Wed","Thu","Fri","Sat","January","February","March","April","May","June","July","August","September","October","November","December","Week","getProductDetailUrl","userName","parts","pop","info","getReferralData","JSON_to_URLEncoded","element","idx","createToken","number","exp_month","exp_year","cvc","card","getCustomer","customerId","getCustomerSources","delay","isRight","simple","textContent","hideDelay","gtmService","productReviewService","isMissingAddress","short_name","showInvalidOperationError","finally","acceptRental","resolve2","reject2","rejectRental","e","cancelRental","User_StripeAccount","endRentalForStripeAccountOnly","convertInputElementToBas64","convertFile","imgFile","reader","FileReader","onloadend","img64","original64","serverParsed64","readAsDataURL","$scope","$mdMedia","previous","rejection","deregs","scrollTo","$watch","mgMd","isLoading","fetchDetailedBooking","fetchProduct","fetchProductBookingDetails","$evalAsync","goToProduct","$mdSidenav","isChatCollapsed","preSelectedchat","isGtMd","isGtSM","toggleNav","toggle","mgSm","$cookies","verificationMessage","cat","categoryParam","subCategoryParam","initialSortBy","setLocale","updateHreflang","metaTag","saveLocationToScope","place","gl","long_name","getCity","glString","searchKey","priceRange","distanceRange","defaultCategoryName","defaultCategoryDesc","selectedCategoryName","selectedCategoryBannerImage","selectedSubCategoryName","prepareUrl","prepareQuery","findLatLong","geocodeNow","$broadcast","selectCategory","tempCategory","selectedCategoryDesc","Category_Description","selectedCategoryImagePath","Category_ImagePath","Category_BannerPath","selectedSubCategoryDesc","selectedSubCategoryImagePath","selectedSubCategoryBannerImage","SubCategory_Description","SubCategory_ImagePath","SubCategory_BannerPath","radius","l_id","distance","registerUpdateUrlListener","$watchGroup","update_path","currentSearchStr","Map","set","promoTimeout","hasClass","events","args","elementId","require","googleplaceAutocompletePlace","googleplaceAutocomplete","attrs","placeholder","componentRestrictions","autocomplete","places","Autocomplete","addListener","getPlace","$setViewValue","nodeValue","clearInstanceListeners","isPromo","lendTutorial","imgUrl","steps","borrowTutorial","promoFixCoupon1","couponValue","couponCode","promoFixCoupon2","productTeasers","takingAboutUsImages","getCategoryName","CategoryId","CategoryName","getProductList","TryAndBuyProducts","P2PProducts","ProductList","setTitle","showToast","addNewItem","uploadHandler","emptyProductImage","subCategories","userAddress","isUseUserAddress","newProductModel","Product_SubCategoryId","onUploadClicked","$$postDigest","click","onUploaded","canvasResize","quality","isPreprocessing","cardType","maxW","maxH","isiOS","width","height","tmpUlpoadedImg","validator","valid","errMsg","onCategorySelected","selectedCategory","copy","Product_LocationId","User_AllProducts","formValuesInit","User_Latitude","User_Longitude","tnBCategories","values","stripeService","creditcards","menusService","isHaveSavedCC","isNewCardLayoutOpen","rentStartDate","rentEndDate","userSavedCard","statusError","ccModel","expiration","isTermsAndConditionsAccepted","isSaveCardForFutureTransactions","forms","ccIcon","MasterCard","Visa","American Express","Discover","Unknown","Maestro","JCB","Diners","Diners Club","fetchBookingDetails","calculatePrices","UserCustomerDetail","User_CustomerId","fetchStripeUserCard","toggleNewCardLayout","gotoTermsAndConditions","focus","sourceItem","calculateTransactionPrice","onDatesSelected","couponValidated","deleteCoupon","isDeliveryStatusChange","bookingValidator","ccForm","isValid","$invalid","$valid","$dirty","productLat","productLng","bookNow","User_IsVerfied","customerData","cardData","createNewCardToken","chargeCardRes","chargeCard","User_VerifyingStatus","Message","tokenRes","funding","tokenId","stripeCustomer","rentalDays","productLocationId","unsavedChanges","returnValue","addEventListener","removeEventListener","$mdColors","currentStatusId","BookingStatus","Status_TrackId","popupDescription","close","classList","querySelector","className","titleSpan","applyThemeColors","querySelectorAll","setTrackerDescriptionStyle","isProcessing","changePassModel","newPasswordConfirmation","closeDialog","welcome_message_dialog","isSuccess","answer","retry","verifyUser","forgotPasswordMessage","forgotpasswordStatus","btnForgotPasswordStatus","popupTitle","retryClb","sendToManualClb","isInvalid","loadingText","proposedLanguage","loginMessage","loginFacebookMessage","signupFacebookMessage","signupFacebookStatus","signupMessage","signupStatus","registerFacebookStatus","btnStatus","isFacebookApiLoaded","referralData","promoMessage","ambassadorUserName","register","loginObj","loginStatus","registerFacebook","FbSignup","showTabDialogForgotPassword","runApiMethod","NgMap","$anchorScroll","rentPickersIds","mobile","desktop","productAddress","isLoggedInUser","updateMetaTags","getPageTitle","fetchDetailedProduct","isMyProduct","UserData_ProductBooking","getCategory","subCat","requestRentalDates","dateStart","dateEnd","onRequestRent","componentId","onDatesUpdated","compToUpdate","onStartEndDateSelected","oldAnchor","getCurrentLanguageCode","rating","ratingRounded","profileDefaultImage","product_id","searchedLocation","updateBreadcrumb","productDetail","allCategory","subcategory","productImageBaseUrl","userImageBaseUrl","rentNowUrl","h1","h2","sample","fetchProductAddress","productLocation","setProductAddress","loc","refreshProductDetail","getMetaTags","tag","updateH1","updateH2","scrollToH1","User_ReviewAsLender","parseFloat","toFixed","round","goToAllCategory","goToCategory","goToSubCategory","$$search","rentNow","href","rentNowDesktop","vm","onRating","submitReview","transactionId","stars","Review_Precnt","Review_ProductId","Review_UserId","ReviewDetail_Comment","Review_BookingId","closeProductReview","tabs","fetchUserBookings","User_Booking_Borrower","lastModified","User_Booking_Lender","bookingListItemClick","isMyProfile","isEditing","isUpdating","editableProfile","tempBas64Image","fetchUserProfile","fullName","userFirstName","userLastName","submitProfileEdit","objToSend","uploadImage","logout","User_LocationId","acuantService","selectedUploadMethod","uploadMethods","uploadData","idVerificationMethodPassportTmpl","imgData","isProcessingImg","idVerificationMethodDriverLicenceTmpl","idVerificationMethodIdTmpl","selectUploadMethod","clickToUpload","setFreshForm","verifyId","imgBlob","acuantPassUploadRes","WebResponseCode","WebResponseDescription","FaceImage","base64FaceImage","goog","crypt","base64","encodeByteArray","faceImgBlob","facialMatchRes","ResponseCodeAuthorization","ResponseMessageAuthorization","uploadVerifiedImageToPaladinServers","acuantDuplexUpload","ResponseCodeAutoDetectState","ResponseCodeAutoDetectStateDesc","ResponseCodeProcState","ResponseCodeProcessStateDesc","finishVerificationManual","passUploadRes","finishVerification","NICDLUploadRes","skipVerification","photoIndex","findIndex","elem","attr","deAuthedLoginDiv","style","top","left","cursor","onclick","isReloadPage","isAdded","validateAuth","removeChild","onCouponValidation","isAddingCoupon","addCoupon","validateCoupon","resultCallback","defaultValue","dateRange","updateDateRanges","isDateAvailable","advancedModel","selectedTemplate","pickerModel","pickerTranslations","selectDate","onDesktopSelect","$dates","transactionService","btns","isUserLender","mainColor","isEnabled","isDestructive","Booking_ReviewStatus","Lender_StripeAccount","getTextAndCTAforTransactionStatus","ctaClicked","youWontBeChargedText","getTutorialHTMLTemplate","getStaticBookingStepsP2P","date","isCurrent","rentalStatus","getStaticBookingStepsTnB","setStaticStepAtIndexAsCurrent","staticSteps","atIndex","step","getCurrentStep","updateSteps","statuses","currentStatus","CreatedDate","CreatedTime","startChat","Borrower_QBId","Lender_QBId","messages","compose","isUploadingMedia","userImages","me","canLoadMoreMsgs","setSelectedChat","force","getDetailedChat","goToRental","BookingList","loadMoreMessages","isGettingMoreMsgs","keyPress","$event","which","shiftKey","preventDefault","alert","myImage","recipientImage","canLoadMore","isLoadingMore","unreadDict","selectedChatId","loadChatsList","isReplace","onChatListItemClicked","chatItem","loadMore","isTitleHidden","isDescriptionHidden","att","displayedUser","profilePic","isCanStartChat","titleText","Borrower_Name","Borrower_Image","Borrower_ReviewScore","Borrower_ReviewCount","Lender_User_DisplayPicturePath","User_ReviewCountAsLender","$","containerId","copyTextToClipboard","selection","createTextRange","moveToElementText","select","execCommand","showSimple","getSelection","createRange","selectNode","addRange","component","bindings","[object Object]","translate","rootScope","categoryImageBaseUrl","sce","slider","showCategoriesDiv","priceSliderOption","orientation","distanceSliderOption","customCategoriesTnB","customCategoriesP2P","_this","refreshProducts","refreshCategories","selCategoryId","selSubcategoryId","selectSubCategory","selectCategories","refreshProductList","disabled","extraStyle","menuLists","supportedLanguages","selectedLanguage","menuClick","getMenuItemLink","filterMenuItems","onSelectLanguage","extraHeight","setExtraHeight","baseUrl","profileImageBaseUrl","mdDialog","http","signupacebookMessage","loginFacebookStatus","cookies","userStatus","registerBusEvents","changeLanguage","getObject","currentUser","broadcastChange","ev","targetEvent","cookieExp","setDate","getDate","expires_in","putObject","expires","remove","$mdMenu","$mdComponentRegistry","isScrollOffsetZero","searchText","searchItems","unreadBadge","profileMenu","loggedOutMenu","commonMenu","loggedInMenu","loginSignUpPopupClick","querySearch","textQuery","query","Rank","Infinity","headerMenuClick","initiateSearch","searchBarOnKeyPress","toggleSideNav","isOpen","updateCreditButton","currentCredit","currentCreditText","creditMenuClick","hideSearch","bind","lastState","newState","scrollTop","unbind","stepsList","tutorialTitle","tutorialDescription","attt","buildSourceSet","imagePath","isProfile","sourceSet","lazyLoading","getImagePath","imageType","observer","IntersectionObserver","changes","change","intersectionRatio","srcset","observe","$document","lazyLoader","images","renderTimer","renderDelay","win","documentHeight","documentTimer","documentDelay","isWatchingWindow","checkDocumentHeight","currentDocumentHeight","startRenderTimer","checkImages","visible","hidden","windowHeight","topFoldOffset","bottomFoldOffset","image","isVisible","render","clearRenderTimer","stopWatchingWindow","clearTimeout","off","clearInterval","windowChanged","addImage","on","setInterval","removeImage","splice","lazyImage","source","isRendered","renderSource","is","offset","bottom","setSource","newSource","$observe","transclude","loaderSize","elm","raw","ceil","offsetHeight","scrollHeight","t","whenScrolled","productImage","loading","getCurrentCategory","isNotAllCategory","desc","removeSubCategory","selectedCategoryStr","placeName","setDataForStatusId","statusLabel","customTitle","categoryDescription","descriptionLink","isPopularItems","isRecentItems","productIds","currentProductId","scrollArrows","isRightVisible","isLeftVisible","validateScrollingArrows","fetchProducts","requestParams","getData","onSwipe","isLeft","$target","objToScroll","parentElement","minScrollOffset","visibleWidth","clientWidth","maxScrollOffset","scrollWidth","currentOffset","scrollLeft","itemWidth","itemsInPage","newScrollTo","initialTimes","times","lastOffset","onArrowClick","firstItem","instantiateScroller","scroller","seeAll","getHrefLink","onItemClick","getProductUrl","onItemSwipe","productsList","pager","anchorScroll","yOffset","onFilterChange","innerWidth","getDistanceFromLatLonInKm","lat1","lon1","lat2","lon2","dLat","deg2rad","dLon","sin","cos","atan2","sqrt","deg","PI","pageNumber","refreshPageList","isParentCategorySelected","scrollToAnchor","update","profileImage","readOnly","onRatingSet","calculatePrice","isShowErrorOnFaiure","bookingPickerId","onBuyBtnClicked","onRequestRentBtnClicked","distanceDropDown","selectedRange","myModelVal","changeDistanceFilter","selectedItem","applySearch","autoChild","firstElementChild","$mdAutocompleteCtrl","stopPropagation","keyCode","suggestion","loadResults","isGreenBackground","picSize","userImage","picSizeParsed","sizeStyle","imgServerPath","temp","goToProfile","isMinified","userProducts","fetchUserListings","listItemClick","inputPieces","capitalizeString","inputString","toUpperCase","String","maxChars"],"mappings":"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","file":"app.bundle.js","sourcesContent":["(function (window) {\r\n    let glObj = {};\r\n\r\n    glObj.ENV = 'prod';\r\n    //glObj.ENV = 'test';\r\n    //promotion\r\n    glObj.IS_PROMO = true;\r\n    glObj.START_DATE = \"18\";\r\n    glObj.END_DATE = \"19 Novembre\";\r\n    glObj.COUPON_VALUE = \"25\";\r\n    glObj.COUPON_CODE = \"WEEKEND25\";\r\n    glObj.PROMO_VERSION = \"2\";\r\n    \r\n\r\n    glObj.isProd = () => glObj.ENV === 'prod';\r\n\r\n    glObj.SUPPORTED_LANGS = [\r\n        {code:'en',name:'English', defaultLocation: 'milan italy',tryAndBuyWordPressPath: 'try-our-brands'},\r\n        {code:'it',name:'Italiano', defaultLocation: 'milan italy',tryAndBuyWordPressPath: 'prova-i-nostri-brand'},\r\n        // {code:'de',name:'Deutsch', defaultLocation: 'berlin germany',tryAndBuyWordPressPath: 'marken-anprobieren'}\r\n    ];\r\n\r\n\r\n\r\n\r\n    glObj.RENT_NOW_URL = 'https://qx87h.app.goo.gl/?link=https://paladintrue.com/{0}/?product-detail?{1}&apn=com.a2l.paladin&isi=1129780407&ibi=com.a2l.paladin&efr=1';\r\n    glObj.RENT_URL = 'https://qx87h.app.goo.gl/?link=https://paladintrue.com/it&apn=com.a2l.paladin&isi=1129780407&ibi=com.a2l.paladin';\r\n\r\n    if (glObj.ENV === 'prod') {\r\n        glObj.ROOT_PATH = 'https://rent.paladintrue.com/'\r\n        glObj.BASE_URL = 'https://live.v1.paladintrue.com/';\r\n        glObj.PROFILE_IMAGE_URL = 'https://s3.eu-central-1.amazonaws.com/livepaladinimages/ProfileImage/'; // no suffix slash\r\n        glObj.PRODUCT_IMAGE_URL = 'https://s3.eu-central-1.amazonaws.com/livepaladinimages/ProductImage/'; // no suffix slash\r\n        glObj.CATEGORY_IMAGE_URL = 'https://s3.eu-central-1.amazonaws.com/livepaladinimages/CategoryImage/'; // no suffix slash\r\n        glObj.LOG_LEVEL = 'none';\r\n        glObj.STRIPE_SK = 'sk_live_n1ODuFHO82iZulfbRIBQ0WUa';\r\n\r\n    } else {\r\n        glObj.ROOT_PATH = 'https://webtest.paladintrue.com/'\r\n        glObj.BASE_URL = 'https://staging.paladintrue.com/';\r\n        glObj.PROFILE_IMAGE_URL = 'https://s3.eu-central-1.amazonaws.com/staggingimages/ProfileImage/'; // no suffix slash\r\n        glObj.PRODUCT_IMAGE_URL = 'https://s3.eu-central-1.amazonaws.com/staggingimages/ProductImage/'; // no suffix slash\r\n        glObj.CATEGORY_IMAGE_URL = 'https://s3.eu-central-1.amazonaws.com/staggingimages/CategoryImage/'; // no suffix slash\r\n        glObj.LOG_LEVEL = 'verbose';\r\n        glObj.STRIPE_SK = 'sk_test_Qxfl7rPTVALyVnrMRUkb2l3F';\r\n    }\r\n\r\n    glObj.API_URL = glObj.BASE_URL+'api/Paladin/'; // no suffix slash\r\n    glObj.TOKEN_URL = glObj.BASE_URL+'Token'; // no suffix slash\r\n    glObj.STRIPE_URL = 'https://api.stripe.com/v1';\r\n    glObj.PROMO_SIGNUP_TIMER = 10000;\r\n    window.globals = glObj;\r\n})(window);\r\n","const app = angular.module('paladinApp', [\r\n    'ui.router',\r\n    'ngMeta',\r\n    'zendeskWidget',\r\n    'pascalprecht.translate',\r\n    'paladinPopups',\r\n    'angularReverseGeocode',\r\n    'ngLocationUpdate',\r\n    'ngMaterial',\r\n    'ngMessages',\r\n    'material.svgAssetsCache',\r\n    'ngCookies',\r\n    'uiGmapgoogle-maps',\r\n    'ngMap',\r\n    'base64',\r\n    'ngRoute',\r\n    'angularMoment',\r\n    'ngMaterialDateRangePicker',\r\n    'credit-cards',\r\n    'jkAngularRatingStars'\r\n]);\r\napp\r\n    .config([\r\n        '$stateProvider',\r\n        '$urlRouterProvider',\r\n        '$httpProvider',\r\n        '$locationProvider',\r\n        'ZendeskWidgetProvider',\r\n        '$mdThemingProvider',\r\n        'enums',\r\n        function (\r\n            $stateProvider,\r\n            $urlRouterProvider,\r\n            $httpProvider,\r\n            $locationProvider,\r\n            ZendeskWidgetProvider,\r\n            $mdThemingProvider,\r\n            enums\r\n        ) {\r\n\r\n            const paladinTheme = $mdThemingProvider.extendPalette('green', {\r\n                '500': '#69C187',\r\n                '200': '#01b3eb',\r\n                'A200': 'rgba(255,255,255,0.05)',\r\n                'A300': '#484848',\r\n                'A400': 'rgba(72,72,72,0.5)',\r\n                'A500': '#ffffff',\r\n                'A600': '#f6f6f6',\r\n                'A700': '#000'\r\n            });\r\n            const rentOrderStatusTheme = $mdThemingProvider.definePalette('rentOrderStatusTheme', {\r\n                '50': '#69C187', //available,\r\n                '100': '#fb814a', // requested\r\n                '200': '#ee4e4a', // timeout / canceled (pre accept) / canceled by lender / canceled by borrower / declined\r\n                '300': '#4ec07e', // accepted\r\n                '400': '#0d87f6', // started\r\n                '500': '#8d72f4', // ended\r\n                '600': '#fff', // not in use (must have for palette definition)\r\n                '700': '#fff', // not in use (must have for palette definition)\r\n                '800': '#fff', // not in use (must have for palette definition)\r\n                '900': '#fff', // not in use (must have for palette definition)\r\n                'A100': '#fff', // not in use (must have for palette definition)\r\n                'A200': '#fff', // not in use (must have for palette definition)\r\n                'A400': '#fff', // not in use (must have for palette definition)\r\n                'A700': '#000000', // not in use (must have for palette definition)\r\n            });\r\n            $mdThemingProvider.definePalette('paladinTheme', paladinTheme);\r\n\r\n            $mdThemingProvider.theme('default')\r\n                .primaryPalette('paladinTheme')\r\n                .accentPalette('paladinTheme');\r\n\r\n            $mdThemingProvider.theme('rentOrderStatus')\r\n                .primaryPalette('rentOrderStatusTheme')\r\n                .accentPalette('rentOrderStatusTheme');\r\n\r\n            ZendeskWidgetProvider.init({\r\n                accountUrl: 'paladintrue.zendesk.com',\r\n                beforePageLoad: function (zE) {\r\n                    zE.hide();\r\n                }\r\n                // See below for more settings\r\n            });\r\n            //in URL patterns this ocde will disable # and ! before path name\r\n            $locationProvider.html5Mode(true);\r\n            /*\r\n            $locationProvider.html5Mode({\r\n              enabled: true,\r\n              requireBase: false\r\n            });\r\n            */\r\n            delete $httpProvider.defaults.headers.common['X-Requested-With'];\r\n\r\n\r\n            $stateProvider\r\n                .state('app', {\r\n                    url: '/:languageCode',\r\n                    templateUrl: './views/routes/app.html',\r\n                    controller: 'appController',\r\n                    isPublic: true,\r\n                    abstract: true,\r\n                    params: {\r\n                        languageCode: localStorage.getItem(enums.localStorageKeys.preferredLanguage) || 'it',\r\n                    }\r\n                })\r\n                .state('app.home', {\r\n                    url: '/',\r\n                    templateUrl: './views/routes/homeV2.html',\r\n                    controller: 'homeV2Controller',\r\n                    isPublic: true,\r\n                    data: {\r\n                        isCollapsingHeader: true,\r\n                    },\r\n                    resolve: {\r\n                        validReferralCode: () => {\r\n                            return false;\r\n                        }\r\n                    }\r\n                })\r\n                .state('app.emailVerification', {\r\n                    url: '/email-validation',\r\n                    templateUrl: './views/routes/homeV2.html',\r\n                    controller: 'homeV2Controller',\r\n                    isPublic: true,\r\n                    data: {\r\n                        isCollapsingHeader: true,\r\n                    }\r\n                })\r\n                .state('app.referredRegistration', {\r\n                    url: '/r/:referralNameCode',\r\n                    templateUrl: './views/routes/homeV2.html',\r\n                    controller: 'homeV2Controller',\r\n                    isPublic: true,\r\n                    resolve: {\r\n                        validReferralCode: [\r\n                            '$stateParams',\r\n                            'appStateManager',\r\n                            'referralsService',\r\n                            function ($stateParams, appStateManager, referralsService) {\r\n                                // console.log('###### ', $stateParams.referralNameCode, ' .. ', appStateManager, ' .. ' , referralsService)\r\n                                return referralsService.validateReferralCode($stateParams.referralNameCode);\r\n                            }]\r\n                    }\r\n                })\r\n                .state('app.browse', {\r\n                    url: '/categorie/:category/:subCategory/:city?search&sortBy&pageIndex',\r\n                    templateUrl:'./views/routes/home.html',\r\n                    controller:'homeController',\r\n                    reloadOnSearch: false,\r\n                    isPublic: true,\r\n                    isCustomSEO: true,\r\n                    params: {\r\n                        category: { squash: true, value: null },\r\n                        subCategory: { squash: true, value: null },\r\n                        city: { squash: true, value: null },\r\n                        search: { squash: true, value: null },\r\n                        sortBy: { squash: true, value: null },\r\n                        pageIndex: { squash: true, value: null },\r\n                        isTryAndBuy: true,\r\n                        isResetSearch: false,\r\n                    }\r\n                })\r\n                .state('app.browsePrivate', {\r\n                    url: '/categorie/privato/:category/:subCategory/:city?search&sortBy&pageIndex',\r\n                    templateUrl:'./views/routes/home.html',\r\n                    controller:'homeController',\r\n                    reloadOnSearch: false,\r\n                    isPublic: true,\r\n                    isCustomSEO: true,\r\n                    params: {\r\n                        category: { squash: true, value: null },\r\n                        subCategory: { squash: true, value: null },\r\n                        city: { squash: true, value: null },\r\n                        search: { squash: true, value: null },\r\n                        sortBy: { squash: true, value: null },\r\n                        pageIndex: { squash: true, value: null },\r\n                        isTryAndBuy: false,\r\n                        isResetSearch: false,\r\n                    }\r\n                })\r\n                .state('app.products', {\r\n                    url: '/product',\r\n                    abstract: true,\r\n                })\r\n                // .state('app.blog', {\r\n                //     url: '/blog',\r\n                // })\r\n                .state('app.products.selectedProduct', {\r\n                    url: '/:productNameAndId',\r\n                    templateUrl: './views/routes/productDetailed.html',\r\n                    controller: 'productDetailedController',\r\n                    isPublic: true,\r\n                    params: {\r\n                        productNameAndId: undefined,\r\n                        productId: 0\r\n                    }\r\n                })\r\n                .state('app.products.newProduct', {\r\n                    url: '/new',\r\n                    templateUrl: './views/routes/newProduct.html',\r\n                    controller: 'newProductController'\r\n                })\r\n                .state('app.products.productReview', {\r\n                    url: '/review/:bookingId',\r\n                    templateUrl: './views/routes/productReview.html',\r\n                    controller: 'productReviewController',\r\n                    isPublic: true,\r\n                    resolve: {\r\n                        prereqData: [\r\n                            '$stateParams',\r\n                            'appStateManager',\r\n                            function($stateParams, appStateManager){\r\n                                // collect and validate transaction details\r\n                                console.log('$state productReview params', $stateParams)\r\n\r\n                                return {\r\n                                    userId: $stateParams.Borrower_Id,\r\n                                    productId: null,\r\n                                    currentLang: appStateManager.getCurrentLang(),\r\n                                }\r\n                            }\r\n                        ]\r\n                    }\r\n                })\r\n\r\n                // .state('app.products.selectedProduct', {\r\n                //         url: '/:productId',\r\n                //         templateUrl:'./views/routes/productPreview.html',\r\n                //         controller:'PreviewController'\r\n                //     });\r\n                .state('app.profiles', {\r\n                    url: '/profiles',\r\n                    abstract: true,\r\n                })\r\n                .state('app.profiles.myProfile', {\r\n                    url: '/myProfile',\r\n                    templateUrl: './views/routes/userProfile.html',\r\n                    controller: 'userProfileController',\r\n                    params: {\r\n                        userId: null,\r\n                    }\r\n                })\r\n                .state('app.profiles.publicProfile', {\r\n                    url: '/:userId',\r\n                    templateUrl: './views/routes/userProfile.html',\r\n                    controller: 'userProfileController',\r\n                    isPublic: true,\r\n                    params: {\r\n                        userId: null,\r\n                    }\r\n                })\r\n                .state('app.myListings', {\r\n                    url: '/myListings',\r\n                    templateUrl: './views/routes/myListings.html',\r\n                    controller: 'myListingsController',\r\n                    isPublic: true,\r\n                })\r\n                .state('app.bookings', {\r\n                    url: '/my-rentals',\r\n                    abstract: true,\r\n                })\r\n                .state('app.bookings.userBookings', {\r\n                    url: '',\r\n                    templateUrl: './views/routes/userBookings.html',\r\n                    controller: 'userBookingsController',\r\n                })\r\n                .state('app.bookings.bookingDetailed', {\r\n                    url: '/:bookingId',\r\n                    templateUrl: './views/routes/bookingDetailed.html',\r\n                    controller: 'bookingDetailedController',\r\n                    params: {\r\n                        bookingId: null,\r\n                    }\r\n                })\r\n\r\n                .state('app.bookings.paymentDetailed', {\r\n                    url: '/payment',\r\n                    templateUrl: './views/routes/paymentDetailed.html',\r\n                    controller: 'paymentDetailedController',\r\n                    params: {\r\n                        productId: { squash: true, value: null },\r\n                        startDate: { squash: true, value: null },\r\n                        endDate: { squash: true, value: null },\r\n                        purchase: { squash: true, value: null},\r\n                        bookingId: { squash: true, value: null },\r\n                    }\r\n                })\r\n                .state('verification', {\r\n                    url: '/:languageCode/verification',\r\n                    params: {\r\n                        languageCode: localStorage.getItem(enums.localStorageKeys.preferredLanguage) || 'it',\r\n                    },\r\n                    template: '<div ui-view flex=\"100\" layout=\"row\" layout-align=\"start center\" layout-fill></div>'\r\n                })\r\n                .state('verification.user', {\r\n                    url: '/verifyMe/:bookingId',\r\n                    templateUrl: './views/routes/userVerification.html',\r\n                    controller: 'userVerificationController',\r\n                    params: {\r\n                        bookingId: null,\r\n                    }\r\n                })\r\n                .state('app.chat', {\r\n                    url: '/messaging/:chatId',\r\n                    params: {\r\n                        languageCode: localStorage.getItem(enums.localStorageKeys.preferredLanguage) || 'it',\r\n                        chatId: null,\r\n                    },\r\n                    templateUrl: './views/routes/chat.html',\r\n                    controller: 'chatController',\r\n                    data: {\r\n                        isHeaderHidden: true,\r\n                    }\r\n                })\r\n           ;\r\n\r\n            // Force urls with lang code\r\n            $urlRouterProvider.rule(function ($injector, $location) {\r\n                //what this function returns will be set as the $location.url\r\n                let path = $location.path(),\r\n                    langCode = path.split('/')[1], // 0 is \"\" cuz path begins with /\r\n                    lang = window.globals.SUPPORTED_LANGS.find((lang) => lang.code === langCode.toLowerCase());\r\n                if (!lang) {\r\n                    // Return url appended by lang code\r\n                    return `/${localStorage.getItem(enums.localStorageKeys.preferredLanguage) || 'it'}${path}`;\r\n                } else {\r\n                    if (lang.code != localStorage.getItem(enums.localStorageKeys.preferredLanguage)) {\r\n                        // $rootScope.$emit(enums.busEvents.preferredLanguageChange,{currentLang: lang});\r\n                        // return\r\n                        localStorage.setItem(enums.localStorageKeys.preferredLanguage, lang.code);\r\n                        location.reload();\r\n                        return path.replace(langCode, lang.code)\r\n                    }\r\n                }\r\n            });\r\n            // Default route case doesn't exit\r\n            $urlRouterProvider.otherwise(function ($injector, $location) {\r\n                if ($location.path().includes('/blog'))\r\n                    return;\r\n                let path = $location.path(),\r\n                    langCode = path.split('/')[1], // 0 is \"\" cuz path begins with /\r\n                    lang = window.globals.SUPPORTED_LANGS.find((lang) => lang.code === langCode.toLowerCase());\r\n                return `/${localStorage.getItem(enums.localStorageKeys.preferredLanguage) || lang || 'it'}/`\r\n            });\r\n\r\n        }])\r\n    .run([\r\n        'ngMeta',\r\n        '$window',\r\n        '$rootScope',\r\n        '$location',\r\n        'facebook',\r\n        'enums',\r\n        '$trace',\r\n        '$transitions',\r\n        '$state',\r\n        'navigationService',\r\n        'dataService',\r\n        'chatService',\r\n        'appStateManager',\r\n        function (ngMeta,\r\n                  $window,\r\n                  $rootScope,\r\n                  $location,\r\n                  facebook,\r\n                  enums,\r\n                  $trace,\r\n                  $transitions,\r\n                  $state,\r\n                  navigationService,\r\n                  dataService,\r\n                  chatService,\r\n                  appStateManager) {\r\n            ngMeta.init();\r\n            dataService.init();\r\n            chatService.init();\r\n\r\n            $rootScope.facebook_user = {};\r\n            $rootScope.facebookApiLoaded = false;\r\n            $rootScope.$emit(enums.busEvents.facebookApiLoad, {isLoaded: false});\r\n            $window.fbAsyncInit = function () {\r\n                FB.init({\r\n                    appId: '1156274361103964',\r\n                    channelUrl: 'app/channel.html',\r\n                    status: true,\r\n                    cookie: true,\r\n                    xfbml: true,\r\n                    version: 'v2.12'\r\n                });\r\n\r\n                FB.Event.subscribe('auth.authResponseChange', function (res) {\r\n                    if (res.status === 'connected') {\r\n                        FB.api('/me', {\r\n                            fields: ['first_name', 'last_name', 'email', 'id', 'address', 'location', 'name']\r\n                        }, function (res) {\r\n                            $rootScope.$emit(enums.busEvents.facebookApiLoad, {isLoaded: true});\r\n                            $rootScope.$apply(function () {\r\n                                $rootScope.facebook_user = res;\r\n                                $rootScope.facebookApiLoaded = true;\r\n\r\n                            });\r\n                        });\r\n                    }\r\n                });\r\n            };\r\n\r\n            $rootScope.stateData = {\r\n                isCollapsingHeader: true,\r\n                isHeaderHidden: false,\r\n            };\r\n\r\n            if (!window.globals.isProd()) {\r\n                $trace.enable('TRANSITION');\r\n                $transitions.onStart({}, function (trans) {\r\n                    console.log('$transitions.onStart', trans);\r\n                });\r\n                $rootScope.$on('$stateChangeStart', function () {\r\n                    console.log('$stateChangeStart', arguments)\r\n                });\r\n            }\r\n\r\n            // Redirect for non public routes\r\n            $transitions.onBefore({}, function (trans) {\r\n                const nextState = trans.to();\r\n                if (!nextState.isPublic && !appStateManager.getUserId()) {\r\n                    dataService.forceLogin(trans);\r\n                    return trans.router.stateService.target('app.home')\r\n                }\r\n            });\r\n\r\n            $transitions.onSuccess({}, function (trans) {\r\n                const nextState = trans.to();\r\n                $rootScope.isMenuOpen = {value: false};\r\n                $rootScope.currentState = {value: $state.current.name};\r\n\r\n                if ($state.current.data) {\r\n                    $rootScope.stateData.isCollapsingHeader = $state.current.data.isCollapsingHeader || false;\r\n                    $rootScope.stateData.isHeaderHidden = $state.current.data.isHeaderHidden || false;\r\n                }\r\n\r\n                // Update update SEO if controller doesn't override it\r\n                if (!nextState.isCustomSEO)\r\n                    dataService.updateGeneralSEO();\r\n            });\r\n\r\n        }]);\r\n\r\nangular.module('paladinApp').factory('facebook', function () {\r\n    var facebookService = {};\r\n\r\n    facebookService.GetFacebook = function () {\r\n        var _self = this;\r\n\r\n        FB.Event.subscribe('auth.statuschange', function (res) {\r\n            if (res.status === 'connected') {\r\n                FB.api('/me', function (res) {\r\n                    $rootScope.$apply(function () {\r\n                        $rootScope.user = _self.user = res;\r\n                        console.log(res);\r\n                    });\r\n                });\r\n            }\r\n        });\r\n        return 'success';\r\n    };\r\n    return 'done';\r\n});\r\n\r\nangular.module('paladinApp').directive(\"fbButton\", function () {\r\n    return {\r\n        restrict: 'A',\r\n        link: function (scope, iElement, iAttrs) {\r\n\r\n            var languageCodeFacebook = 'en_EN';\r\n            if (scope.currentLang == 'it') {\r\n                languageCodeFacebook = 'it_IT';\r\n            } else if (scope.currentLang == 'de') {\r\n                languageCodeFacebook = 'de_DE';\r\n            }\r\n            (function (d) {\r\n                var js,\r\n                    id = 'facebook-jssdk',\r\n                    ref = d.getElementsByTagName('script')[0];\r\n\r\n                js = d.createElement('script');\r\n                js.id = id;\r\n                js.async = true;\r\n                js.src = \"//connect.facebook.net/\" + languageCodeFacebook + \"/sdk.js\";\r\n\r\n                if (d.getElementById(id)) {\r\n                    ref.parentNode.replaceChild(js, d.getElementById(id));\r\n                    var head = document.getElementsByTagName('head')[0];\r\n                    head.appendChild(js);\r\n                    //  ref.parentNode.insertBefore(js, ref);\r\n                } else {\r\n                    ref.parentNode.insertBefore(js, ref);\r\n\r\n                }\r\n                if (typeof FB != \"undefined\") {\r\n                    if (FB) {\r\n                        FB.XFBML.parse(iElement[0].parent);\r\n                    }\r\n                }\r\n            }(document));\r\n        }\r\n    }\r\n});\r\n\r\nangular.module('paladinApp').run(['$route', '$rootScope', '$location', function ($route, $rootScope, $location) {\r\n    var original = $location.path;\r\n    $location.path = function (path, reload) {\r\n        if (reload === false) {\r\n            var lastRoute = $route.current;\r\n            var un = $rootScope.$on('$locationChangeSuccess', function () {\r\n                $route.current = lastRoute;\r\n                un();\r\n            });\r\n        }\r\n        return original.apply($location, [path]);\r\n    };\r\n}]);\r\n\r\n\r\n","angular.module('paladinApp')\r\n    .constant('enums', {\r\n        busEvents: {\r\n            onAppOnlineState: 'PT_BE_onAppOnlineState',\r\n            $routeChangeError:'$routeChangeError',\r\n            userLogin: 'PT_BE_userLogin',\r\n            userSignup: 'PT_BE_userSignup',\r\n            userLogout: 'PT_BE_userLogout',\r\n            preferredLanguageChange: 'PT_BE_preferredLanguageChange',\r\n            updatedUser: 'PT_BE_updatedUser',\r\n            facebookApiLoad: 'PT_BE_facebookApiLoad',\r\n            tokenRefresh:'PT_BE_tokenRefresh',\r\n            triggerEmailValidation: 'PT_BE_triggerEmailValidation',\r\n            locationUpdate: 'PT_BE_locationUpdate',\r\n            categoriesUpdate: 'PT_BE_categoriesUpdate',\r\n            googlePlacesAutocompletePlaceChanged: 'PT_BE_googlePlacesAutocompletePlaceChanged',\r\n            reloadDetailedBooking: 'PT_BE_reloadDetailedBooking',\r\n            footerExtraHeight: 'PT_BE_footerExtraHeight',\r\n            scrollMainScrollerToTop: 'PT_BE_scrollMainScrollerToTop',\r\n            rentalRequestPickerUpdateDates: 'PT_BE_rentalRequestPicker',\r\n        },\r\n        busNavigation: {\r\n            homePage:'PT_BN_homePage',\r\n            productDetailed: 'PT_BN_productDetailed',\r\n            browseCategory: 'PT_BN_browseCategory',\r\n            browseKeyword: 'PT_BN_browseKeyword',\r\n            browseSort: 'PT_BN_browseSort',\r\n            switchBrowseMode: 'PT_BN_browseModeSwitch',\r\n            userProfile: 'PT_BN_userProfile',\r\n            userListings: 'PT_BN_userListings',\r\n            newProduct: 'PT_BN_newProduct',\r\n            rentals: 'PT_BN_rentals',\r\n            transactionDetailed: 'PT_BN_transactionDetailed',\r\n            idVerification: 'PT_BN_idVerification',\r\n            userReview: 'PT_BN_userReview',\r\n            paymentDetailed: 'PT_BN_paymentDetailed',\r\n            chat: 'PT_BN_chat',\r\n        },\r\n        busChatEvents: {\r\n            updateUnreadCount: 'PT_BCE_updateUnreadCount',\r\n            newMessage: 'PT_BCE_newMessage',\r\n            detailedChatSelected: 'PT_BCE_detailedChatSelected',\r\n            startNewMessagesPoller: 'PT_BCE_startNewMessagesPoller',\r\n            selectPendingChat: 'PT_BCE_selectPendingChat',\r\n        },\r\n        ngMetaValues: {\r\n            currentUrl: (langCode) => `currentUrl_${langCode}`, // APPEND LANG\r\n        },\r\n        categoriesBannersPaths: {\r\n            all: {\r\n                en: '/assets/banner-try-and-buy-en.jpg',\r\n                it: '/assets/banner-try-and-buy-it.jpg'\r\n            },\r\n            promo: \"/assets/promo-banner-\"+window.globals.PROMO_VERSION+\".jpg\",\r\n            promo1: \"/assets/promo1-\"+window.globals.PROMO_VERSION+\".jpg\",\r\n            promo2: \"/assets/promo2-\"+window.globals.PROMO_VERSION+\".jpg\",\r\n            addProduct: '/assets/all-categories-banner-3.png',\r\n            allP2P: '/assets/all-categories-banner-3.png',\r\n\r\n        },\r\n        localStorageKeys: {\r\n            jwtToken: 'PT_LSK_jwt_token',\r\n            refreshToken: 'PT_LSK_refreshToken',\r\n            preferredLanguage: 'PT_LSK_preferredLanguage',\r\n            userId: 'PT_persistAuth',\r\n            locationLatLong: 'PT_LSK_locationLatLong',\r\n            pendingPrivateState: 'PT_LSK_pendingPrivateState',\r\n        },\r\n        allCategories: {\r\n            'en':'All Categories',\r\n            'it':'Tutte le Categorie',\r\n            'de':'Alle Kategorien'\r\n        },\r\n        secret: 'd05ac55661e27663c025aca7047c825908ae1562',\r\n        inAppSideNavsIds: {\r\n          mainMobileNav: 'main-mobile-side-nav',\r\n          chatSideNav: 'chat-list-side-nav'\r\n        },\r\n        categoriesIds: {\r\n            tryAndBuy: window.globals.isProd() ? 11 : 15,\r\n            outdoor: window.globals.isProd() ? 20 : 12,\r\n            homeAppliance: window.globals.isProd() ? 18 : 8,\r\n            hiTech: window.globals.isProd() ? 17 : 2,\r\n            smartMobility: window.globals.isProd() ? 19 : 4,\r\n            kids: window.globals.isProd() ? 22 : 16,\r\n        },\r\n        productsSortOptions: {\r\n            geoLocation:'SortByGeoLocation',\r\n            popularity: 'SortByPopularity',\r\n            bestProduct: 'SortByBestProduct',\r\n            review: 'SortByReview',\r\n            lowPrice: 'SortByLowPrice',\r\n            highPrice: 'SortByHighPrice',\r\n            recent: 'SortByRecent',\r\n        },\r\n        productsSortByTextCode: {\r\n            SortByPopularity: 'POPULARITY',\r\n            SortByRecent: 'MREC',\r\n            SortByGeoLocation: 'NEAREST',\r\n            SortByBestProduct: 'RELEVANCE',\r\n            SortByLowPrice: 'LP',\r\n            SortByHighPrice: 'HP'\r\n        },\r\n        userProductsFilter: {\r\n            borrowedProducts: 'BorrowedProduct',\r\n            lentProduct: 'LentProduct',\r\n            allProducts:'AllProduct',\r\n            myProductsToBorrow: 'MyProductsToBorrow',\r\n        },\r\n        productRentalStatus: {\r\n            available: -1,\r\n            requested: 1,\r\n            notVerified: 2,\r\n            verified: 3,\r\n            timeout: 4,\r\n            denied: 5,\r\n            canceled: 6,\r\n            accepted: 7,\r\n            started: 8,\r\n            ended: 9,\r\n            criticalCancel: 10,\r\n            moderateCancel: 11,\r\n            canceledByLender: 12,\r\n            timeoutByBorrower: 13,\r\n            verifying: 14,\r\n            booked: 15,\r\n\r\n        },\r\n        productRentalStatusNames: {\r\n            requested: 'requested',\r\n            notVerified: 'notverified',\r\n            verified: 'verified',\r\n            timeout: 'timeout',\r\n            denied: 'denied',\r\n            cancelled: 'cancelled',\r\n            criticalCancel: 'cancellation-Critical',\r\n            moderateCancel: 'cancellation-Moderate',\r\n            accepted: 'accepted',\r\n            started: 'started',\r\n            ended: 'ended',\r\n            canceledByLender: 'cancelled-By-Lender',\r\n            timeoutByBorrower: 'card_not_verified_timeout'\r\n        },\r\n        trackingStep: {\r\n            pending: 0,\r\n            success: 1,\r\n            failure: 2,\r\n        },\r\n        bookingReviewStatus: {\r\n            noReview: 0, // booking_ReviewStatus 0 // no-review\r\n            reviewByBorrower: 1, // booking_ReviewStatus 1 // review by lender\r\n            reviewByLender: 2,\r\n            reviewByBoth: 3, // booking_ReviewStatus 2 // review by borrower\r\n        },\r\n        idVerificationMethod: {\r\n            passport: 'passport',\r\n            driverLicense: 'driverLicense',\r\n            id: 'id',\r\n        },\r\n        acuantImageSource: {\r\n            mobileCropped: 101,\r\n            scanShellTwain: 102,\r\n            SnapShell: 103,\r\n            Other: 105,\r\n        },\r\n        acuantRegions: {\r\n            USA: 0,\r\n            Canada: 1,\r\n            SouthAmerica: 2,\r\n            Europe: 3,\r\n            Australia: 4,\r\n            Asia: 5,\r\n            GeneralDocs: 6,\r\n            Africa: 7.\r\n        }\r\n    });\r\n\r\n/*\r\nProd\r\n\"Category_Id\": 11,\"Category_Name\": \"Try the brands\",\r\n\"Category_Id\": 2,\"Category_Name\": \"Hi-Tech\",\r\n\"Category_Id\": 4,\"Category_Name\": \"Music\",\r\n\"Category_Id\": 9,\"Category_Name\": \"Outdoor\",\r\n\"Category_Id\": 7,\"Category_Name\": \"Home & Garden\",\r\n\"Category_Id\": 1,\"Category_Name\": \"Sports\",\r\n\"Category_Id\": 8,\"Category_Name\": \"Clothes\",\r\n\"Category_Id\": 13,\"Category_Name\": \"Events\",\r\n\"Category_Id\": 12,\"Category_Name\": \"Props\",\r\n\"Category_Id\": 10,\"Category_Name\": \"Other\",\r\n\r\nTest\r\n\"Category_Id\": 12,\"Category_Name\": \"Sports\",\r\n\"Category_Id\": 15,\"Category_Name\": \"Try & Buy\",\r\n\"Category_Id\": 8,\"Category_Name\": \"Clothes\",\r\n\"Category_Id\": 2,\"Category_Name\": \"Hi-Tech\",\r\n\"Category_Id\": 7,\"Category_Name\": \"Home & Garden\",\r\n\"Category_Id\": 4,\"Category_Name\": \"Music\",\r\n */","'use strict';\r\nangular.module('paladinApp')\r\n    .service('acuantService',[\r\n        '$rootScope',\r\n        '$http',\r\n        '$base64',\r\n        function (\r\n            $rootScope,\r\n            $http,\r\n            $base64) {\r\n\r\n            const ACUANT_URL = 'https://cssnwebservices.com/CSSNService/CardProcessor';\r\n            const LISENCE = $base64.encode(window.globals.isProd() ? 'A0E66E952D88' : 'E265037472E6');\r\n            const post = (path,imageData) => {\r\n                return $http({\r\n                    method: 'POST',\r\n                    url: ACUANT_URL + path,\r\n                    headers: {\r\n                        // 'Access-Control-Allow-Headers': 'Content-Type',\r\n                        // 'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\r\n                        // 'Access-Control-Allow-Origin': '*',\r\n                        'Content-Type': 'application/octet-stream; charset=utf-8;',\r\n                        'Authorization': `LicenseKey ${LISENCE}`,\r\n                    },\r\n                    \r\n                    dataType: 'json',\r\n                    data: imageData,\r\n\r\n                })\r\n            };\r\n            const postDuplex = (path,imageData) => {\r\n                return $http({\r\n                    method: 'POST',\r\n                    url: ACUANT_URL + path,\r\n                    transformRequest: angular.identity,\r\n                    headers: {\r\n                        // 'Access-Control-Allow-Headers': 'Content-Type',\r\n                        // 'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\r\n                        // 'Access-Control-Allow-Origin': '*',\r\n                        'Content-Type': undefined,\r\n                        'Authorization': `LicenseKey ${LISENCE}`,\r\n                    },\r\n                    \r\n                    dataType: 'json',\r\n                    data: imageData,\r\n\r\n                })\r\n            };\r\n            const processPassportImage = ({imageToProcess, imageSource, usePreprocessing}) => {\r\n                return post(`/ProcessPassport/true/true/true/0/150/${usePreprocessing.toString()}/${imageSource.toString()}/true/false`,imageToProcess);\r\n            };\r\n\r\n            const processNICDLDuplexImage = ({frontImage, backImage,selectedRegion, imageSource, usePreprocessing}) =>{\r\n                const imgsToProcess = new FormData();\r\n                imgsToProcess.append(\"frontImage\", frontImage);\r\n                imgsToProcess.append(\"backImage\", backImage);\r\n                return postDuplex(`/ProcessDLDuplex/${selectedRegion}/true/-1/true/false/true/0/150/${imageSource.toString()}/${usePreprocessing.toString()}/true/false`, imgsToProcess);\r\n                    // .success(function(){\r\n                    //     console.log(\"SUCCESS\");\r\n                    // })\r\n                    // .error(function(){\r\n                    //     console.log(\"ERROR\");\r\n                    // });\r\n            };\r\n\r\n\r\n            const processDriversLicense = ({imageToProcess, selectedRegion, imageSource, usePreprocessing}) => {\r\n                return post(`/ProcessDriversLicense/${selectedRegion}/true/-1/true/true/true/0/150/${usePreprocessing.toString()}/${imageSource.toString()}/true/false`,imageToProcess)\r\n            };\r\n\r\n            const processFacialMatch = ({idFaceImage, selfie}) => {\r\n                const facialMatchData = new FormData();\r\n                facialMatchData.append(\"idFaceImage\", idFaceImage);\r\n                facialMatchData.append(\"selfie\", selfie);\r\n                return post(`/FacialMatch`,facialMatchData);\r\n            };\r\n\r\n\r\n            return {\r\n                processPassportImage,\r\n                processNICDLDuplexImage,\r\n                processFacialMatch,\r\n                processDriversLicense\r\n            }\r\n    }]);","angular.module('paladinApp')\r\n    .service('apiService',[\r\n        '$rootScope',\r\n        '$q',\r\n        '$http',\r\n        '$base64',\r\n        'enums',\r\n        'ptLog',\r\n        'appStateManager',\r\n        function (\r\n            $rootScope,\r\n            $q,\r\n            $http,\r\n            $base64,\r\n            enums,\r\n            ptLog,\r\n            appStateManager) {\r\n\r\n            const self = this;\r\n\r\n            self.ENV = window.globals.API_URL.slice(0,-1);\r\n            self.timeoutCounter = 0;\r\n            self.maxTimeouts = 5;\r\n            self.raiseTimeout = function() {\r\n                if (self.timeoutCounter <= self.maxTimeouts)\r\n                    self.timeoutCounter += 1;\r\n                if (self.timeoutCounter > self.maxTimeouts && $rootScope.isAppOnline)\r\n                    $rootScope.$emit(enums.busEvents.onAppOnlineState, false)\r\n            };\r\n            self.loweTimeout = function() {\r\n                if (self.timeoutCounter > 0)\r\n                    self.timeoutCounter -= 1;\r\n                if (self.timeoutCounter < self.maxTimeouts && !$rootScope.isAppOnline)\r\n                    $rootScope.$emit(enums.busEvents.onAppOnlineState, true)\r\n            };\r\n\r\n            self.getHttpConfig = function(params, headers) {\r\n                let config = {\r\n                    headers: {\r\n                        'Access-Control-Allow-Origin': '*',\r\n                        'X-Requested' : null,\r\n                        'Content-Type' : 'application/json; charset=utf-8',\r\n                        'Access-Control-Allow-Methods': 'GET, POST, PATCH, PUT, DELETE, OPTIONS',\r\n                        'Access-Control-Allow-Headers': 'Origin, Content-Type, X-Auth-Token',\r\n                    }\r\n                };\r\n                if (localStorage.getItem(enums.localStorageKeys.jwtToken)) {\r\n                    config.headers['Authorization'] = localStorage.getItem(enums.localStorageKeys.jwtToken);\r\n                }\r\n\r\n                if (headers) {\r\n                    Object.keys(headers).forEach((headerKey) => {\r\n                        config.headers[headerKey] = headers[headerKey];\r\n                    });\r\n                }\r\n\r\n                if (params) {\r\n                    config.params = params;\r\n                }\r\n\r\n                return config;\r\n            };\r\n\r\n            self.getDefaultParams = () => {\r\n                return {\r\n                    LanguageCode: appStateManager.getCurrentLang(),\r\n                }\r\n            };\r\n\r\n            const maxRetries = 5;\r\n            self.getRequest = function getData (path, params, headers, curRetryCounter) {\r\n                let deferred = $q.defer();\r\n                $http.get(self.ENV + path, self.getHttpConfig(params, headers))\r\n                    .then(function(response) {\r\n                        self.loweTimeout();\r\n                        if ((!response || !response.data) || response.data.Status == 'error') {\r\n                            deferred.reject(response);\r\n                        } else {\r\n                            deferred.resolve(response.data);\r\n                        }\r\n                        // if (response.status === 204) {\r\n                        //     deferred.reject(response);\r\n                        // } else {\r\n                        //     deferred.resolve(response.data);\r\n                        // }\r\n                    }, function(response) {\r\n                        if (!response) {\r\n                            console.warn('R_U');\r\n                            deferred.reject();\r\n                            return;\r\n                        }\r\n\r\n                        if (response.status === 401 && localStorage.getItem(enums.localStorageKeys.refreshToken)) {\r\n                            ptLog.log('Refreshing Token');\r\n                            self.apiMethods.users.refreshToken(localStorage.getItem(enums.localStorageKeys.refreshToken))\r\n                                .then((response) => {\r\n                                    ptLog.log('Refreshing Token success');\r\n                                    $rootScope.$emit(enums.busEvents.tokenRefresh,response.data);\r\n                                    setTimeout(() => {\r\n                                        self.getRequest(path, params,headers,curRetryCounter)\r\n                                            .then(deferred.resolve)\r\n                                            .catch(deferred.reject);\r\n                                    },500)\r\n                                })\r\n                                .catch(deferred.reject)\r\n                        } else if (response.status === 423) { /** RETRY HANDLER */\r\n                            if (!curRetryCounter) curRetryCounter = 0;\r\n\r\n                            if (curRetryCounter < maxRetries) {\r\n                                curRetryCounter++;\r\n                                let waitingBackoffTime_ms = curRetryCounter * 500; //ms\r\n                                setTimeout(() => {\r\n                                    self.getRequest(path, params, headers, curRetryCounter)\r\n                                        .then(response => deferred.resolve(response.data))\r\n                                        .catch(deferred.reject);\r\n                                }, waitingBackoffTime_ms);\r\n                            } else {\r\n                                deferred.reject(response);\r\n                            }\r\n                        } else {\r\n                            if (response.status === 0 || response.status === -1) {\r\n                                /** TIMEOUT */\r\n                                self.raiseTimeout();\r\n                            }\r\n                            deferred.reject(response);\r\n                        }\r\n                    });\r\n                return deferred.promise;\r\n            };\r\n\r\n            self.postRequest = function(path, data, headers, curRetryCounter) {\r\n                let deferred = $q.defer();\r\n\r\n                $http.post(self.ENV + path, data, self.getHttpConfig(null, headers))\r\n                    .then(function(response) {\r\n                        self.loweTimeout();\r\n                        if ((!response || !response.data) || response.data.Status == 'error') {\r\n                            deferred.reject(response);\r\n                        } else {\r\n                            deferred.resolve(response.data);\r\n                        }\r\n                        // if (response.status === 204) {\r\n                        //     deferred.reject(response);\r\n                        // } else {\r\n                        //     deferred.resolve(response.data);\r\n                        // }\r\n                    }, function(response) {\r\n\r\n                        if (!response) {\r\n                            console.warn('R_U');\r\n                            deferred.reject();\r\n                            return;\r\n                        }\r\n                        if (response.status === 401 && localStorage.getItem(enums.localStorageKeys.refreshToken)) {\r\n                                ptLog.log('Refreshing Token');\r\n                            self.apiMethods.users.refreshToken(localStorage.getItem(enums.localStorageKeys.refreshToken))\r\n                                .then((response) => {\r\n                                    ptLog.log('Refreshing Token success');\r\n                                    $rootScope.$emit(enums.busEvents.tokenRefresh,response.data);\r\n                                    setTimeout(() => {\r\n                                        self.postRequest(path, data,headers,curRetryCounter)\r\n                                            .then(deferred.resolve)\r\n                                            .catch(deferred.reject);\r\n                                    },500)\r\n                                })\r\n                                .catch(deferred.reject)\r\n                        } else if (response.status === 423) { /** RETRY HANDLER */\r\n                            if (!curRetryCounter) curRetryCounter = 0;\r\n\r\n                            if (curRetryCounter < maxRetries) {\r\n                                curRetryCounter++;\r\n                                let waitingBackoffTime_ms = curRetryCounter * 500; //ms\r\n                                setTimeout(() => {\r\n                                    self.postRequest(path, data, headers, curRetryCounter)\r\n                                        .then(response => deferred.resolve(response.data))\r\n                                        .catch(deferred.reject);\r\n                                }, waitingBackoffTime_ms);\r\n                            } else {\r\n                                deferred.reject(response);\r\n                            }\r\n                        } else {\r\n                            if (response.status === 0 || response.status === -1) {\r\n                                /** TIMEOUT */\r\n                                self.raiseTimeout();\r\n                            }\r\n                            deferred.reject(response);\r\n                        }\r\n                    });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            self.putRequest = function(path, data, headers, curRetryCounter) {\r\n                let deferred = $q.defer();\r\n\r\n                $http.put(self.ENV + path, data, self.getHttpConfig(null, headers))\r\n                    .then(function(response) {\r\n                        self.loweTimeout();\r\n                        if ((!response || !response.data) || response.data.Status == 'error') {\r\n                            deferred.reject(response);\r\n                        } else {\r\n                            deferred.resolve(response.data);\r\n                        }\r\n                        // if (response.status === 204) {\r\n                        //     deferred.reject(response);\r\n                        // } else {\r\n                        //     deferred.resolve(response.data);\r\n                        // }\r\n                    }, function(response) {\r\n\r\n                        if (!response) {\r\n                            console.warn('R_U');\r\n                            deferred.reject();\r\n                            return;\r\n                        }\r\n                        if (response.status === 401 && localStorage.getItem(enums.localStorageKeys.refreshToken)) {\r\n                            ptLog.log('Refreshing Token');\r\n                            self.apiMethods.users.refreshToken(localStorage.getItem(enums.localStorageKeys.refreshToken))\r\n                                .then((response) => {\r\n                                    ptLog.log('Refreshing Token success');\r\n                                    $rootScope.$emit(enums.busEvents.tokenRefresh,response.data);\r\n                                    setTimeout(() => {\r\n                                        self.postRequest(path, data,headers,curRetryCounter)\r\n                                            .then(deferred.resolve)\r\n                                            .catch(deferred.reject);\r\n                                    },500)\r\n                                })\r\n                                .catch(deferred.reject)\r\n                        } else if (response.status === 423) { /** RETRY HANDLER */\r\n                            if (!curRetryCounter) curRetryCounter = 0;\r\n\r\n                            if (curRetryCounter < maxRetries) {\r\n                                curRetryCounter++;\r\n                                let waitingBackoffTime_ms = curRetryCounter * 500; //ms\r\n                                setTimeout(() => {\r\n                                    self.putRequest(path, data, headers, curRetryCounter)\r\n                                        .then(response => deferred.resolve(response.data))\r\n                                        .catch(deferred.reject);\r\n                                }, waitingBackoffTime_ms);\r\n                            } else {\r\n                                deferred.reject(response);\r\n                            }\r\n                        } else {\r\n                            if (response.status === 0 || response.status === -1) {\r\n                                /** TIMEOUT */\r\n                                self.raiseTimeout();\r\n                            }\r\n                            deferred.reject(response);\r\n                        }\r\n                    });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n\r\n            self.apiMethods = {\r\n                    categories: {\r\n                        getCategories: function () {\r\n                            return self.getRequest(`/GetCategories?LanguageCode=${appStateManager.getCurrentLang()}`)\r\n                        },\r\n\r\n                    },\r\n                    pages: {\r\n                        getHomePageData: function (categories) {\r\n                            let params = {};\r\n                            params.LanguageCode = appStateManager.getCurrentLang();\r\n                            params.Categories = categories;\r\n                            return self.getRequest(\"/GetHomePageData\", params)\r\n                        },\r\n                        getProductDetailData: function(id) {\r\n                            let params = {};\r\n                            params.LanguageCode = appStateManager.getCurrentLang();\r\n                            params.Product_Id = id;\r\n                            const User_Id = appStateManager.getUserId();\r\n                            if (User_Id)\r\n                                params.User_Id = User_Id;\r\n                            return self.getRequest(\"/GetProductDetailData\", params)\r\n                        }\r\n                    },\r\n                    products: {\r\n                        getSearchedProducts: function ({\r\n                                                           keyword /* string (optional) */,\r\n                                                           isShop /* string (optional) */,\r\n\r\n                                                           categoryId /* Number (optional) */,\r\n                                                           subCategoryId /* Number (optional) */,\r\n\r\n                                                           sortBy /* enums.productsSortOptions */,\r\n\r\n                                                           minPriceRange /* Number (optional) */,\r\n                                                           maxPriceRange /* Number (optional) */,\r\n\r\n                                                           city /* string (optional) */,\r\n                                                           lat /* Number (optional) */,\r\n                                                           lng /* Number (optional) */,\r\n                                                           range /* Number (optional) */,\r\n\r\n                                                           page /* Number (optional) */,\r\n                                                           productPerPage /* Number (optional) */,\r\n\r\n                                                           isWeb /* Boolean (optional) */,\r\n                                                           productIDs /*String (optional)*/,\r\n                                                           isTryAndBuy\r\n\r\n                                                       }) {\r\n\r\n                            const LanguageCode = appStateManager.getCurrentLang();\r\n                            let params = {\r\n                                LanguageCode,\r\n                            };\r\n\r\n                            if (keyword)\r\n                                params.KeywordProduct = encodeURIComponent(keyword);\r\n                            const userId = appStateManager.getUserId();\r\n                            if (appStateManager.user != null && userId != null)\r\n                                params.User_Id = userId;\r\n\r\n                            if (categoryId)\r\n                                params.Category_Id = categoryId;\r\n\r\n                            if (subCategoryId)\r\n                                params.SubCategory_Id = subCategoryId;\r\n\r\n                            if (isShop)\r\n                                params.IsShop = isShop;\r\n\r\n                            if (sortBy)\r\n                                params[sortBy] = true;\r\n\r\n\r\n                            if (minPriceRange)\r\n                                params.MinPriceRange = minPriceRange;\r\n\r\n                            if (maxPriceRange)\r\n                                params.MaxPriceRange = maxPriceRange;\r\n\r\n\r\n                            if (lat && lng) {\r\n                                params.Latitude = lat;\r\n                                params.Longitude = lng;\r\n                            }\r\n\r\n                            if (city)\r\n                                params.Product_City = city;\r\n\r\n                            if (range)\r\n                                params.Range = range;\r\n\r\n                            if (isWeb)\r\n                                params.IsWeb = isWeb;\r\n\r\n                            if (page)\r\n                                params.PageIndex = page;\r\n\r\n                            if (productPerPage)\r\n                                params.productPerPage = productPerPage;\r\n\r\n                            if (productIDs)\r\n                                params.productIDs = productIDs;\r\n                            if (isTryAndBuy) \r\n                                params.isTryAndBuy = isTryAndBuy;\r\n\r\n                            return self.getRequest('/GetSearchedProduct',params)\r\n                        },\r\n\r\n                        getPopularTryAndBuy: function () {\r\n\r\n                            return self.apiMethods.products.getSearchedProducts({\r\n                                productPerPage: 20,\r\n                                sortBy: enums.productsSortOptions.bestProduct,\r\n                                isTryAndBuy: true,\r\n                            })\r\n                        },\r\n\r\n                        getSuggestions: function (keyword) {\r\n                            let params = self.getDefaultParams();\r\n                            params.Keyword = encodeURIComponent(keyword);\r\n\r\n                            return self.getRequest('/Suggestion',params);\r\n                        },\r\n\r\n                        getDetailedProduct: function (productId) {\r\n                            const obj = self.getDefaultParams();\r\n                            let params = { Product_Id: productId, ...obj};\r\n                            const User_Id = appStateManager.getUserId();\r\n                            if (User_Id)\r\n                                params.User_Id = User_Id;\r\n                            return self.getRequest('/GetProductDetail',params)\r\n                        },\r\n                        getUserProducts: function ({\r\n                                                       userId,\r\n                                                       productsFilter /* enums.userProductsFilter*/,\r\n                                                       pageIndex = 0,\r\n                                                   }) {\r\n                            let obj = self.getDefaultParams();\r\n                            let params = {\r\n                                ...obj,\r\n                                User_Id: userId,\r\n                                PageIndex: pageIndex,\r\n                            };\r\n                            params[productsFilter] = true;\r\n\r\n                            return self.getRequest('/GetMyProducts',params);\r\n                        },\r\n                        getProductBookingDetails: function ({productId, userId}) {\r\n                            let obj = self.getDefaultParams();\r\n                            let params = {\r\n                                ...obj,\r\n                                User_Id: userId,\r\n                                Product_Id: productId,\r\n                            };\r\n                            return self.getRequest('/ProductBookingDetail',params);\r\n                        },\r\n                        addProduct: function ({\r\n                                                  Product_ItemCategory_Id,\r\n                                                  Product_Title,\r\n                                                  Product_Description,\r\n                                                  Product_Price_Perday,\r\n                                                  Product_IsShop,\r\n                                                  Product_City,\r\n                                                  Product_ShopURL,\r\n                                                  Price1Day,\r\n                                                  Price15Day,\r\n                                                  Product_TryAndBuy,\r\n                                                  MinRentalPeriod,\r\n                                                  MaxRentalPeriod,\r\n                                                  Product_Longitude,\r\n                                                  Product_Latitude,\r\n                                                  ProductImage_Image1,\r\n                                                  Product_LenduserId\r\n                                              }) {\r\n                            const data = {\r\n                                ...self.getDefaultParams(),\r\n                                Product_ItemCategory_Id,\r\n                                Product_Title,\r\n                                Product_Description,\r\n                                Product_Price_Perday,\r\n                                Product_IsShop,\r\n                                Product_City,\r\n                                Product_ShopURL,\r\n                                Price1Day,\r\n                                Price15Day,\r\n                                Product_TryAndBuy,\r\n                                MinRentalPeriod,\r\n                                MaxRentalPeriod,\r\n                                Product_Longitude,\r\n                                Product_Latitude,\r\n                                ProductImage_Image1,\r\n                                Product_LenduserId,\r\n                            };\r\n\r\n                            return self.postRequest('/AddProduct',data)\r\n\r\n                        }\r\n                    },\r\n                    reviews: {\r\n                        submitTransactionReview: (params) => {\r\n                            //console.log('submit review params ', params)\r\n                            return self.postRequest('/AddBookingReview', params)\r\n                        }\r\n                    },\r\n                    users: {\r\n                        signUp: function ({ email, username, password, location, currentLang, referralCode}) {\r\n                            const obj = {\r\n                                User_UserName : username,\r\n                                User_Email : email,\r\n                                User_Address : location,\r\n                                User_Password : password,\r\n                                User_UDIDType : 3,\r\n                                LanguageCode: currentLang,\r\n                                ReferralCode: referralCode\r\n                            };\r\n                            return self.postRequest('/SignUp',obj);\r\n                        },\r\n\r\n                        signupFacebook: function ({facebookName,email,address,currentLang,facebookUserId, referralCode}) {\r\n                            const dataObj = {\r\n                                User_UserName :facebookName.replace(\" \",\"-\") ,\r\n                                User_Email : email,\r\n                                User_Address : address,\r\n                                User_Password : \"\",\r\n                                User_UDIDType : 3,\r\n                                LanguageCode: currentLang,\r\n                                User_DisplayPicturePath:'https://graph.facebook.com/' + facebookUserId + '/picture?type=large',\r\n                                User_DisplayPicture: 'https://graph.facebook.com/' + facebookUserId + '/picture?type=large',\r\n                                User_FacebookId: facebookUserId ,\r\n                                User_FullName: facebookName,\r\n                                User_QBId:'',\r\n                                ReferralCode: referralCode\r\n                            };\r\n                            return self.postRequest('/Signup',dataObj);\r\n                        },\r\n\r\n                        signUpReferred: function(referralCode){\r\n                            const dataObj = {\r\n                                ReferralCode: referralCode,\r\n                                LanguageCode: appStateManager.getCurrentLang()\r\n                            };\r\n\r\n                            return self.getRequest('/VerifyReferralCode', dataObj);\r\n                        },\r\n\r\n                        login: function ({ username = '',email = '', password, currentLang}) {\r\n                            const obj = {\r\n                                User_UserName : username,\r\n                                User_Email : email,\r\n                                User_Mobile: \"\",\r\n                                User_UDIDType : 3,\r\n                                User_Password : password,\r\n                                User_FacebookId: \"\",\r\n                                LanguageCode: currentLang\r\n                            };\r\n                            return self.postRequest('/Login',obj);\r\n                        },\r\n\r\n                        forgotPassword: function({ email , currentLang }) {\r\n                            const dataObj = {\r\n                                ...self.getDefaultParams(),\r\n                                User_Email : email,\r\n                            };\r\n                            return self.postRequest('/ForgetPassword',dataObj,{ Authorization: $base64.encode('Paladin:Paladin123') })\r\n                        },\r\n\r\n                        changePassword: function ({userId,newPassword,oldPassword}) {\r\n                            const params = {\r\n                                ...self.getDefaultParams(),\r\n                                User_Id: userId,\r\n                                User_NewPassword: newPassword,\r\n                                User_OldPassword: oldPassword\r\n                            };\r\n                            return self.postRequest('/ChangePassword',params);\r\n                        },\r\n\r\n                        emailVerification: function ({userId /* USER ID CODIFIED WITH BACKEND KEY*/}) {\r\n                            return self.getRequest(`/EmailVerfication/?User_Id=${userId}`,undefined,{ Authorization: $base64.encode('Paladin:Paladin123') });\r\n                        },\r\n\r\n                        getUserProfile: function ({userId}) {\r\n                            let params = {\r\n                                ...self.getDefaultParams(),\r\n                                User_Id: userId\r\n                            };\r\n                            return self.getRequest(`/GetUserProfile`,params);\r\n                        },\r\n\r\n                        getUserCredit: function ({userId}) {\r\n                            let params = {\r\n                                ...self.getDefaultParams(),\r\n                                User_Id: userId\r\n                            };\r\n                            return self.getRequest(`/GetUserCredit`,params);\r\n                        },\r\n\r\n\r\n                        refreshToken: function (refreshToken) {\r\n                            return $http({\r\n                                method: 'POST',\r\n                                url: window.globals.TOKEN_URL,\r\n                                headers: {'Content-Type': 'application/x-www-form-urlencoded'},\r\n                                transformRequest: function(obj) {\r\n                                    let str = [];\r\n                                    for(let p in obj)\r\n                                        str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\r\n                                    return str.join(\"&\");\r\n                                },\r\n                                data: {grant_type: 'refresh_token', refresh_token: refreshToken}\r\n                            })\r\n                        },\r\n\r\n                        editProfile: function (profile) {\r\n                            let body = {\r\n                                ...self.getDefaultParams(),\r\n                                ...profile\r\n                            };\r\n                            return self.putRequest('/EditProfile',body);\r\n                        },\r\n\r\n                        updateNotificaton: ({userId, emailNotif, chatNotif }) => {\r\n                            let dataObj = {\r\n                                ...self.getDefaultParams(),\r\n                                Notification_Chat: chatNotif,\r\n                                Notification_Push: chatNotif,\r\n                                Notification_Email: emailNotif,\r\n                                Notification_UserId: userId,\r\n                            };\r\n                            return self.postRequest('/UpdateNotification',dataObj)\r\n                        },\r\n\r\n                        deleteAccount: function (userId) {\r\n                            let params = {\r\n                                ...self.getDefaultParams(),\r\n                                User_Id: userId,\r\n                            };\r\n                            return self.getRequest('/DeleteUser',params)\r\n                        }\r\n                    },\r\n                    bookings: {\r\n                        getUserBookings: function (userId) {\r\n                            let params = {\r\n                                ...self.getDefaultParams(),\r\n                                User_Id: userId\r\n                            };\r\n                            return self.getRequest('/GetUserBookings',params);\r\n                        },\r\n                        getBookingDetailed: function ({bookingId, userId}) {\r\n                            let params = {\r\n                                ...self.getDefaultParams(),\r\n                                User_Id: userId,\r\n                                BookingId: bookingId\r\n                            };\r\n                            return self.getRequest('/GetBookingDetail',params);\r\n                        },\r\n                        acceptBookingRequest: function ({bookingId, userId}) {\r\n                            let params = {\r\n                                ...self.getDefaultParams(),\r\n                                Lender_Id: userId,\r\n                                BookingId: bookingId,\r\n                            };\r\n                            return self.getRequest('/AcceptBookingRequest',params);\r\n                        },\r\n                        rejectBookingRequest: function ({bookingId, userId}) {\r\n                            let params = {\r\n                                ...self.getDefaultParams(),\r\n                                User_Id: userId,\r\n                                BookingId: bookingId\r\n                            };\r\n                            return self.getRequest('/RejectBookingRequest',params);\r\n                        },\r\n                        cancelBookingRequest: function ({bookingId, userId, reason}) {\r\n                            let params = {\r\n                                ...self.getDefaultParams(),\r\n                                User_Id: userId,\r\n                                BookingId: bookingId,\r\n                                Reason: reason,\r\n                            };\r\n                            return self.getRequest('/CancelBookingRequest',params)\r\n                        },\r\n                        startRental: function ({bookingId, userId}) {\r\n                            let params = {\r\n                                ...self.getDefaultParams(),\r\n                                User_Id: userId,\r\n                                BookingId: bookingId\r\n                            };\r\n                            return self.getRequest('/StartRentalBookingRequest',params)\r\n                        },\r\n                        endRental: function ({bookingId, userId}) {\r\n                            let params = {\r\n                                ...self.getDefaultParams(),\r\n                                User_Id: userId,\r\n                                BookingId: bookingId\r\n                            };\r\n                            return self.getRequest('/EndRentalBookingRequest',params)\r\n                        },\r\n                        bookProduct: function ({\r\n                                                   stripeEmail,\r\n                                                   borrowerId,\r\n                                                   lenderId,\r\n                                                   productId,\r\n                                                   startDate,\r\n                                                   endDate,\r\n                                                   noOfDays,\r\n                                                   coupon,\r\n                                                   stripeCustomerId,\r\n                                                   isSaveCard,\r\n                                                   idVerified,\r\n                                                   isPickUp,\r\n                                                   deliveryLat,\r\n                                                   deliveryLng,\r\n                                                   deliveryAddress,\r\n                                                   deliveryName,\r\n                                                   deliveryPhone,\r\n                                                   deliveryBell,\r\n                                                   isTryAndBuy\r\n                                               }) {\r\n                            const dataObj = {\r\n                                ...self.getDefaultParams(),\r\n                                Stripe_Email: stripeEmail,\r\n                                Borrower_UserId: borrowerId,\r\n                                Lender_UserId: lenderId,\r\n\r\n                                Product_Id: productId,\r\n                                StartDate: startDate,\r\n                                EndDate: endDate,\r\n                                NoOfDays: noOfDays,\r\n\r\n                                CouponNumber: coupon,\r\n                                CustomerAccountId: stripeCustomerId,\r\n                                SaveCard: isSaveCard,\r\n\r\n                                IdVerfied: idVerified,\r\n                                Booking_PickupProduct: isPickUp,\r\n\r\n                                Delivery_Latitude: deliveryLat,\r\n                                Delivery_Longitude: deliveryLng,\r\n                                Delivery_Address: deliveryAddress,\r\n                                Complete_Borrower_Name: deliveryName,\r\n                                Phone_Number: deliveryPhone,\r\n                                House_Name: deliveryBell\r\n                            };\r\n\r\n                            return self.postRequest(isTryAndBuy ? '/BookTryAndBuyProduct' : '/BookProduct',dataObj);\r\n\r\n                        }\r\n                    },\r\n                    payments: {\r\n                        createUserStripeAccount: function ({userId, bookingId, email, country}) {\r\n                            const dataObj = {\r\n                                ...self.getDefaultParams(),\r\n                                User_Id: userId,\r\n                                Booking_Id: bookingId,\r\n                                User_Email: email,\r\n                                User_Country: country,\r\n\r\n                            };\r\n                            return self.postRequest(`/CreateBookingStripeAccount`,dataObj)\r\n                        },\r\n                        verifyCoupon: function ({coupon, userId}) {\r\n                            const params = {\r\n                                ...self.getDefaultParams(),\r\n                                Coupon: coupon,\r\n                                User_Id: userId,\r\n                            };\r\n                            return self.getRequest(`/VerifyCoupon`, params);\r\n                        },\r\n                        createStripeCustomer: function ({email, cardToken}) {\r\n                            // Somebody, very smart, switched the values of token and email in the server -_- so I flipped them here as well\r\n                            // Email field is used as token and vice versa\r\n                            const params = {\r\n                                ...self.getDefaultParams(),\r\n                                Email: cardToken,\r\n                                TokenId: email\r\n                            };\r\n                            return self.getRequest('/CreateStripeCustomer',params);\r\n                        }\r\n                    },\r\n                    purchase: {\r\n                        buyProduct: function ({\r\n                            stripeEmail,\r\n                            bookingId,\r\n                            purchaseAmount,\r\n                            borrowerId,\r\n                            lenderId,\r\n                            productId,\r\n                            stripeCustomerId,\r\n                            isSaveCard,\r\n                            isPickUp,\r\n                            deliveryLat,\r\n                            deliveryLng,\r\n                            deliveryAddress,\r\n                            deliveryName,\r\n                            deliveryPhone,\r\n                            deliveryBell\r\n                        }) {\r\n                        const dataObj = {\r\n                            ...self.getDefaultParams(),\r\n                            Stripe_Email: stripeEmail,\r\n                            Borrower_UserId: borrowerId,\r\n                            Lender_UserId: lenderId,\r\n                            Stripe_Amount: purchaseAmount, \r\n\r\n                            Product_Id: productId,\r\n                            Booking_Id: bookingId,\r\n\r\n                            CustomerAccountId: stripeCustomerId,\r\n                            SaveCard: isSaveCard,\r\n\r\n                            Booking_PickupProduct: isPickUp,\r\n\r\n                            Delivery_Latitude: deliveryLat,\r\n                            Delivery_Longitude: deliveryLng,\r\n                            Delivery_Address: deliveryAddress,\r\n                            Complete_Borrower_Name: deliveryName,\r\n                            Phone_Number: deliveryPhone,\r\n                            House_Name: deliveryBell\r\n                        };\r\n\r\n                        return self.postRequest('/BuyProduct',dataObj);\r\n\r\n                        }\r\n                    },\r\n                    verification: {\r\n                        uploadPassport: ({passportImage,selfie,userId}) => {\r\n                            const dataObj = {\r\n                                ...self.getDefaultParams(),\r\n                                PassPort: passportImage,\r\n                                User_Selfie: selfie,\r\n                                User_Id: userId,\r\n                            };\r\n                            return self.postRequest('/IDVerficationDocument',dataObj);\r\n                        },\r\n                        sendToManualVerification: (data) => {\r\n                            const dataObj = {\r\n                                ...self.getDefaultParams(),\r\n                                PassPort: data.passportImage,\r\n                                User_Id: data.userId,\r\n                                NICFront: data.NICDLFront,\r\n                                NICBack: data.NICDLBack,\r\n                                User_Selfie: data.selfie,\r\n                                BookingId: data.bookingId\r\n                            };\r\n                            return self.postRequest('/IDManualVerficationDocument',dataObj);\r\n                        },\r\n                        uploadNICDL: ({NICDLFront,NICDLBack,selfie,userId}) => {\r\n                            const dataObj = {\r\n                                ...self.getDefaultParams(),\r\n                                User_Id: userId,\r\n                                NICFront: NICDLFront,\r\n                                NICBack: NICDLBack,\r\n                                User_Selfie: selfie,\r\n                            };\r\n                            return self.postRequest('/IDVerficationDocument',dataObj);\r\n                        }\r\n                    },\r\n                    chats: {\r\n                        getChatsList: ({userId, pageIndex = 0}) => {\r\n                            const params = {\r\n                                ...self.getDefaultParams(),\r\n                                User_Id: userId,\r\n                                PageIndex: pageIndex,\r\n                            };\r\n                            return self.getRequest('/GetChatList',params)\r\n                        },\r\n                        getChatDetailed: ({chatId}) => {\r\n                            const params = {\r\n                                ...self.getDefaultParams(),\r\n                                Chat_Id: chatId,\r\n                                ChatDone: 0,\r\n                            };\r\n                            return self.getRequest('/GetChatDetail',params)\r\n                        },\r\n                        getChatByQBId: ({chatQbId}) => {\r\n                            const params = {\r\n                                ...self.getDefaultParams(),\r\n                                Chat_QBRoomId: chatQbId,\r\n                                ChatDone: 0,\r\n                            };\r\n                            return self.getRequest('/GetChatInfoByQBId',params);\r\n                        },\r\n                        startBookingChat: ({\r\n                                               lenderId,\r\n                                               borrowerId,\r\n                                               productId,\r\n                                               chatRoomId = null,\r\n                                               bookingId = null }) => {\r\n\r\n                            let dataObj = {\r\n                                ...self.getDefaultParams(),\r\n                                User_UDIDType: 3,\r\n                                Lender_Id: lenderId,\r\n                                Borrower_Id: borrowerId,\r\n                                Product_Id: productId,\r\n                                BookingId: bookingId,\r\n                                Chat_QBRoomId: chatRoomId,\r\n                            };\r\n                            return self.postRequest('/StartBookingChat',dataObj)\r\n                        }\r\n                    }\r\n            };\r\n\r\n            return self.apiMethods;\r\n        }]);\r\n","angular.module('paladinApp')\r\n.service('appStateManager', ['enums','$base64',function (enums,$base64) {\r\n    /// Filled from server and localStorage\r\n    let appState = {\r\n        currentLang: localStorage.getItem(enums.localStorageKeys.preferredLanguage) || 'it',\r\n        getCurrentLang: () => appState.currentLang == 'it' ? 'it-IT' : appState.currentLang,\r\n        user: null,\r\n        chatUser: null,\r\n        getUserId: () => {\r\n            let userId;\r\n            const hash = localStorage.getItem(enums.localStorageKeys.userId);\r\n            userId = $base64.decode(hash).split(':')[1] || undefined;\r\n            return userId;\r\n        },\r\n        location: null, // Filled from geoLocation service -> dataService\r\n        categoriesDict: null,\r\n    };\r\n\r\n    return appState;\r\n}]);","'use strict';\r\n\r\n\r\nangular.module('paladinApp')\r\n    .service('chatService', [\r\n        '$rootScope',\r\n        'appStateManager',\r\n        'apiService',\r\n        'enums',\r\n        '$base64',\r\n        'toastService',\r\n        function ($rootScope,\r\n                  appStateManager,\r\n                  apiService,\r\n                  enums,\r\n                  $base64,\r\n                  toastService) {\r\n\r\n            const self = this;\r\n            self.CHAT_HASH = 'ZDA1YWM1NTY2MWUyNzY2M2MwMjVhY2E3MDQ3YzgyNTkwOGFlMTU2MjpQYWxhZGluXzEyMzEyMzEyMw==';\r\n            self.userDialogs = {};\r\n            if (window.globals.isProd()) {\r\n                self.kApplicationID = 48979;\r\n                self.kAuthKey = \"s64NxQBAMrmGYXz\";\r\n                self.kAuthSecret = \"wxqqXZAfdYpsEvd\";\r\n                self.kAccountKey = \"7awzEayyEjqP2LQuppJj\";\r\n            } else {\r\n                self.kApplicationID = 58169;\r\n                self.kAuthKey = \"u3n3guWwktMpCsU\";\r\n                self.kAuthSecret = \"yV26WrfkrBMZC2n\";\r\n                self.kAccountKey = \"7awzEayyEjqP2LQuppJj\";\r\n            }\r\n\r\n\r\n            const onMessage = (userId, message) => {\r\n                // This is a notification about dialog creation\r\n                if (message && message.body) {\r\n                    let msg = message;\r\n                    msg.isMe = userId == self.chatUser.id;\r\n                    msg.message = message.body;\r\n                    msg._id = message.id;\r\n                    if (msg.message === 'attachment' && msg.extension && msg.extension.attachments && msg.extension.attachments.length > 0) {\r\n                        msg.message = '';\r\n                        msg.img = QB.content.privateUrl(msg.extension.attachments[0].uid);\r\n                    }\r\n                    $rootScope.$emit(enums.busChatEvents.newMessage,msg);\r\n                }\r\n            };\r\n\r\n            const onDisconnectedListener = () => {\r\n                console.warn('onDisconnectedListener')\r\n            };\r\n\r\n            const onReconnectListener = () => {\r\n                console.warn('onReconnectListener')\r\n            };\r\n\r\n            const init = () => {\r\n                QB.init(self.kApplicationID,self.kAuthKey,self.kAuthSecret,{\r\n                    debug: { mode: window.globals.isProd() ? 0 : 1 },\r\n                    chatProtocol: {\r\n                        active: 2// set 1 to use BOSH, set 2 to use WebSockets (default)\r\n                    },\r\n                });\r\n                QB.chat.onDisconnectedListener = onDisconnectedListener;\r\n                QB.chat.onReconnectListener = onReconnectListener;\r\n                QB.chat.onMessageListener = onMessage;\r\n                getAppSession();\r\n\r\n            };\r\n\r\n            const getAppSession = () => {\r\n                return new Promise((resolve,reject) => {\r\n                    if (self.chatAppSession) {\r\n                        resolve(self.chatAppSession)\r\n                    } else {\r\n                        QB.createSession(function (err, result) {\r\n                            // callback function\r\n                            console.log(err, result);\r\n                            if (result && result.token) {\r\n                                self.chatAppSession = result;\r\n                                resolve(result)\r\n                            } else {\r\n                                reject('could not create app session')\r\n                            }\r\n                        });\r\n                    }\r\n                })\r\n            };\r\n\r\n            const getUserParams = () => {\r\n                const password = $base64.decode(self.CHAT_HASH).split(':')[1];\r\n                const {user} = appStateManager;\r\n                const {User_Email, User_FacebookId, User_UserName} = user;\r\n                if (User_FacebookId != undefined && User_FacebookId != '') { // facebook user\r\n                    return {\r\n                        login: User_FacebookId,\r\n                        password\r\n                    }\r\n                } else { // manual user\r\n                    return {\r\n                        login: User_UserName,\r\n                        password,\r\n                    };\r\n                }\r\n\r\n            };\r\n\r\n            const loginToChat = () => {\r\n                // Probably open a socket?\r\n                return new Promise((resolve,reject) =>  {\r\n                    getAppSession()\r\n                        .then((session) => {\r\n                            let params = {\r\n                                ...getUserParams(),\r\n                                token: session.token,\r\n                            };\r\n                            QB.login(params,(err,user) => {\r\n                                if (err) {\r\n                                    if (err.code === 401) { // user doesn't exist in QB, create instead\r\n                                        signupToChat().then(resolve).catch(reject)\r\n                                    } else {\r\n                                        reject(err);\r\n                                    }\r\n                                } else {\r\n                                    self.chatUser = user;\r\n                                    resolve(user);\r\n                                    syncQbUserId()\r\n                                }\r\n                            })\r\n                        })\r\n                        .catch(reject)\r\n                })\r\n            };\r\n\r\n            const signupToChat = () => {\r\n                return new Promise((resolve,reject) => {\r\n                    getAppSession()\r\n                        .then((session) => {\r\n                            let params = {\r\n                                ...getUserParams(),\r\n                                token: session.token\r\n                            };\r\n\r\n                            QB.users.create(params, function (err, user) {\r\n                                console.log(err, user);\r\n                                if (user) {\r\n                                    // success\r\n                                    self.chatUser = user;\r\n                                    resolve(user);\r\n                                    syncQbUserId()\r\n                                } else {\r\n                                    // error\r\n                                    reject(err)\r\n                                }\r\n                            });\r\n                        })\r\n                        .catch(reject)\r\n                })\r\n            };\r\n\r\n\r\n            const connectToChat = () => { // socket\r\n                return new Promise((resolve, reject) => {\r\n                    getAppSession()\r\n                        .then((session) => {\r\n                            const params = {\r\n                                ...getUserParams(),\r\n                                token: session.token\r\n                            };\r\n                            QB.createSession(params,(err,result) => {\r\n                                if (result) {\r\n                                    self.userToken = result.token;\r\n                                    QB.chat.connect({\r\n                                        userId: self.chatUser.id,\r\n                                        password:params.password\r\n                                    }, (err2,res) => {\r\n                                        if (!err2) {\r\n                                            //   Connected to socket\r\n                                            resolve(res);\r\n                                            if (self.pendingChatToJoin) {\r\n                                                $rootScope.$emit(enums.busChatEvents.selectPendingChat,{chatId: self.pendingChatToJoin});\r\n                                                self.pendingChatToJoin = undefined;\r\n                                            }\r\n                                        } else {\r\n                                            reject(err2)\r\n                                        }\r\n                                    })\r\n                                } else {\r\n                                    reject(err)\r\n                                }\r\n                            })\r\n                        })\r\n                        .catch(reject)\r\n                })\r\n            };\r\n\r\n            const syncDialogList = () => {\r\n                return new Promise((resolve,reject) => {\r\n                    QB.chat.dialog.list(null,(err,result) => {\r\n                        if (result) {\r\n                            result.items.forEach((item) => {\r\n                                self.userDialogs[item._id] = self.userDialogs[item._id] || 0\r\n                            });\r\n                            getUnreadMessage()\r\n                                .then(resolve)\r\n                                .catch(reject)\r\n                        } else {\r\n                            reject(err)\r\n                        }\r\n                    })\r\n                })\r\n            };\r\n\r\n            const syncQbUserId = () => {\r\n                apiService.users.editProfile({\r\n                    User_QBId: self.chatUser.id,\r\n                    User_Id: appStateManager.getUserId(),\r\n                })\r\n                    .then((res) => console.log('SUCCESSFULLY UPDATED PROFILE'))\r\n                    .catch((err) => console.error('ERROR UPDATING PROFILE'));\r\n            };\r\n\r\n            const disconnectChat = () => {\r\n                QB.chat.disconnect()\r\n            };\r\n\r\n            const createOrStartChat = ({\r\n                                           lenderId,\r\n                                           borrowerId,\r\n                                           lenderQBId,\r\n                                           borrowerQBId,\r\n                                           productId,\r\n                                           productName,\r\n                                           chatRoomId = null,\r\n                                           bookingId = null,\r\n                                       }) => {\r\n                /**\r\n                 * lenderQbId: '=',\r\n                 lenderId: '=',\r\n                 borrowerQbId: '=',\r\n                 borrowerId: '=?',\r\n                 productId: '=',\r\n                 bookingId: '=?',\r\n                 */\r\n\r\n                /**\r\n                 *  {\r\n                      \"User_UDID\": \"sample string 1\",\r\n                      \"User_UDIDType\": 2,\r\n                      \"Borrower_Id\": 3,\r\n                      \"Lender_Id\": 4,\r\n                      \"Product_Id\": 5,\r\n                      \"MeetingTime\": \"sample string 6\",\r\n                      \"Chat_QBRoomId\": \"sample string 7\",\r\n                      \"LanguageCode\": \"sample string 8\",\r\n                      \"BookingId\": 9\r\n                    }\r\n                 */\r\n                return new Promise((resolve,reject) => {\r\n                        if (chatRoomId) {\r\n                            // chat exists, fetch from server\r\n                            apiService.chats\r\n                                .startBookingChat({\r\n                                    lenderId,\r\n                                    borrowerId,\r\n                                    productId,\r\n                                    chatRoomId,\r\n                                    bookingId,\r\n                                })\r\n                                .then((res) => {\r\n                                    resolve(res.Data);\r\n                                })\r\n                                .catch((err) => {\r\n                                    reject(err);\r\n                                })\r\n\r\n                        } else {\r\n                            // chat doesn't exist, create in QB and link with server\r\n                            let params = {\r\n                                name: productName,\r\n                                type: 2, //group chat,\r\n                                occupants_ids: [lenderQBId,borrowerQBId],\r\n                            };\r\n                            QB.chat.dialog.create(params, (err,result) => {\r\n                                    if (err) {\r\n                                        reject(err)\r\n                                    } else {\r\n                                        const dialogId = result._id;\r\n                                        apiService.chats\r\n                                            .startBookingChat({\r\n                                                lenderId,\r\n                                                borrowerId,\r\n                                                productId,\r\n                                                chatRoomId: dialogId,\r\n                                                bookingId,\r\n                                            })\r\n                                            .then((res) => {\r\n                                                resolve(res.Data)\r\n                                            })\r\n                                            .catch((err) => {\r\n                                                result(err)\r\n                                            })\r\n                                    }\r\n                            });\r\n                        }\r\n                })\r\n            };\r\n\r\n\r\n            const setUserTyping = (userId, isTyping) => {\r\n                return new Promise((resolve => {\r\n                    resolve(`${userId} is now ${isTyping ? 'Typing..' : 'Idle'}`)\r\n                }))\r\n            };\r\n\r\n            const uploadMedia = (inputElement) => {\r\n                return new Promise((resolve => {\r\n                    resolve('Media file uploaded!')\r\n                }));\r\n            };\r\n\r\n            const getDialogsList = () => {\r\n                  return new Promise((resolve,reject) => {\r\n\r\n                  })\r\n            };\r\n\r\n            const getChatList = (userId,pageIndex = 0) => {\r\n                return new  Promise((resolve,reject) => {\r\n                    // let arr = [];\r\n                    // let index = 0;\r\n                    // while (arr.length < 30 && pageIndex < 40) {\r\n                    //     arr.push({\r\n                    //         Chat_Id: new Date().getTime() + index++,\r\n                    //         Product_Title: 'My Product',\r\n                    //\r\n                    //         recipient: 'John Smith',\r\n                    //         borrowerName: 'Samer Murad',\r\n                    //         thumbnail: 'tofyk5Tv55ghu7pacsjz5a4stKjQj',\r\n                    //     })\r\n                    // }\r\n                    // setTimeout(() => resolve(arr),500);\r\n                    // return;\r\n                    apiService.chats.getChatsList({\r\n                        userId,\r\n                        pageIndex,\r\n                    })\r\n                        .then((res) => {\r\n                            if (res.Data) {\r\n                                // resolve(res.Data);\r\n                                let lists = res.Data.Chat_Borrow.concat(res.Data.Chat_Lent).map((item) => {\r\n                                    item.thumbnail = item.Lender_UserId == appStateManager.user.User_Id ?  item.Borrower_ProfileImage : item.Lender_ProfileImage;\r\n                                    item.recipient = item.Lender_UserId == appStateManager.user.User_Id ?   item.Borrower_FullName : item.Lender_FullName;\r\n                                    item.initialBadge = (self.userDialogs || {})[item.Chat_QBRoomId] || 0;\r\n                                    item.lastUpdatedDate = new Date(item.ChatLastUpdated);\r\n                                    item.isLent = item.Lender_UserId == appStateManager.user.User_Id;\r\n                                    return item;\r\n                                });\r\n                                lists = lists.sort((a,b) => a.lastUpdatedDate - b.lastUpdatedDate);\r\n                                resolve(lists);\r\n                                if (self.pendingChatToJoin) {\r\n                                    $rootScope.$emit(enums.busChatEvents.selectPendingChat,{chatId: self.pendingChatToJoin});\r\n                                    self.pendingChatToJoin = undefined;\r\n                                }\r\n                            } else\r\n                                reject(Error('No data'))\r\n                        })\r\n                        .catch(reject)\r\n                })\r\n            };\r\n\r\n            const getChatDetailed = (chatQbId) => {\r\n                return new Promise((resolve,reject) => {\r\n                    apiService.chats.getChatByQBId({chatQbId})\r\n                        .then((res) => resolve(res.Data))\r\n                        .catch(reject)\r\n                })\r\n            };\r\n\r\n            const getChatHistory = (dialogId,skip = 0) => {\r\n                return new Promise((resolve,reject) => {\r\n                        // let arr = [];\r\n                        // let index = 0;\r\n                        // while (arr.length < 4) {\r\n                        //     arr.push({\r\n                        //         message: 'This is test message',\r\n                        //         isMe: index % 3 == 0,\r\n                        //         thumbnail: 'tofyk5Tv55ghu7pacsjz5a4stKjQj',\r\n                        //         img: index == 3 ? 'https://picsum.photos/800/1300/?random' : undefined,\r\n                        //         isSent: true,\r\n                        //         _id: new Date().getTime() + index++\r\n                        //     })\r\n                        // }\r\n                        // setTimeout(() => {\r\n                        //     resolve(arr)\r\n                        // },500)\r\n                    QB.chat.message.list({chat_dialog_id: dialogId,skip: skip,limit:10,sort_desc:'date_sent'},(err,result) => {\r\n                        if (err)\r\n                            reject(err);\r\n                        else {\r\n                            const msgs = result.items.map((item) => {\r\n                                item.isMe = item.sender_id == self.chatUser.id;\r\n                                item.thumbnail = 'tofyk5Tv55ghu7pacsjz5a4stKjQj';\r\n                                item.dateSent = new Date(item.date_sent * 1000);\r\n                                if (item.message === 'attachment' && item.attachments && item.attachments.length > 0) {\r\n                                    item.message = '';\r\n                                    item.img = QB.content.privateUrl(item.attachments[0].uid);\r\n                                }\r\n                                return item\r\n                            });\r\n                            resolve(msgs.reverse());\r\n                        }\r\n                    })\r\n\r\n                })\r\n            };\r\n\r\n            const joinChat = (dialogId) => {\r\n                const chatDialog = QB.chat.helpers.getRoomJidFromDialogId(dialogId);\r\n                return new Promise((resolve,reject) => {\r\n                    QB.chat.muc.join(chatDialog,function(presence) {\r\n                        resolve()\r\n                    })\r\n                })\r\n            };\r\n\r\n            const leaveChat = (dialogId) => {\r\n                const chatDialog = QB.chat.helpers.getRoomJidFromDialogId(dialogId);\r\n                return new Promise((resolve,reject) => {\r\n                    QB.chat.muc.leave(chatDialog,function(presence) {\r\n                            resolve()\r\n                    })\r\n                })\r\n            };\r\n\r\n            const sendMessage = ({dialogId, text,productId, input /* inputElement (Optional) */}) => {\r\n                return new Promise((resolve,reject) => {\r\n                    const chatDialog = QB.chat.helpers.getRoomJidFromDialogId(dialogId);\r\n                    if( input && input.files.length > 0) { // is File\r\n                        const inputFile = input.files[0];\r\n                        let params = {name: inputFile.name, file: inputFile, type: inputFile.type, size: inputFile.size, 'public': false};\r\n                        QB.content.createAndUpload(params, function(err, res) {\r\n                            if (err) {\r\n                                console.error(err);\r\n                                reject(err);\r\n                            } else {\r\n                                const fileUID = res.uid;\r\n                                // prepare a message\r\n                                let msg = {\r\n                                    type: 'groupchat',\r\n                                    body: \"attachment\",\r\n                                    ProductId: productId,\r\n                                    extension: {\r\n                                        save_to_history: 1,\r\n                                        attachments: [ {uid: fileUID , type: 'photo'} ],\r\n                                        ProductId: productId,\r\n                                        dialogID: dialogId,\r\n                                        isBot: '0'\r\n                                    },\r\n                                    markable: 1\r\n                                };\r\n                                QB.chat.send(chatDialog,msg);\r\n                                resolve()\r\n                            }\r\n                        });\r\n                    } else {\r\n\r\n                        QB.chat.send(chatDialog, {\r\n                            type: 'groupchat',\r\n                            body: text,\r\n                            extension: {\r\n                                save_to_history: 1,\r\n                                ProductId: productId,\r\n                                dialogID: dialogId,\r\n                                isBot: '0'\r\n                            },\r\n                            markable: 1,\r\n                        });\r\n                        resolve()\r\n                    }\r\n                })\r\n            };\r\n\r\n\r\n            const notifyUser = ({\r\n                                     userId,\r\n                                     dialogId,\r\n                                     isNewChat = false,\r\n                                 }) => {\r\n                return new Promise((resolve,reject) => {\r\n                        let msg = {\r\n                            type: 'chat',\r\n                            extension: {\r\n                                notification_type: isNewChat? 1 : 2,\r\n                                _id: dialogId,\r\n                            },\r\n                        };\r\n\r\n                        QB.chat.send(userId, msg);\r\n                    resolve();\r\n                });\r\n            };\r\n\r\n            const getUnreadMessage = () => {\r\n                return new Promise((resolve,reject) => {\r\n                    const dialogIds = Object.keys(self.userDialogs);\r\n                    Promise.all(\r\n                        dialogIds.map((key) => getUnreadMessagesForDialogId(key))\r\n                    )\r\n                        .then((results) => {\r\n                            results.forEach((item) => {\r\n                                self.userDialogs[item.dialogId] = item.count || 0\r\n                            });\r\n                            resolve(self.userDialogs)\r\n                        })\r\n                        .catch((err) => {\r\n                            reject(err)\r\n                        });\r\n                });\r\n            };\r\n\r\n            const getUnreadMessagesForDialogId = (dialogId) => {\r\n                  return new Promise((resolve) => {\r\n                      QB.chat.message.unreadCount({chat_dialog_ids: dialogId},(err,res) => {\r\n                          if (err)\r\n                              resolve(0);\r\n                          else {\r\n                              resolve({\r\n                                  dialogId: dialogId,\r\n                                  count: (res || {})[dialogId] || 0\r\n                              });\r\n                          }\r\n                      })\r\n                  })\r\n            };\r\n            const getTotalUnreadCount = () => {\r\n                return new Promise((resolve => {\r\n                    QB.chat.message.unreadCount(null,(err,res) => {\r\n                        if (err)\r\n                            resolve(0);\r\n                        else {\r\n                            resolve(res);\r\n                        }\r\n                    })\r\n                }))\r\n            } ;\r\n\r\n            const clearUnreadBadgesForDialog = (dialogId) => {\r\n                self.userDialogs[dialogId] = 0;\r\n                let numberOfUnreadMessages = 0;\r\n                Object.keys(self.userDialogs)\r\n                    .forEach((dialog) => {\r\n                        numberOfUnreadMessages += self.userDialogs[dialog];\r\n                    });\r\n                $rootScope.$emit(enums.busChatEvents.updateUnreadCount,{\r\n                    total: numberOfUnreadMessages,\r\n                    detailedDict: self.userDialogs,\r\n                })\r\n            };\r\n\r\n            const activateChatWhenReady = (dialogId) => {\r\n                self.pendingChatToJoin = dialogId\r\n            };\r\n\r\n            return {\r\n                init,\r\n                loginToChat,\r\n                createOrStartChat,\r\n                setUserTyping,\r\n                uploadMedia,\r\n                getChatList,\r\n                getChatDetailed,\r\n                getChatHistory,\r\n                signupToChat,\r\n                connectToChat,\r\n                disconnectChat,\r\n                syncDialogList,\r\n                sendMessage,\r\n                joinChat,\r\n                leaveChat,\r\n                notifyUser,\r\n                getUnreadMessage,\r\n                clearUnreadBadgesForDialog,\r\n                activateChatWhenReady\r\n            }\r\n    }]);","angular.module('paladinApp')\r\n    .service('dataService',[\r\n        '$rootScope',\r\n        'enums',\r\n        'appStateManager',\r\n        '$translate',\r\n        'ptLog',\r\n        '$base64',\r\n        'apiService',\r\n        '$state',\r\n        'popupService',\r\n        '$timeout',\r\n        'geoLocationService',\r\n        'chatService',\r\n        '$interval',\r\n        'ngMeta',\r\n        '$location',\r\n        function (\r\n            $rootScope,\r\n            enums,\r\n            appStateManager,\r\n            $translate,\r\n            ptLog,\r\n            $base64,\r\n            apiService,\r\n            $state,\r\n            popupService,\r\n            $timeout,\r\n            geoLocationService,\r\n            chatService,\r\n            $interval,\r\n            ngMeta,\r\n            $location) {\r\n        const TAG = 'dataService || ';\r\n        let didInit = false;\r\n        const init = function () {\r\n            if (!didInit) {\r\n                didInit = true;\r\n                registerBus();\r\n            }\r\n\r\n            $translate.preferredLanguage(localStorage.getItem(enums.localStorageKeys.preferredLanguage) || 'it');\r\n\r\n\r\n            /// Load user if exists\r\n            if (getUserId()) {\r\n                getMe();\r\n            }\r\n\r\n            // getCategories();\r\n\r\n            //geoLocationUpdate();\r\n            // geoLocationUpdateInterval();\r\n        };\r\n\r\n        const registerBus = () => {\r\n            $rootScope.$on(enums.busEvents.userLogin, (event, data) => {\r\n                let {\r\n                    oAuthToken,\r\n                } = data;\r\n                setTokens(oAuthToken);\r\n                setUserId(data.User_Id);\r\n                getMe();\r\n\r\n            });\r\n\r\n            $rootScope.$on(enums.busEvents.userSignup, (event, data) => {\r\n\r\n            });\r\n\r\n            $rootScope.$on(enums.busEvents.tokenRefresh,(event,data) => {\r\n                setTokens(data)\r\n            });\r\n\r\n            $rootScope.$on(enums.busEvents.preferredLanguageChange, (event, data) => {\r\n                localStorage.setItem(enums.localStorageKeys.preferredLanguage, data.currentLang);\r\n                appStateManager.currentLang = data.currentLang;\r\n                $translate.preferredLanguage(data.currentLang);\r\n                $translate.use(data.currentLang);\r\n                $translate.refresh();\r\n                const newPath = location.pathname.replace(location.pathname.split('/')[1],data.currentLang);\r\n                location.replace(newPath)\r\n            });\r\n\r\n            $rootScope.$on(enums.busEvents.userLogout,(event) => {\r\n                chatService.disconnectChat();\r\n                localStorage.clear();\r\n                localStorage.setItem(enums.localStorageKeys.preferredLanguage,appStateManager.currentLang);\r\n                (false);\r\n                appStateManager.user = null;\r\n                $rootScope.$emit(enums.busEvents.updatedUser,null);\r\n                $state.go('app.home',{languageCode:appStateManager.currentLang});\r\n\r\n            });\r\n\r\n\r\n            $rootScope.$on(enums.busEvents.triggerEmailValidation,(event,data) => {\r\n                popupService.showEmailVerification(data.userId)\r\n                    .then(() => {\r\n                        $state.go('app.home')\r\n                    })\r\n                    .catch(() =>{\r\n                        $state.go('app.home')\r\n                    })\r\n            });\r\n            $rootScope.$on('$destroy', () => {\r\n                console.log('ROOT SCOPE IS DEAD')\r\n            })\r\n        };\r\n\r\n        const geoLocationUpdate = () => {\r\n            return new Promise((resolve, reject) => {\r\n                ptLog.log(TAG, 'Starting location update');\r\n                geoLocationService.getLocation()\r\n                    .then((location) => {\r\n                        updateGeoLocationStorage(location);\r\n                        ptLog.log('Successfully got location');\r\n                        resolve(location);\r\n                    })\r\n                    .catch((err) => {\r\n                        ptLog.error(TAG, 'error getting location', JSON.stringify(err));\r\n                        reject(err);\r\n                    })\r\n            })\r\n        };\r\n\r\n        const geoLocationUpdateInterval = () => {\r\n            $timeout(() => {\r\n                geoLocationUpdate()\r\n                    .finally(() => {\r\n                        geoLocationUpdateInterval();\r\n                    })\r\n            }, 10 * 1000)\r\n        };\r\n\r\n        const getGeoLocationForApp = () => {\r\n            return new Promise((resolve,reject) => {\r\n                if (appStateManager.location) {\r\n                    resolve(appStateManager.location);\r\n                } else if (localStorage.getItem(enums.localStorageKeys.locationLatLong)) {\r\n                    const {lat, lng} = JSON.parse(localStorage.getItem(enums.localStorageKeys.locationLatLong));\r\n                    resolve({\r\n                        lat,\r\n                        lng\r\n                    })\r\n                } else {\r\n                    geoLocationUpdate()\r\n                        .then((location) => {\r\n                            const lat = location.geometry.location.lat(),\r\n                                lng = location.geometry.location.lng();\r\n                            resolve({\r\n                                lat,\r\n                                lng\r\n                            })\r\n                        })\r\n                        .catch(reject)\r\n                }\r\n            })\r\n\r\n        };\r\n\r\n        const updateGeoLocationStorage = (location) => {\r\n            appStateManager.location = location;\r\n            const latLong = {\r\n                lat: location.geometry.location.lat(),\r\n                lng: location.geometry.location.lng()\r\n            };\r\n            localStorage.setItem(enums.localStorageKeys.locationLatLong,JSON.stringify(latLong));\r\n            $rootScope.$emit(enums.busEvents.locationUpdate,latLong);\r\n        };\r\n\r\n        const getLatLong = () => {\r\n            return new Promise((resolve,reject) => {\r\n                const latLngStr = localStorage.getItem(enums.localStorageKeys.locationLatLong);\r\n                if (!latLngStr) {\r\n                    geoLocationUpdate()\r\n                        .then(() => {\r\n                            getLatLong().then(resolve).catch(reject)\r\n                        })\r\n                        .catch(reject)\r\n                } else {\r\n                    resolve(JSON.parse(latLngStr))\r\n                }\r\n            })\r\n        };\r\n\r\n        const setUserId = (userId) => {\r\n            localStorage.setItem(enums.localStorageKeys.userId,$base64.encode(`${enums.secret}:${userId}`));\r\n        };\r\n\r\n        const setTokens = (oAuthToken) => {\r\n            if (oAuthToken && oAuthToken.access_token && oAuthToken.token_type && oAuthToken.refresh_token) {\r\n                localStorage.setItem(enums.localStorageKeys.jwtToken,`${oAuthToken.token_type} ${oAuthToken.access_token}`);\r\n                localStorage.setItem(enums.localStorageKeys.refreshToken, oAuthToken.refresh_token)\r\n            } else {\r\n                ptLog.error(TAG,'Sign up successful but access token was not provided!');\r\n            }\r\n        };\r\n\r\n        const getUserId = () => {\r\n            return appStateManager.getUserId()\r\n        };\r\n\r\n        let messagesPollerInterval = undefined;\r\n        const messagesPoller = (isStart) => {\r\n                if (isStart) {\r\n                    if (messagesPollerInterval) {\r\n                        return new Error('message poller already active');\r\n                    }\r\n                    messagesPollerInterval = $interval(getUnreadMessages,30 * 1000);\r\n                } else {\r\n                    if (!messagesPollerInterval) {\r\n                        return new Error('message poller already deactivated');\r\n                    }\r\n                    $interval.cancel(messagesPollerInterval);\r\n                    messagesPollerInterval = undefined;\r\n                }\r\n        };\r\n\r\n        const getUnreadMessages = () => {\r\n            chatService.syncDialogList()\r\n                .then((dialogsDict) => {\r\n                    console.log(dialogsDict);\r\n                    let nummberOfUnreadMessages = 0;\r\n                    Object.keys(dialogsDict)\r\n                        .forEach((dialog) => {\r\n                            nummberOfUnreadMessages += dialogsDict[dialog];\r\n                        });\r\n\r\n                    $rootScope.$emit(enums.busChatEvents.updateUnreadCount,{\r\n                        total: nummberOfUnreadMessages,\r\n                        detailedDict: dialogsDict,\r\n                    });\r\n\r\n                })\r\n                .catch((err) => {\r\n                    if (err.code == 404) { // no chats, no messages\r\n                        $rootScope.$emit(enums.busChatEvents.updateUnreadCount,{\r\n                            total: 0,\r\n                            detailedDict: {},\r\n                        });\r\n                    } else  {\r\n                        ptLog.error(err)\r\n                    }\r\n                })\r\n        };\r\n\r\n        const getCategories = () => {\r\n            apiService.categories.getCategories()\r\n                .then((response) => {\r\n                    let catDict = {};\r\n\r\n                    response.Data.forEach((item) => catDict[item.Category_Id] = item);\r\n                    appStateManager.categoriesDict = catDict;\r\n                    $rootScope.$emit(enums.busEvents.categoriesUpdate,catDict);\r\n                })\r\n                .catch((err) => {\r\n                    ptLog.error(err);\r\n                })\r\n        };\r\n\r\n        const getMe = () => {\r\n            const userId = getUserId();\r\n            if (userId) {\r\n                apiService.users.getUserProfile({userId})\r\n                    .then((response) => {\r\n                        appStateManager.user = response.Data;\r\n                        ptLog.log(TAG,'Fetched user profile');\r\n                        $rootScope.$emit(enums.busEvents.updatedUser,appStateManager.user);\r\n                        activatePendingPrivateState();\r\n                        chatService.loginToChat()\r\n                            .then(() => {\r\n                                chatService.connectToChat()\r\n                                    .then(() => {\r\n                                        chatService.syncDialogList();\r\n                                        messagesPoller(true);\r\n                                    })\r\n                                    .catch((err) => {\r\n                                        console.error('Could not connect to chat',JSON.stringify(err));\r\n                                    })\r\n                            })\r\n                    })\r\n                    .catch((err) => {\r\n                        ptLog.error(TAG,JSON.stringify(err));\r\n                    })\r\n            } else {\r\n                ptLog.log(TAG,'User Id not found');\r\n            }\r\n        };\r\n\r\n\r\n        const forceLogin = (transition) => {\r\n            const nexState = transition.targetState();\r\n            let stateObjToSave = {\r\n                name: nexState.identifier().name,\r\n                params: nexState.params(),\r\n                options: nexState.options().current(),\r\n            };\r\n            setPendingPrivateState(stateObjToSave);\r\n            popupService.showLoginSignupPopup(false)\r\n                .catch((err) => {\r\n                    // User decided not to login, delete saved state\r\n                    setPendingPrivateState(null);\r\n                })\r\n\r\n        };\r\n\r\n        const updateGeneralSEO = () => {\r\n            const languageCode = appStateManager.currentLang;\r\n            window.globals.SUPPORTED_LANGS.forEach((item) => {\r\n               ngMeta.setTag(enums.ngMetaValues.currentUrl(item.code),$location.absUrl().replace(`/${languageCode}/`,`/${item.code}/`));\r\n            });\r\n        };\r\n\r\n        const setPendingPrivateState = (state) => {\r\n                if (state) {\r\n                    const encodedState = $base64.encode(`${enums.secret}|:${JSON.stringify(state)}`);\r\n                    localStorage.setItem(enums.localStorageKeys.pendingPrivateState,encodedState);\r\n                } else {\r\n                    localStorage.removeItem(enums.localStorageKeys.pendingPrivateState)\r\n                }\r\n        };\r\n\r\n        const activatePendingPrivateState = () => {\r\n            const encodedState = localStorage.getItem(enums.localStorageKeys.pendingPrivateState);\r\n            if (encodedState) {\r\n                const targetState = JSON.parse($base64.decode(encodedState).split('|:')[1]);\r\n                if (targetState) {\r\n                    setPendingPrivateState(null);\r\n                    $state.go(targetState.name,targetState.params,targetState.options);\r\n                }\r\n            }\r\n        };\r\n\r\n        return {\r\n            init,\r\n            setUserId,\r\n            getUserId,\r\n            getCategories,\r\n            getGeoLocationForApp,\r\n            forceLogin,\r\n            updateGeneralSEO,\r\n        }\r\n}]);","angular.module('paladinApp')\r\n    .factory('Filters', ['$http','$base64','$rootScope','$q',\r\n  function ($http,$base64,$rootScope,$q) {\r\n\r\n  var Filters = {};\r\n\r\n  Filters.getHeaders = function(){\r\n    var headers = {\r\n        //\"Authorization\": \"Basic \" + auth,\r\n        'Access-Control-Allow-Origin': '*',\r\n        'X-Requested' : null,\r\n        'Content-Type' : 'application/json; charset=utf-8'\r\n    };\r\n\r\n    return headers;\r\n  };\r\n\r\n  Filters.get = function(languageCode,callback) {\r\n    \r\n    if ($rootScope.categoriesMap && $rootScope.categoriesMap.get(languageCode)) {\r\n      return;\r\n    }\r\n\r\n    var payload = {\r\n       // headers: this.getHeaders()\r\n    };\r\n\r\n    $http.get( window.globals.API_URL + 'GetCategories?LanguageCode='+this.formatLanguageCode(languageCode)).then(callback);\r\n   \r\n  };\r\n\r\n\r\n\r\n  Filters.getCategoryById = function(id, lang) {\r\n    if ($rootScope.categoriesMap && $rootScope.categoriesMap.get(lang)) {\r\n      var categories = $rootScope.categoriesMap.get(lang);\r\n      for (var i=0;i<categories.length;i++) {\r\n        if (categories[i].Category_Id == id) {\r\n          return categories[i];\r\n        }\r\n      }\r\n    } \r\n    //console.error(\"Filters.getCategoryById: \"+ id + \",\"+lang+\" $rootScope.categoriesMap not defined or null\")\r\n  }\r\n  \r\n\r\n\r\n  Filters.getSubcategoryById = function(id, lang) {\r\n  \r\n    if ($rootScope.categoriesMap && $rootScope.categoriesMap.get(lang)) {\r\n      var categories = $rootScope.categoriesMap.get(lang);\r\n      for (var i=0;i<categories.length;i++) {\r\n        for (var j=0; j<categories[i].Category_SubCatrgories.length; j++) {\r\n          if (categories[i].Category_SubCatrgories[j].SubCategory_Id == id) {\r\n            return categories[i].Category_SubCatrgories[j];\r\n          }\r\n        }\r\n      }\r\n    } \r\n    //console.error(\"Filters.getSubcategoryById: \"+ id + \",\"+lang+\" $rootScope.categoriesMap not defined or null\")    \r\n  };\r\n\r\n  Filters.getCategoryByName = function(name, lang, isTryAndBuy) {\r\n    if ($rootScope.categoriesMap && $rootScope.categoriesMap.get(lang)) {\r\n      var categories = $rootScope.categoriesMap.get(lang);\r\n      for (var i=0;i<categories.length;i++) {\r\n        if (isTryAndBuy == categories[i].IsTryAndBuy && categories[i].Category_Name && (categories[i].Category_Name.toLowerCase().replace(/ /g,'-') == name.toLowerCase())) {\r\n          return categories[i];\r\n        }\r\n      }\r\n    } \r\n    //console.error(\"Filters.getCategoryByName: \"+ name + \",\"+lang+\" $rootScope.categoriesMap not defined or null\");\r\n  }\r\n\r\n  Filters.getSubcategoryByName = function(name, lang) {\r\n    \r\n      if ($rootScope.categoriesMap && $rootScope.categoriesMap.get(lang)) {\r\n        var categories = $rootScope.categoriesMap.get(lang);\r\n        for (var i=0;i<categories.length;i++) {\r\n          for (var j=0; j<categories[i].Category_SubCatrgories.length; j++) {\r\n            if (categories[i].Category_SubCatrgories[j].SubCategory_Name &&\r\n              categories[i].Category_SubCatrgories[j].SubCategory_Name.toLowerCase().replace(/ /g,'-') == name.toLowerCase()) {\r\n              return categories[i].Category_SubCatrgories[j];\r\n            }\r\n          }\r\n        }\r\n      } \r\n      //console.error(\"Filters.getSubcategoryByName: \"+ name + \",\"+lang+\" $rootScope.categoriesMap not defined or null\");\r\n    }\r\n\r\n\r\n  Filters.findByName = function(name,languageCode,callback){\r\n    var payload = {\r\n        headers: this.getHeaders()\r\n    };\r\n\r\n    $http.get(window.globals.API_URL  + 'GetCategories?LanguageCode='+this.formatLanguageCode(languageCode)).then(function(response){\r\n      var categories = response.data.Data;\r\n      for(var i=0;i<categories.length;i++){\r\n        var category = categories[i];\r\n        if(category.Category_Name && (category.Category_Name.toLowerCase().replace(/ /g,'-') == name.toLowerCase()) ){\r\n          callback(category);\r\n          return;\r\n        }\r\n      }\r\n      callback(null);\r\n    });\r\n  }\r\n\r\n  Filters.getSuggestions = function(keywords, languageCode) {\r\n    return $http.get(window.globals.API_URL + 'Suggestion?Keyword='+keywords+'&&LanguageCode='+this.formatLanguageCode(languageCode)).then(function(response) {\r\n      return response.data.Data.map(function(item){\r\n          return item.Keyword;\r\n        })\r\n    });\r\n  }\r\n\r\n\r\n  Filters.getCategoriesUrl = (categoryName, subcategoryName, isTryAndBuy, languageCode) => {\r\n    let path = window.globals.ROOT_PATH + languageCode + \"/categorie/\" + (isTryAndBuy ? '' : \"privato/\");\r\n    if (subcategoryName == null) {\r\n      path = path + categoryName;\r\n    } else {\r\n      path = path + categoryName + \"/\" + subcategoryName + (filter.glCity? \"/\" + filter.glCity : '');\r\n    }\r\n\r\n    return path.split(' ').join('-');;\r\n  }\r\n\r\n\r\n\r\n  Filters.formatLanguageCode = function(code){\r\n    return code=='it'?'it-IT':code;\r\n  }\r\n\r\n \r\n  return Filters;\r\n}]);\r\n","angular.module('paladinApp')\r\n    .service('geoLocationService',[\r\n        '$rootScope',\r\n        'appStateManager',\r\n        'ptLog',\r\n        function (\r\n            $rootScope,\r\n            appStateManager,\r\n            ptLog) {\r\n            const TAG = 'geoLocationService || ';\r\n            const geocoder = new google.maps.Geocoder();\r\n\r\n            const getGeoLocationPostion = () => {\r\n                return new Promise((resolve,reject) => {\r\n                    if (navigator.geolocation) {\r\n                        navigator.geolocation.getCurrentPosition(resolve,reject)//,{timeout: 5 * 1000}) // drop results that take more than five secs\r\n                    } else {\r\n                        reject({message: 'goeLocation not supported by browser'})\r\n                    }\r\n                })\r\n            };\r\n\r\n            const getLocation = () => {\r\n                return new Promise((resolve,reject) => {\r\n                    ptLog.log('GET USER LOCATION');\r\n                    getGeoLocationPostion()\r\n                        .then((position => {\r\n                            let data = {\r\n                                location: {\r\n                                    lat:position.coords.latitude,\r\n                                    lng: position.coords.longitude\r\n                                }\r\n                            };\r\n                            geoCodeLocation(data)\r\n                                .then((results) => {\r\n                                    resolve(results)\r\n                                })\r\n                                .catch(reject)\r\n\r\n                        }))\r\n                        .catch((err) => {\r\n                            ptLog.error(TAG, JSON.stringify(err));\r\n                            ptLog.log(TAG,'Getting default location');\r\n                            const defaultLoc = getDefaultLocationAddressForLang();\r\n                            geoCodeLocation(defaultLoc)\r\n                                .then((results) => {\r\n                                    resolve(results)\r\n                                })\r\n                                .catch(reject)\r\n                        })\r\n                })\r\n            };\r\n\r\n\r\n            const geoCodeLocation = (locData) => {\r\n                return new Promise((resolve,reject) => {\r\n                    geocoder.geocode(locData, function (results, status) {\r\n                        if (results && results.length > 0) {\r\n                            resolve(results[0])\r\n                        } else {\r\n                            reject({status: status})\r\n                        }\r\n                    })\r\n                })\r\n            };\r\n\r\n            const getDefaultLocationAddressForLang = () => {\r\n                const lang = window.globals.SUPPORTED_LANGS.find((lang) => lang.code === appStateManager.currentLang);\r\n                return lang ? {address: lang.defaultLocation} : { address: 'milan italy'}\r\n            };\r\n\r\n            const getUserCountryFromUserAddress = (address) => {\r\n                return new Promise((resolve,reject) => {\r\n                    geocoder.geocode({address},(results,status) => {\r\n\r\n                        if (status == 'OK') {\r\n\r\n                            if (results && results.length > 0) {\r\n                                const {\r\n                                    address_components\r\n                                } = results[0];\r\n\r\n                                if (address_components && address_components.length > 0) {\r\n                                    const country = address_components.find((comp) => {\r\n                                        const { types } = comp;\r\n                                        if (types && types.length > 0) {\r\n                                            return types[0].toLowerCase() === 'country';\r\n                                        } else {\r\n                                            return false\r\n                                        }\r\n                                    });\r\n\r\n                                    if (country) {\r\n                                       resolve(country)\r\n                                    } else {\r\n                                        reject(new Error('Country not found'))\r\n                                    }\r\n\r\n                                } else {\r\n                                    reject(new Error('Address not found'))\r\n                                }\r\n\r\n                            } else {\r\n                                reject(new Error('No results found'))\r\n                            }\r\n\r\n                        } else {\r\n                            reject(new Error('Could not geocode address'))\r\n                        }\r\n                    })\r\n                });\r\n            };\r\n\r\n            const getUserAddressFromCoordinates = ({lat,lng}) => {\r\n                return new Promise((resolve,reject) => {\r\n                    geocoder.geocode({ location: { lat, lng } },(results,status) => {\r\n\r\n                        if (status === 'OK') {\r\n\r\n                            if (results && results.length > 0) {\r\n                                const streetAddress = results.find((res) => {\r\n                                    const { types } = res;\r\n                                    if (types && types.length > 0) {\r\n                                        return types[0].toLowerCase() === 'street_address';\r\n                                    } else {\r\n                                        return false\r\n                                    }\r\n                                });\r\n\r\n                                if (streetAddress) {\r\n                                    resolve(streetAddress.formatted_address)\r\n                                } else {\r\n                                    reject(new Error('Address not found'))\r\n                                }\r\n                            } else {\r\n                                reject(new Error('No results found'))\r\n                            }\r\n\r\n                        } else {\r\n                            reject(new Error('Could not geocode coordinates'))\r\n                        }\r\n                    })\r\n                });\r\n            };\r\n            return {\r\n                getLocation,\r\n                getUserCountryFromUserAddress,\r\n                getUserAddressFromCoordinates\r\n            }\r\n        }]);","'use strict';\r\nangular.module('paladinApp')\r\n    .service('gtmService',['$window', function ($window) {\r\n\r\n        this.trackEvent = function(category, action, label, value) {\r\n\r\n            if (!window.globals.isProd())\r\n                return\r\n                \r\n            if (category == undefined || action == undefined) {\r\n                throw Error('GTMService.trackEvent: Missing required property. Aborting hit.');\r\n            } \r\n    \r\n            $window.dataLayer.push({\r\n                'event': 'ngTrackEvent',\r\n                'attributes': {\r\n                    'category': category,\r\n                    'action': action,\r\n                    'label': label ? label : null,\r\n                    'value': value ? value : null,\r\n                    'nonInteraction': true\r\n                }\r\n            });\r\n    \r\n            console.log(\"DataLayer Event fired \"+ category + \" \" + action);\r\n        }\r\n                  \r\n    }]);","angular.module('paladinApp')\r\n    .service('menusService',[\r\n        '$rootScope',\r\n        'appStateManager',\r\n        '$translate',\r\n        'popupService',\r\n        '$mdToast',\r\n        '$state',\r\n        'enums',\r\n        'ZendeskWidget',\r\n        function ($rootScope,\r\n                  appStateManager,\r\n                  $translate,\r\n                  popupService,\r\n                  $mdToast,\r\n                  $state,\r\n                  enums,\r\n                  ZendeskWidget) {\r\n\r\n        /**\r\n         *\r\n         About:\r\n         How it works\r\n         Try & Buy\r\n         Blog\r\n         FAQ\r\n         Account (logged in):\r\n         My profile\r\n         My Listings\r\n         My Rentals\r\n         Log out\r\n         Account (logged out)\r\n         Log in\r\n         Sign up\r\n         Links:\r\n         Contact us\r\n         Terms and Conditions  → (not showing in header) → route to paladintrue.com/terms-and-conditions/\r\n         */\r\n\r\n            /**\r\n             *\r\n             * @type {{aboutMenu: {title: string, list: *[]}, accountLoggedOut: {title: string, shouldHide: function(), list: *[]}, accountLoggedIn: {title: string, shouldHide: function(), list: *[]}, linksMenu: {title: string, list: *[]}, common: {title: string, list: *[]}}}\r\n             */\r\n        const commonMenus = {\r\n            aboutMenu: {\r\n                title: 'ABOUT',\r\n                list:[\r\n                    // {\r\n                    //     itemId:'menu-item-how-it-works',\r\n                    //     title: 'HOW_IT_WORKS', // $translate directive\r\n                    //     link:`https://paladintrue.com/${appStateManager.currentLang}/how-it-works/`\r\n                    // },\r\n                    {\r\n                        itemId:'menu-item-try-n-buy',\r\n                        title: 'TRY_AND_BUY',\r\n                        link: `https://paladintrue.com/${appStateManager.currentLang}/${window.globals.SUPPORTED_LANGS.find((lang) => appStateManager.currentLang == lang.code).tryAndBuyWordPressPath}/`,\r\n                    },\r\n                    {\r\n                        itemId:'menu-item-blog',\r\n                        title: 'BLOG',\r\n                        link:`https://paladintrue.com/${appStateManager.currentLang}/blog/`\r\n                    },\r\n                    {\r\n                        itemId:'menu-item-faq',\r\n                        title: 'FAQ',\r\n                        link:`https://paladintrue.com/${appStateManager.currentLang}/faq/`\r\n                    }\r\n                ]\r\n            },\r\n            accountLoggedOut: {\r\n                title: 'HEADER_MY_ACCOUNT',\r\n                shouldHide: () => {\r\n                    return (appStateManager.user != null)\r\n                },\r\n                list: [\r\n                    {\r\n                        itemId:'menu-item-login',\r\n                        title: 'HEADER_LOGIN',\r\n                        BL: () => popupService.showLoginSignupPopup(false),\r\n                    },\r\n                    {\r\n                        itemId: 'menu-item-signup',\r\n                        title: 'HEADER_SIGNUP',\r\n                        BL: () => popupService.showLoginSignupPopup(true),\r\n                    }\r\n                ]\r\n            },\r\n            accountLoggedIn: {\r\n                title: 'HEADER_MY_ACCOUNT',\r\n                shouldHide: () => {\r\n                    return (appStateManager.user == null)\r\n                },\r\n                list: [\r\n                    {\r\n                        itemId:'menu-item-my-profile',\r\n                        title: 'MY_PROFILE',\r\n                        BL: () => {\r\n                            $rootScope.$emit(enums.busNavigation.userProfile, {userId: appStateManager.user.User_Id})\r\n                        },\r\n                    },\r\n                    // {\r\n                    //     itemId: 'menu-item-my-rentals',\r\n                    //     title: 'MY_RENTAL',\r\n                    //     BL: () => $rootScope.$emit(enums.busNavigation.rentals),\r\n                    // },\r\n                    {\r\n                        itemId: 'menu-item-message',\r\n                        title: 'MESSAGES',\r\n                        BL: () => $rootScope.$emit(enums.busNavigation.chat),\r\n                    },\r\n                    {\r\n                        itemId: 'menu-item-logout',\r\n                        title: 'HEADER_LOGOUT',\r\n                        BL: () => $rootScope.$emit(enums.busEvents.userLogout),\r\n                    }\r\n                ]\r\n            },\r\n            linksMenu: {\r\n                title: 'LINKS',\r\n                list:\r\n                    [\r\n                        {\r\n                            itemId: 'menu-item-contact',\r\n                            title:'CONTACT',\r\n                            //link:`https://paladintrue.com/${appStateManager.currentLang}/contact/`\r\n                            link: $translate.instant(\"URL_CONTACT\")\r\n                        },\r\n                        {\r\n                            itemId: 'menu-item-terms-n-conditions',\r\n                            title: 'TANDC',\r\n                            link: `https://paladintrue.com/${appStateManager.currentLang}/terms-and-conditions/`\r\n                        },\r\n                        {\r\n                            itemId: 'menu-item-privacy-policy',\r\n                            title: 'PRIVACY_POLICY',\r\n                            link: `https://paladintrue.com/${appStateManager.currentLang}/privacy-policy/`\r\n                        },\r\n                        {\r\n                            itemId: 'menu-item-help-support',\r\n                            title: 'SUPPORT',\r\n                            BL: () => {\r\n                                ZendeskWidget.activate();\r\n                            }\r\n                        }\r\n                    ]\r\n            },\r\n            common: {\r\n                title: '', // no title\r\n                list: [\r\n                    {\r\n                        itemId:'menu-item-browse',\r\n                        title: 'BORROW',\r\n                        BL: () => $state.go('app.browse'),\r\n                        link: window.globals.ROOT_PATH + appStateManager.currentLang + \"/categorie/\"+ (appStateManager.currentLang == 'it'? \"Tutte-le-Categorie\" : \"All-Categories\")+ \"?sortBy=SortByBestProduct&pageIndex=1\",\r\n                    },\r\n                    {\r\n                        itemId: 'menu-item-lend',\r\n                        title: 'LEND',\r\n                        BL: () => {\r\n                            if (appStateManager.user == null) {\r\n                                popupService.showLoginSignupPopup(false)\r\n                            } else {\r\n                                $rootScope.$emit(enums.busNavigation.userListings);\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        itemId: 'menu-item-my-rentals',\r\n                        title: 'MY_RENTAL',\r\n                        BL: () => {\r\n                            if (appStateManager.user == null) {\r\n                                popupService.showLoginSignupPopup(false)\r\n                            } else {\r\n                                $rootScope.$emit(enums.busNavigation.rentals);\r\n                            }\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n\r\n        };\r\n\r\n\r\n        /**\r\n         *\r\n         * @param menuItem the clicked menu item\r\n         *\r\n         */\r\n        const menuClickHandlerMethod = (menuItem) => {\r\n            //bl has prio against link\r\n            if (menuItem.BL) {\r\n                menuItem.BL();\r\n            } else if (menuItem.link) {\r\n                window.open(menuItem.link,\"_self\");\r\n            }\r\n        };\r\n\r\n        const shouldShowMenuItem = (menuItem) => {\r\n            return menuItem.shouldHide == undefined || !menuItem.shouldHide();\r\n        };\r\n\r\n\r\n        const dummyNavNotImplementedToast = () => {\r\n            $mdToast.show(\r\n                $mdToast.simple()\r\n                    .textContent(`Navigation on menu item not implemented yet`)\r\n                    .hideDelay(3000)\r\n            );\r\n        };\r\n        return {\r\n            commonMenus,\r\n            menuClickHandlerMethod,\r\n            shouldShowMenuItem,\r\n        }\r\n    }]);","// angular.module('paladinApp')\r\n// .config(['$translateProvider', function($translateProvider) {\r\n// \t$translateProvider\r\n// \t.useStaticFilesLoader({\r\n// \t    prefix: '/translations/',\r\n// \t    suffix: '.json'\r\n// \t})\r\n// \t.preferredLanguage('it');\r\n// \t/*.useLocalStorage()\r\n//   \t.useMissingTranslationHandlerLog()*/\r\n// }]);\r\n//\r\n\r\nangular.module('paladinApp')\r\n    .factory('ngTranslateErrorHandler', ['ptLog',function (ptLog) {\r\n        // has to return a function which gets a tranlation ID\r\n        return function (translationID,uses) {\r\n            // do something with dep1 and dep2\r\n            ptLog.warn(`Translation for key \"${translationID}\" not found when using: ${uses}, using key instead`);\r\n            return translationID;\r\n        };\r\n    }]);\r\nangular.module('paladinApp')\r\n    .config(['$translateProvider', function($translateProvider) {\r\n        $translateProvider\r\n            .useStaticFilesLoader({\r\n                prefix: '/translations/locale-',\r\n                suffix: '.json'\r\n            }).preferredLanguage(localStorage.getItem('PT_LSK_preferredLanguage') || 'it')\r\n            .useMissingTranslationHandler('ngTranslateErrorHandler')\r\n            // .useMissingTranslationHandlerLog()\r\n            .useSanitizeValueStrategy('escapeParameters');\r\n\r\n\r\n    }]);","angular.module('paladinApp')\r\n    .service('navigationService',[\r\n        '$rootScope',\r\n        '$state',\r\n        'enums',\r\n        'ptLog',\r\n        'ptUtils',\r\n        'toastService',\r\n        function (\r\n            $rootScope,\r\n            $state,\r\n            enums,\r\n            ptLog,\r\n            ptUtils,\r\n            toastService) {\r\n            const TAG = 'navigationService ||';\r\n\r\n            $rootScope.$on(enums.busNavigation.homePage,() => $state.go('app.home'));\r\n\r\n            $rootScope.$on(enums.busNavigation.productDetailed,(event,{product}) => {\r\n                if (product) {\r\n                    $state.go('app.products.selectedProduct',{productNameAndId: ptUtils.getProductNameAndId(product)});\r\n                } else {\r\n                    ptLog.error(TAG, enums.busNavigation.productDetailed, 'NO PRODUCT');\r\n                }\r\n            });\r\n\r\n            $rootScope.$on(enums.busNavigation.browseCategory,(event,{categoryId,subCategoryName,categoryName}) => {\r\n                let obj = {};\r\n                if (categoryId)\r\n                    obj.category = categoryId;\r\n                else if (categoryName)\r\n                    obj.category = categoryName.replace(/\\ /g,'-');\r\n\r\n                if (subCategoryName)\r\n                    obj.subCategory = subCategoryName.replace(/\\ /g,'-');\r\n                obj.sortBy = enums.productsSortOptions.bestProduct;\r\n                obj.isResetSearch = true;\r\n                $state.go('app.browse',obj);\r\n            });\r\n\r\n            $rootScope.$on(enums.busNavigation.browseKeyword,(event,data) => {\r\n                $state.go('app.browse',{ search: data.keyword });\r\n            });\r\n\r\n            $rootScope.$on(enums.busNavigation.switchBrowseMode, (event,{isTryAndBuy}) => {\r\n                if (isTryAndBuy) {\r\n                    $state.go('app.browse');\r\n                } else {\r\n                    $state.go('app.browsePrivate');\r\n                }\r\n            });\r\n\r\n            $rootScope.$on(enums.busNavigation.browseSort,(event,data) => {\r\n                $state.go('app.browse',{sortBy:data.sortBy,search:'',isResetSearch: true });\r\n            });\r\n\r\n            $rootScope.$on(enums.busNavigation.userProfile,(event,{ userId, replace }) => {\r\n               $state.go('app.profiles.publicProfile', { userId }, replace ? {location: 'replace'} : undefined)\r\n            });\r\n\r\n            $rootScope.$on(enums.busNavigation.userListings,() => $state.go('app.myListings'));\r\n\r\n            $rootScope.$on(enums.busNavigation.newProduct,() => $state.go('app.products.newProduct') );\r\n\r\n            $rootScope.$on(enums.busNavigation.rentals,() => $state.go('app.bookings.userBookings') );\r\n\r\n            $rootScope.$on(enums.busNavigation.transactionDetailed,(event,{ bookingId,replace }) => {\r\n                $state.go('app.bookings.bookingDetailed',{bookingId: bookingId},replace ? { location: 'replace'} : undefined)\r\n            });\r\n\r\n            $rootScope.$on(enums.busNavigation.idVerification,(event,{bookingId ,replace}) => {\r\n                // optional booking object\r\n                $state.go('verification.user', { bookingId: bookingId ? bookingId : undefined }, replace ? {location: 'replace'} : undefined);\r\n            });\r\n\r\n            $rootScope.$on(enums.busNavigation.userReview, (event, { bookingId, isLender}) => {\r\n\r\n                $state.go('app.products.productReview', {bookingId: booking.Booking_Id});\r\n            });\r\n\r\n            $rootScope.$on(enums.busNavigation.paymentDetailed,(event,{startDate, endDate, productId, purchase, bookingId}) => {\r\n                        $state.go('app.bookings.paymentDetailed',{\r\n                            startDate,\r\n                            endDate,\r\n                            productId,\r\n                            purchase,\r\n                            bookingId,\r\n                        });\r\n                        // ptLog.error(TAG, `Navigation Error: ${enums.busNavigation.paymentDetailed}, please provide startDate, endDate and productId`)\r\n                    // }\r\n            });\r\n\r\n            $rootScope.$on(enums.busNavigation.chat, (event, data = undefined) => {\r\n                if (data && data.chatId)\r\n                    $state.go('app.chat',{chatId:data.chatId});\r\n                else\r\n                    $state.go('app.chat')\r\n            })\r\n\r\n        }]);","angular.module('paladinApp')\r\n    .factory('pager', ['$rootScope', '$location', function($rootScope, $location) {\r\n  var pagerService = {};\r\n\r\n  // service implementation\r\n  pagerService.GetPager =function(totalPages, currentPage, pageSize) {\r\n      // default to first page\r\n      currentPage = currentPage || 1;\r\n\r\n      // default page size is 10\r\n      pageSize = pageSize || 10;\r\n\r\n      // calculate total pages\r\n      //var totalPages = Math.ceil(totalItems / pageSize);\r\n      var totalItems = totalPages*pageSize;\r\n      var startPage, endPage;\r\n      if (totalPages <= 10) {\r\n          // less than 10 total pages so show all\r\n          startPage = 1;\r\n          endPage = totalPages;\r\n      } else {\r\n          // more than 10 total pages so calculate start and end pages\r\n          if (currentPage <= 6) {\r\n              startPage = 1;\r\n              endPage = 10;\r\n          } else if (currentPage + 4 >= totalPages) {\r\n              startPage = totalPages - 9;\r\n              endPage = totalPages;\r\n          } else {\r\n              startPage = currentPage - 5;\r\n              endPage = currentPage + 4;\r\n          }\r\n      }\r\n\r\n      // calculate start and end item indexes\r\n      var startIndex = (currentPage - 1) * pageSize;\r\n      var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n      // create an array of pages to ng-repeat in the pager control\r\n      var pages = _.range(startPage, endPage + 1);\r\n\r\n      // return object with all pager properties required by the view\r\n      return {\r\n          totalItems: totalItems,\r\n          currentPage: currentPage,\r\n          pageSize: pageSize,\r\n          totalPages: totalPages,\r\n          startPage: startPage,\r\n          endPage: endPage,\r\n          startIndex: startIndex,\r\n          endIndex: endIndex,\r\n          pages: pages\r\n      };\r\n  };\r\n\r\n  return pagerService;\r\n}]);","angular.module('paladinPopups',[\r\n    'ngMaterial',\r\n    'ngMessages',\r\n    'ngMaterialDateRangePicker',\r\n    'angularMoment',\r\n    '720kb.socialshare'\r\n])\r\n    .config(['$mdDialogProvider',function ($mdDialogProvider) {\r\n        $mdDialogProvider.addPreset('confirmPreset', {\r\n            options: function () {\r\n                return {\r\n                    templateUrl: './views/popups/confirm.popup.html',\r\n                    controller: 'confirmPopup',\r\n                    bindToController: true,\r\n                    controllerAs: 'confirmCtrl',\r\n                    clickOutsideToClose: true,\r\n                    escapeToClose: true\r\n                }\r\n            }\r\n        });\r\n\r\n        $mdDialogProvider.addPreset('loginSignup', {\r\n            options: function () {\r\n                return {\r\n                    templateUrl:'./views/popups/loginSignup.popup.html',\r\n                    controller: 'loginSignUpPopup',\r\n                    bindToController: true,\r\n                    controllerAs: 'loginSignupCtrl',\r\n                    clickOutsideToClose: true,\r\n                    escapeToClose: true,\r\n                }\r\n            }\r\n        });\r\n\r\n        $mdDialogProvider.addPreset('forgotPassword',{\r\n            options: function () {\r\n                return {\r\n                    templateUrl: './views/popups/forgotPassword.popup.html',\r\n                    controller: 'forgotPasswordPopup',\r\n                    controllerAs: 'forgotPasswordCtrl',\r\n                    clickOutsideToClose: true,\r\n                    escapeToClose: true,\r\n                }\r\n            }\r\n        });\r\n\r\n        $mdDialogProvider.addPreset('idVerificationFailureHandler',{\r\n            options: function () {\r\n                return {\r\n                    templateUrl: './views/popups/idVerificationFailureHandler.popup.html',\r\n                    controller: 'idVerificationFailureHandlerPopup',\r\n                    controllerAs: 'idVerificationFailureHandlerPopup',\r\n                    clickOutsideToClose: false,\r\n                    escapeToClose: false\r\n                }\r\n            }\r\n        });\r\n\r\n        $mdDialogProvider.addPreset('emailVerification',{\r\n            options: function () {\r\n                return {\r\n                    templateUrl: './views/popups/emailVerification.popup.html',\r\n                    controller: 'emailVerificationPopup',\r\n                    controllerAs: 'emailVerificationCtrl',\r\n                    clickOutsideToClose: false,\r\n                    escapeToClose: false\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n        $mdDialogProvider.addPreset('shareReferralLink',{\r\n            options: function () {\r\n                return {\r\n                    templateUrl: './views/popups/shareToSocialMedia.popup.html',\r\n                    controller: 'shareToSocialMediaPopup',\r\n                    controllerAs: 'shareToSocialMediaCtrl',\r\n                    clickOutsideToClose: true,\r\n                    escapeToClose: true\r\n                }\r\n            }\r\n        });\r\n\r\n        $mdDialogProvider.addPreset('changePassword',{\r\n            options: function () {\r\n                return {\r\n                    templateUrl:'./views/popups/changePassword.popup.html',\r\n                    controller: 'changePasswordPopup',\r\n                    controllerAs: 'changePasswordCtrl',\r\n                    clickOutsideToClose: true,\r\n                    escapeToClose: true\r\n                }\r\n            }\r\n        });\r\n\r\n        $mdDialogProvider.addPreset('transactionStatusChange',{\r\n            options: function () {\r\n                return {\r\n                    templateUrl: './views/popups/transactionStatusChange.popup.html',\r\n                    controller: 'transactionStatusChangePopup',\r\n                    controllerAs: 'transactionStatusChangeCtrl',\r\n                    clickOutsideToClose: false,\r\n                    escapeToClose: false,\r\n                }\r\n            }\r\n        });\r\n\r\n        $mdDialogProvider.addPreset('inputField',{\r\n            options: function () {\r\n                return {\r\n                    templateUrl: './views/popups/inputField.popup.html',\r\n                    controller:'inputFieldPopup',\r\n                    controllerAs: 'inputFieldCtrl',\r\n                    clickOutsideToClose: false,\r\n                    escapeToClose: false,\r\n                }\r\n            }\r\n        });\r\n\r\n        $mdDialogProvider.addPreset('loader',{\r\n            options: function () {\r\n                return {\r\n                    templateUrl: './views/popups/loader.popup.html',\r\n                    controller: 'loaderPopup',\r\n                    controllerAs: 'loaderCtrl',\r\n                    panelClass: 'loaderOverlay',\r\n                    clickOutsideToClose: false,\r\n                    escapeToClose: false,\r\n                }\r\n            }\r\n        });\r\n\r\n        $mdDialogProvider.addPreset('bookingTrackerInfoMobile', {\r\n            options: function () {\r\n                return {\r\n                    templateUrl: './views/popups/bookingTrackerInfoMobile.popup.html',\r\n                    controller: 'bookingTrackerInfoMobilePopup',\r\n                    controllerAs: 'bookingTrackerInfoMobilePopupCtrl',\r\n                    clickOutsideToClose: false,\r\n                    escapeToClose: false,\r\n                }\r\n            }\r\n        })\r\n    }])\r\n\r\n\r\n    .service('popupService', [\r\n        \r\n        '$mdDialog',\r\n        '$mdDateRangePicker',\r\n        'moment',\r\n        'ptUtils',\r\n        function (\r\n            $mdDialog,\r\n            $mdDateRangePicker,\r\n            moment,\r\n            ptUtils) {\r\n\r\n            this.showAlert = function (title, message, okBtn = 'POPUP_OK') {\r\n                return new Promise((resolve,reject) => {\r\n                    const confirm2 = $mdDialog.confirmPreset({\r\n                        locals: {\r\n                            title,\r\n                            message,\r\n                            isConfirm: false,\r\n                            okBtn: okBtn,\r\n                        }\r\n                    });\r\n\r\n                    $mdDialog.show(confirm2)\r\n                        .then(resolve)\r\n                        .catch(reject)\r\n                })\r\n            };\r\n\r\n            this.showConfirm = function (title,message,yesButton = 'POPUP_YES', noButton = 'POPUP_NO') {\r\n                return new Promise((resolve,reject) => {\r\n                    const confirm2 = $mdDialog.confirmPreset({\r\n                        locals: {\r\n                            title,\r\n                            message,\r\n                            yesButton,\r\n                            noButton,\r\n                            isConfirm: true,\r\n                        }\r\n                    });\r\n\r\n                    $mdDialog.show(confirm2)\r\n                        .then(resolve)\r\n                        .catch(reject)\r\n                })\r\n            };\r\n\r\n            this.showLoginSignupPopup = function (isSignUp = false) {\r\n                return new Promise((resolve,reject) => {\r\n                    const loginSignup = $mdDialog.loginSignup({\r\n                        locals: {\r\n                            selectedTab: isSignUp ? 1 : 0\r\n                        },\r\n                    });\r\n                    $mdDialog.show(loginSignup)\r\n                        .then(resolve)\r\n                        .catch(reject)\r\n                })\r\n            };\r\n\r\n            this.showForgotPassword = function () {\r\n                return new Promise((resolve,reject) => {\r\n                    $mdDialog.show($mdDialog.forgotPassword())\r\n                        .then(resolve)\r\n                        .catch(reject)\r\n                })\r\n            };\r\n\r\n            this.showIdVerificationFailureHandler = function (data) {\r\n                console.log('idVerificationFailureHandler locals ', data)\r\n                return new Promise((resolve,reject) => {\r\n                    const idVerificationHandler = $mdDialog.idVerificationFailureHandler({\r\n                        locals: data\r\n                    });\r\n                    $mdDialog.show(idVerificationHandler)\r\n                        .then(resolve)\r\n                        .catch(reject)\r\n                })\r\n            };\r\n\r\n            this.showEmailVerification = function (userId/* Must be provided for verification*/) {\r\n                return new Promise((resolve,reject) => {\r\n                    const emailVerification = $mdDialog.emailVerification({\r\n                        locals: {\r\n                            userId,\r\n                        }\r\n                    });\r\n                    $mdDialog.show(emailVerification)\r\n                        .then(resolve)\r\n                        .catch(reject)\r\n                })\r\n            };\r\n\r\n            this.showShareReferralLink = function (referralLink) {\r\n                return new Promise((resolve,reject) => {\r\n                    const shareReferralLink = $mdDialog.shareReferralLink({\r\n                        locals: {\r\n                            referralLink\r\n                        }\r\n                    });\r\n                    $mdDialog.show(shareReferralLink)\r\n                        .then(resolve)\r\n                        .catch((err)=>{\r\n                            // closing the modal on click-outside will reject so catch it here\r\n                            console.log('close modal err ', err)\r\n                        })\r\n                })\r\n            };\r\n\r\n            this.showDateRangePicker = function (productBookingDetails,product) {\r\n                return new Promise((resolve,reject) => {\r\n                    const dateRanges = ptUtils.getBookedDateRanges(productBookingDetails);\r\n\r\n                    $mdDateRangePicker.show({\r\n                        onePanel: true,\r\n                        autoConfirm: true,\r\n                        model: {},\r\n                        localizationMap: ptUtils.getTranslationDictForDatePicker(),\r\n                        maxRange: product.MaxRentalPeriod || undefined,\r\n                        isDisabledDate: ($date) => {\r\n                            const momentDate = moment($date);\r\n                            for (let i = 0; i < dateRanges.length ; i++)\r\n                                if (momentDate.isBetween(dateRanges[i].startDate,dateRanges[i].endDate) ||\r\n                                    momentDate.isSame(dateRanges[i].startDate) ||\r\n                                    momentDate.isSame(dateRanges[i].endDate))\r\n                                    return true;\r\n\r\n                            if (moment().isBefore($date)) return false; // TODO: - Check if product available for rent at dates\r\n\r\n                            return true;\r\n                        }\r\n                    })\r\n                        .then((result) => {\r\n                            resolve(result)\r\n                        })\r\n                        .catch(() => {\r\n                            reject()\r\n                        })\r\n                });\r\n            };\r\n\r\n            this.showChangePassword = function () {\r\n                return new Promise((resolve,reject) => {\r\n                    const changePass = $mdDialog.changePassword({\r\n                        locals: {\r\n                            wot: 'no',\r\n                        }\r\n                    });\r\n                    $mdDialog.show(changePass)\r\n                        .then(resolve)\r\n                        .catch(reject)\r\n                })\r\n            };\r\n\r\n            this.showTransactionStatusChange = function ({ booking, apiMethod, title }) {\r\n                return new Promise((resolve,reject) => {\r\n                    const statusChange = $mdDialog.transactionStatusChange({\r\n                        locals: {\r\n                            booking,\r\n                            apiMethod,\r\n                            title,\r\n                        }\r\n                    });\r\n\r\n                    $mdDialog.show(statusChange)\r\n                        .then(resolve)\r\n                        .catch(reject)\r\n                })\r\n            };\r\n\r\n            this.showInputField = function ({title,\r\n                message,\r\n                initialValue,\r\n                inputRegexValidation = undefined,\r\n                validationErrorMessage = 'PLEASE_ENTER_A_VALID_INPUT'}) {\r\n                return new Promise((resolve,reject) => {\r\n                    const inputField = $mdDialog.inputField({\r\n                        locals: {\r\n                            title,\r\n                            message,\r\n                            value: initialValue,\r\n                            inputRegexValidation,\r\n                            validationErrorMessage\r\n                        }\r\n                    });\r\n\r\n                    $mdDialog.show(inputField)\r\n                        .then(resolve)\r\n                        .catch(reject)\r\n                })\r\n            };\r\n            this.showLoader = function () {\r\n                $mdDialog.show($mdDialog.loader());\r\n            };\r\n            this.hideLoader = function () {\r\n                $mdDialog.hide();\r\n            };\r\n\r\n            this.showBookingTrackerInfoMobilePopup = function (booking) {\r\n                return new Promise((resolve => {\r\n                    const bookingTracker = $mdDialog.bookingTrackerInfoMobile({\r\n                        locals: {\r\n                            booking: booking\r\n                        }\r\n                    });\r\n                    $mdDialog.show(bookingTracker)\r\n                        .then(resolve)\r\n                        .catch(resolve)\r\n                }))\r\n            }\r\n\r\n        }]);\r\n","angular.module('paladinApp')\r\n    .service('productReviewService', [\r\n        '$state',\r\n        '$stateParams',\r\n        '$window',\r\n        'enums',\r\n        'apiService',\r\n        function (\r\n            $state,\r\n            $stateParams,\r\n            $window,\r\n            enums,\r\n            apiService\r\n        ) {\r\n\r\n            let self = this;\r\n\r\n            // save ref to the booking to be reviewed\r\n            self.booking = null;\r\n\r\n            const startReviewFlow = (booking, isLender) => {\r\n                self.booking = booking;\r\n                $state.go('app.products.productReview', {bookingId: booking.Booking_Id});\r\n            };\r\n\r\n            const leaveProductReviewPage = (toState = null) => {\r\n                $window.history.back();\r\n            };\r\n\r\n            const submitTransactionReview = (params) => {\r\n                apiService.reviews.submitTransactionReview(params)\r\n                    .then((result)=>{\r\n                        toastService.simpleToast($translate.instant('REVIEW_ADDED_SUCCESSFULLY'));\r\n                    });\r\n            };\r\n\r\n            const getBookingToReview = () => {\r\n                return self.booking;\r\n            };\r\n\r\n            return {\r\n                startReviewFlow,\r\n                leaveProductReviewPage,\r\n                submitTransactionReview,\r\n                getBookingToReview\r\n            }\r\n        }]);\r\n","angular.module('paladinApp')\r\n    .factory('Products', ['$http','$base64','enums', function ($http,$base64,enums) {\r\n  var Products = {};\r\n\r\n  Products.getHeaders = function(){\r\n    var headers = {\r\n        //\"Authorization\": \"Basic \" + auth,\r\n        'Access-Control-Allow-Origin': '*',\r\n        'X-Requested' : null,\r\n        'Content-Type' : 'application/json; charset=utf-8'\r\n    };\r\n\r\n    return headers;\r\n  }\r\n\r\n  Products.getAll = function(filters) {\r\n    \r\n    if(!filters.languageCode)filters.languageCode='it-IT';\r\n\r\n    var payload = {\r\n        //headers: this.getHeaders()\r\n    };\r\n\r\n    //console.log(\"-----GET SEARCHED PRODUCTS: \");\r\n    //console.log(this.searchProductParam(filters));\r\n   return $http.get( window.globals.API_URL  + 'GetBrowsePageProducts?'+this.searchProductParam(filters))\r\n  };\r\n\r\n  Products.getTotalPageCount = function(filters) {\r\n    \r\n    if(!filters.languageCode)filters.languageCode='en';\r\n\r\n    var payload = {\r\n        headers: this.getHeaders()\r\n    };\r\n    //console.log(\"-----GET PAGE COUNT----\");\r\n    //console.log(window.globals.API_URL  + 'GetPageCount?'+this.searchProductParam(filters));\r\n\r\n    return $http.get( window.globals.API_URL  + 'GetPageCount?'+this.searchProductParam(filters))\r\n  };\r\n\r\n  /*\r\n  Products.decryptProductURL = function(url) {\r\n    return url.split('-').join(' ').split('_').join('-').split('^').join('/').split('__').join('_');\r\n  }\r\n  */\r\n\r\n  Products.encryptProductURL = function(productName) {\r\n    return productName.trim().split(' ').join('-').split('/').join('-');\r\n  }\r\n\r\n  Products.getDetail = function(productId,languageCode,callback) {\r\n    var payload = {\r\n        headers: this.getHeaders()\r\n    };\r\n\r\n    if(!languageCode)LanguageCode='en';\r\n\r\n    //console.log(\"-----GET PRODUCT DETAIL API----\");\r\n    //console.log(window.globals.API_URL  + 'GetProductDetail?User_Id=0&Product_Title='\r\n    //+encodeURIComponent(Products.decryptProductURL(productId)));\r\n\r\n    \r\n\r\n    if(!isNaN(productId)){\r\n      $http.get(window.globals.API_URL  + 'GetProductDetail?User_Id=0&Product_Id='+productId).then(callback);\r\n    }else{\r\n      $http.get(window.globals.API_URL  + 'GetProductDetail?User_Id=0&Product_Title='+encodeURIComponent(Products.decryptProductURL(productId))).then(callback);\r\n    }\r\n\r\n  };\r\n\r\n  Products.formatLanguageCode = function(code){\r\n    return code=='it'?'it-IT':code;\r\n  };\r\n\r\n  Products.searchProductParam = function(json){\r\n    var _this = this;\r\n    var keys = Object.keys(json);\r\n    var paramStr = '';\r\n    for(var i=0;i<keys.length;i++){\r\n      var k = keys[i];\r\n      var val = json[k] ;\r\n      if(k == 'languageCode' && val){\r\n        paramStr+= 'LanguageCode' + '=' + encodeURIComponent(this.formatLanguageCode(val)); \r\n      }else if(k == 'category' && val){\r\n        if(val.selectedCategoryId){\r\n          paramStr+= 'Category_Id' + '=' + encodeURIComponent(val.selectedCategoryId); \r\n        }\r\n        if(val.selectedSubCategoryId){\r\n          paramStr+= '&SubCategory_Id' + '=' + encodeURIComponent(val.selectedSubCategoryId); \r\n        }\r\n        if(val.isTryAndBuy != undefined){\r\n          paramStr+=paramStr[paramStr.length-1] == '&' ? \r\n            'isTryAndBuy=' + encodeURIComponent(val.isTryAndBuy) :\r\n            '&isTryAndBuy=' + encodeURIComponent(val.isTryAndBuy);\r\n        }\r\n      }else if(k == 'sortBy' && val){\r\n        \r\n        if(val=='SortByPopularity'){\r\n          paramStr+='SortByPopularity' + '=true' ; \r\n        }else if(val=='SortByRecent'){\r\n          paramStr+='SortByRecent' + '=true' ; \r\n        }else if(val=='SortByGeoLocation'){\r\n          paramStr+='SortByGeoLocation' + '=true' ; \r\n        }else if(val=='SortByLowPrice'){\r\n          paramStr+='SortByLowPrice' + '=true' ; \r\n        }else if(val=='SortByHighPrice'){\r\n          paramStr+='SortByHighPrice' + '=true' ; \r\n        }else if(val=='SortByBestProduct'){\r\n          paramStr+='SortByBestProduct' + '=true' ; \r\n        }\r\n\r\n      }else if(k == 'priceRange' && val){\r\n        var minPrice = val[0];\r\n        var maxPrice = val[1];\r\n        paramStr+= 'MinPriceRange' + '=' + encodeURIComponent(minPrice)+'&'+'MaxPriceRange'+'='+encodeURIComponent(maxPrice); \r\n      }else if(k == 'currentPage' && val){\r\n        paramStr+= 'PageIndex' + '=' + encodeURIComponent(val-1); \r\n      }else if(k == 'search' && val){\r\n\r\n        var finalStr = ''; \r\n        if(val.searchStr){\r\n          finalStr+='KeywordProduct' + '=' + encodeURIComponent(val.searchStr); \r\n          if(val.lat)finalStr+='&';\r\n        }\r\n        \r\n        //we only need to send lat long for sort = nearest\r\n        if(val.lat && json.sortByCode == enums.productsSortByTextCode.SortByGeoLocation){\r\n          finalStr+='Latitude' + '=' +encodeURIComponent(val.lat); \r\n          if(val.lng)finalStr+='&';\r\n        }\r\n        if(val.lng && json.sortByCode == enums.productsSortByTextCode.SortByGeoLocation){\r\n          finalStr+='Longitude' + '=' +encodeURIComponent(val.lng); \r\n        }\r\n        paramStr+= finalStr;\r\n      }else if(k == 'distanceRange' && val && json.sortByCode == enums.productsSortByTextCode.SortByGeoLocation){\r\n        var maxDistance = val;\r\n        if(maxDistance<=50)paramStr+= 'Range' + '=' + encodeURIComponent(maxDistance); \r\n      }else if(k == 'currentPage' && val){\r\n        paramStr+='PageIndex='+(val-1);    \r\n      }\r\n\r\n      if(i<(keys.length-1) && paramStr && paramStr.slice(-1) !='&'){\r\n\r\n        paramStr+='&';\r\n      }\r\n      \r\n    }\r\n\r\n    \r\n    if(paramStr.endsWith('&')){\r\n      paramStr = paramStr.substring(0,paramStr.length-1)\r\n    }\r\n    \r\n    paramStr+='&isWeb=true';\r\n    return paramStr;\r\n  };\r\n\r\n  \r\n  return Products;\r\n}]);","angular.module('paladinApp')\r\n.service('ptLog', [function () {\r\n        this.log = function () {\r\n            if( window.globals.LOG_LEVEL === 'verbose') {\r\n                console.log.apply(this,['PALADIN LOG:',...arguments]);\r\n            }\r\n        };\r\n\r\n        this.warn = function () {\r\n            if (window.globals.LOG_LEVEL === 'verbose') {\r\n                console.warn.apply(this,['PALADIN WARN:',...arguments])\r\n            }\r\n        };\r\n\r\n        this.error = function () {\r\n            console.error.apply(this,['PALADIN ERROR:',...arguments]);\r\n        }\r\n}]);","'use strict';\r\nangular.module('paladinApp')\r\n    .service('ptUtils', [\r\n        '$rootScope',\r\n        'enums',\r\n        'moment',\r\n        '$translate',\r\n        '$timeout',\r\n        'ptLog',\r\n        'geoLocationService',\r\n        '$sce',\r\n        function (\r\n            $rootScope,\r\n            enums,\r\n            moment,\r\n            $translate,\r\n            $timeout,\r\n            ptLog,\r\n            geoLocationService,\r\n            $sce) {\r\n            const TAG = 'ptUtils';\r\n\r\n            const stringToDate = (dateString, format = 'DD/MM/YYYY HH:mm', dateDelimiter = '/', timeDelimiter = ':', dateTimeSplitter = ' ') => {\r\n\r\n                const isHasTime = format.indexOf('HH') != -1 && format.indexOf('mm') != -1;\r\n                let dateTimeSplits = [dateString];\r\n\r\n                if (isHasTime)\r\n                    dateTimeSplits = dateString.split(dateTimeSplitter);\r\n\r\n                const datePartFormat = (isHasTime ? format.split(dateTimeSplitter)[0] : format).split(dateDelimiter);\r\n                const dateItems = (isHasTime ? dateString.split(dateTimeSplitter)[0] : dateString).split(dateDelimiter);\r\n                let yearI = datePartFormat.indexOf(datePartFormat.find((item) => item.indexOf('Y') != -1));\r\n                let monthI = datePartFormat.indexOf('MM');\r\n                let dayI = datePartFormat.indexOf('DD');\r\n                let hourI = undefined;\r\n                let minuteI = undefined;\r\n\r\n\r\n                if (isHasTime) {\r\n                    const timeItems = dateString.split(dateTimeSplitter)[1].split(timeDelimiter);\r\n                    const timePartFormat = format.split(dateTimeSplitter)[1].split(timeDelimiter);\r\n                    hourI = timePartFormat.indexOf('HH');\r\n                    minuteI = timePartFormat.indexOf('mm');\r\n                    return new Date(dateItems[yearI], parseInt(dateItems[monthI]) - 1, dateItems[dayI], timeItems[hourI], timeItems[minuteI]);\r\n                }\r\n                return new Date(dateItems[yearI], parseInt(dateItems[monthI]) - 1, dateItems[dayI]);\r\n            };\r\n\r\n            const getDisplayDataForTransactionStatus = (statusId) => {\r\n                let text = undefined;\r\n                let color = undefined;\r\n                switch (statusId) {\r\n                    case enums.productRentalStatus.available:\r\n                        text = 'PRODUCT_STATUS_AVAILABLE';\r\n                        color = 'rentOrderStatus-primary-50';\r\n                        break;\r\n                    case enums.productRentalStatus.requested:\r\n                        color = 'rentOrderStatus-primary-100';\r\n                        text = 'PRODUCT_STATUS_REQUESTED';\r\n                        break;\r\n                    case enums.productRentalStatus.timeout:\r\n                    case enums.productRentalStatus.timeoutByBorrower:\r\n                        color = 'rentOrderStatus-primary-200';\r\n                        text = 'PRODUCT_STATUS_TIMEOUT';\r\n                        break;\r\n                    case enums.productRentalStatus.canceled:\r\n                    case enums.productRentalStatus.criticalCancel:\r\n                    case enums.productRentalStatus.moderateCancel:\r\n                    case enums.productRentalStatus.canceledByLender:\r\n                        color = 'rentOrderStatus-primary-200';\r\n                        text = 'PRODUCT_STATUS_CANCELED';\r\n                        break;\r\n                    case enums.productRentalStatus.denied:\r\n                        color = 'rentOrderStatus-primary-200';\r\n                        text = 'PRODUCT_STATUS_DECLINED';\r\n                        break;\r\n                    case enums.productRentalStatus.accepted:\r\n                        color = 'rentOrderStatus-primary-300';\r\n                        text = 'PRODUCT_STATUS_ACCEPTED';\r\n                        break;\r\n                    case enums.productRentalStatus.started:\r\n                        color = 'rentOrderStatus-primary-400';\r\n                        text = 'PRODUCT_STATUS_STARTED';\r\n                        break;\r\n                    case enums.productRentalStatus.ended:\r\n                        color = 'rentOrderStatus-primary-500';\r\n                        text = 'PRODUCT_STATUS_ENDED';\r\n                        break;\r\n                    case enums.productRentalStatus.verified:\r\n                        color = 'rentOrderStatus-primary-50';\r\n                        text = 'PRODUCT_STATUS_VERIFIED';\r\n                        break;\r\n                    case enums.productRentalStatus.notVerified:\r\n                        color = 'rentOrderStatus-primary-100';\r\n                        text = 'PRODUCT_STATUS_NOT_VERIFIED';\r\n                        break;\r\n                    case enums.productRentalStatus.verifying:\r\n                        color = 'rentOrderStatus-primary-100';\r\n                        text = 'PRODUCT_STATUS_VERIFYING'; \r\n                        break;\r\n                    case enums.productRentalStatus.booked:\r\n                        color = 'rentOrderStatus-primary-300';\r\n                        text = 'PRODUCT_STATUS_BOOKED'; \r\n                        break;\r\n                }\r\n                return {\r\n                    text,\r\n                    color\r\n                }\r\n            };\r\n\r\n            const getPriceForRentalPeriod = (product, rentalPeriodInDays) => {\r\n                const {\r\n                    Price1Day,\r\n                    Price3Day,\r\n                    Price5Day,\r\n                    Price7Day,\r\n                    Price10Day,\r\n                    Price15Day,\r\n                    Product_TryAndBuy,\r\n                    Product_CategoryId,\r\n                    Product_Price_Perday\r\n                } = product;\r\n                let daysFactor = 0;\r\n\r\n                if (enums.categoriesIds.tryAndBuy == Product_CategoryId || Product_TryAndBuy) {\r\n                    if (Price15Day > 0 && rentalPeriodInDays >= 15) {\r\n                        daysFactor = rentalPeriodInDays - 15;\r\n                        if (daysFactor > 0)\r\n                            return Price15Day + getPriceForRentalPeriod(product, daysFactor);\r\n                        else\r\n                            return Price15Day;\r\n                    } else if (Price10Day > 0 && rentalPeriodInDays >= 10) {\r\n                        daysFactor = rentalPeriodInDays - 10;\r\n                        if (daysFactor > 0)\r\n                            return Price10Day + getPriceForRentalPeriod(product, daysFactor);\r\n                        else\r\n                            return Price10Day;\r\n                    } else if (Price7Day > 0 && rentalPeriodInDays >= 7) {\r\n                        daysFactor = rentalPeriodInDays - 7;\r\n                        if (daysFactor > 0)\r\n                            return Price7Day + getPriceForRentalPeriod(product, daysFactor);\r\n                        else\r\n                            return Price7Day;\r\n                    } else if (Price5Day > 0 && rentalPeriodInDays >= 5) {\r\n                        daysFactor = rentalPeriodInDays - 5;\r\n                        if (daysFactor > 0)\r\n                            return Price5Day + getPriceForRentalPeriod(product, daysFactor);\r\n                        else\r\n                            return Price5Day;\r\n                    } else if (Price3Day > 0 && rentalPeriodInDays >= 3) {\r\n                        daysFactor = rentalPeriodInDays - 3;\r\n                        if (daysFactor > 0)\r\n                            return Price3Day + getPriceForRentalPeriod(product, daysFactor);\r\n                        else\r\n                            return Price3Day;\r\n\r\n                    } else if (Price1Day > 0 && rentalPeriodInDays >= 1) {\r\n                        daysFactor = rentalPeriodInDays - 1;\r\n                        if (daysFactor > 0)\r\n                            return Price1Day + getPriceForRentalPeriod(product, daysFactor);\r\n                        else\r\n                            return Price1Day;\r\n                    } else {\r\n                        return Product_Price_Perday * rentalPeriodInDays;\r\n                    }\r\n                } else {\r\n                    return Product_Price_Perday * rentalPeriodInDays;\r\n                }\r\n            };\r\n\r\n            const getPriceForRentalPeriodLegacy = (product, rentalPeriodInDays) => {\r\n                const {\r\n                    Price3Day,\r\n                    Price5Day,\r\n                    Price7Day,\r\n                    Price10Day,\r\n                    Price15Day,\r\n                    Product_TryAndBuy,\r\n                    Product_CategoryId,\r\n                    Product_Price_Perday\r\n                } = product;\r\n                let daysFactor = 0;\r\n                let periodFixedPrice = undefined;\r\n                if (enums.categoriesIds.tryAndBuy == Product_CategoryId || Product_TryAndBuy) {\r\n                    if (Price15Day > 0 && rentalPeriodInDays >= 15) {\r\n                        daysFactor = rentalPeriodInDays - 15;\r\n                        periodFixedPrice = Price15Day;\r\n                    } else if (Price10Day > 0 && rentalPeriodInDays >= 10) {\r\n                        daysFactor = rentalPeriodInDays - 10;\r\n                        periodFixedPrice = Price10Day;\r\n                    } else if (Price7Day > 0 && rentalPeriodInDays >= 7) {\r\n                        daysFactor = rentalPeriodInDays - 7;\r\n                        periodFixedPrice = Price7Day;\r\n                    } else if (Price5Day > 0 && rentalPeriodInDays >= 5) {\r\n                        daysFactor = rentalPeriodInDays - 5;\r\n                        periodFixedPrice = Price5Day;\r\n                    } else if (Price3Day > 0 && rentalPeriodInDays >= 3) {\r\n                        daysFactor = rentalPeriodInDays - 3;\r\n                        periodFixedPrice = Price3Day;\r\n                    }\r\n                }\r\n\r\n                if (periodFixedPrice) {\r\n                    if (daysFactor > 0)\r\n                        return periodFixedPrice + (daysFactor * Product_Price_Perday);\r\n                    else\r\n                        return periodFixedPrice\r\n                } else {\r\n                    return Product_Price_Perday * rentalPeriodInDays;\r\n                }\r\n\r\n            };\r\n\r\n            const getPriceCalculatedDescriptionForRentalPeriod = (product, rentalPeriodInDays) => {\r\n                const {\r\n                    Price1Day,\r\n                    Price3Day,\r\n                    Price5Day,\r\n                    Price7Day,\r\n                    Price10Day,\r\n                    Price15Day,\r\n                    Product_TryAndBuy,\r\n                    Product_CategoryId,\r\n                    Product_Price_Perday\r\n                } = product;\r\n                let days = rentalPeriodInDays;\r\n                let priceDivisions = {};\r\n\r\n\r\n                for (let i = days; i > 0;) {\r\n                    let division = 0;\r\n                    let divisionPrice = 0;\r\n                    if (enums.categoriesIds.tryAndBuy == Product_CategoryId || Product_TryAndBuy) {\r\n                        if (Price15Day > 0 && i >= 15) {\r\n                            division = 15;\r\n                            divisionPrice = Price15Day;\r\n                        } else if (Price10Day > 0 && i >= 10) {\r\n                            division = 10;\r\n                            divisionPrice = Price10Day;\r\n                        } else if (Price7Day > 0 && i >= 7) {\r\n                            division = 7;\r\n                            divisionPrice = Price7Day;\r\n                        } else if (Price5Day > 0 && i >= 5) {\r\n                            division = 5;\r\n                            divisionPrice = Price5Day;\r\n                        } else if (Price3Day > 0 && i >= 3) {\r\n                            division = 3;\r\n                            divisionPrice = Price3Day;\r\n                        } else if (Price1Day > 0 && i >= 1) {\r\n                            division = 1;\r\n                            divisionPrice = Price1Day;\r\n                        } else {\r\n                            division = 1;\r\n                            divisionPrice = Product_Price_Perday;\r\n                        }\r\n                    } else {\r\n                        division = 1;\r\n                        divisionPrice = Product_Price_Perday;\r\n                    }\r\n\r\n                    priceDivisions[divisionPrice] = (priceDivisions[divisionPrice] || 0) + 1;\r\n                    i -= division;\r\n                }\r\n\r\n                let priceDescription = '';\r\n                for (let div in priceDivisions) {\r\n                    priceDescription += (priceDescription === '' ? '' : '+') + `${div}x${priceDivisions[div]}`;\r\n                }\r\n                return priceDescription;\r\n            };\r\n\r\n\r\n            const calculatePricingListForProduct = (\r\n                startRentDate,\r\n                endRentDate,\r\n                product,\r\n                productBookingDetails,\r\n                isDelivery = false,\r\n                userCredit = null,\r\n                coupon = undefined,\r\n                isBuy = false,\r\n            ) => {\r\n                return new Promise((resolve, reject) => {\r\n                    if (startRentDate && endRentDate && !isBuy) {\r\n                        const days = getRentalPeriodInDays({startRentDate, endRentDate});\r\n                        let prices = [];\r\n                        const {\r\n                            Product_CategoryId,\r\n                            Product_TryAndBuy,\r\n                            MinRentalPeriod,\r\n                            MaxRentalPeriod\r\n                        } = product;\r\n                        const {\r\n                            DeliveryAndPickupDetail\r\n                        } = productBookingDetails;\r\n                        const {\r\n                            Delivery_Fee,\r\n                            PickUp_Address\r\n                        } = DeliveryAndPickupDetail;\r\n\r\n                        const isTryAndBuy = enums.categoriesIds.tryAndBuy == Product_CategoryId || Product_TryAndBuy;\r\n                        let price = getPriceForRentalPeriodLegacy(product, days);\r\n                        let priceDescription = '' + days;\r\n                        // getPriceCalculatedDescriptionForRentalPeriod(product, days);\r\n\r\n                        if (isTryAndBuy) {\r\n                            if (MinRentalPeriod > 0 && days < MinRentalPeriod)\r\n                                return reject({\r\n                                    code: -2,\r\n                                    message: $translate.instant('INVALID_MIN_RENTAL_PERIOD', {days: MinRentalPeriod}),\r\n                                });\r\n                            else if (MaxRentalPeriod > 0 && days > MaxRentalPeriod)\r\n                                reject({\r\n                                    code: -3,\r\n                                    message: $translate.instant('INVALID_MAX_RENTAL_PERIOD', {days: MaxRentalPeriod}),\r\n                                });\r\n                        }\r\n\r\n                        prices = [\r\n                            {\r\n                                price: price,\r\n                                description: `${priceDescription} ${$translate.instant(days == 1 ? 'DAY' : 'DAYS')}`\r\n                            },\r\n                            {\r\n                                price: 0,\r\n                                description: $translate.instant('SERVICE_FEE'),\r\n                                tooltip: $translate.instant('SERVICE_FEE_FREE'),\r\n                            }\r\n                        ];\r\n\r\n                        if (isTryAndBuy && isDelivery) {\r\n                            prices.push({\r\n                                price: Delivery_Fee || 0,\r\n                                description: $translate.instant('DELIVERY_FEE')\r\n                            })\r\n                        }\r\n\r\n                        let totalPrice = (isTryAndBuy && isDelivery ? (Delivery_Fee || 0) : 0) + price;\r\n\r\n\r\n                        if (coupon) {\r\n                            \r\n                            const {\r\n                                Coupon,\r\n                                CouponValue,\r\n                                CouponIsPercentage,\r\n                                CouponIsFixed,\r\n                            } = coupon;\r\n\r\n                            if (!CouponIsFixed) {\r\n                                \r\n                                let discount = CouponIsPercentage ? totalPrice * (CouponValue / 100) : CouponValue;\r\n                                totalPrice -= discount;\r\n                                if (totalPrice < 0) {\r\n                                    totalPrice = 0\r\n                                }\r\n                                prices.push({\r\n                                    description: $translate.instant('COUPON'),\r\n                                    isCoupon: true,\r\n                                    price: `-${discount}`\r\n                                })\r\n\r\n                            } else {\r\n                                totalPrice = CouponValue;\r\n                                prices.push({\r\n                                    description: $translate.instant('FIX_COUPON_DISCOUNT'), \r\n                                    isCoupon: true,\r\n                                    price: `${CouponValue}`    \r\n                                })\r\n                            }\r\n                            \r\n                        } else if (userCredit && userCredit.User_Credit) {\r\n                            const credit = userCredit.User_Credit;\r\n\r\n                            let discount = credit >= totalPrice - 5 ? totalPrice - 5 : credit;\r\n\r\n                            totalPrice -= discount;\r\n\r\n                            prices.push({\r\n                                description: $translate.instant('CREDIT'),\r\n                                isCredit: false,\r\n                                price: `-${discount}`\r\n                            })\r\n\r\n                        }\r\n\r\n\r\n                        prices.push({\r\n                            description: $translate.instant('TOTAL'),\r\n                            price: totalPrice,\r\n                        });\r\n\r\n                        resolve(prices)\r\n                    } else if (isBuy) {\r\n                        let prices = [];\r\n                        //buy case\r\n                        prices.push({\r\n                            description: $translate.instant('RETAIL_PRICE'),\r\n                            price: product.Product_PurchasePrice\r\n                        })\r\n                        if (isDelivery) {\r\n                            prices.push({\r\n                                description: $translate.instant('DELIVERY_FEE'),\r\n                                price: product.Product_Process_Fee\r\n                            })\r\n                        }\r\n                       \r\n\r\n                        let totalPrice = product.Product_Process_Fee+product.Product_PurchasePrice;\r\n                        prices.push({\r\n                            description: $translate.instant('TOTAL'),\r\n                            price: totalPrice\r\n                        })\r\n\r\n                        resolve(prices)\r\n                        \r\n                    }\r\n                })\r\n            };\r\n\r\n            const calculatePriceingListForBooking = (booking) => {\r\n                return new Promise((resolve) => {\r\n\r\n\r\n                    const {\r\n                        Booking_PickupProduct,\r\n                        FullEndDate,\r\n                        FullStartDate,\r\n                        Discount,\r\n                        DeliveryAndPickupDetail,\r\n                        RentAmount,\r\n                        Fix_Amount_Coupon,\r\n                        AmountCharge,\r\n                    } = booking;\r\n                    const {\r\n                        Delivery_Fee\r\n                    } = DeliveryAndPickupDetail;\r\n                    \r\n                    const days = getRentalPeriodInDays({\r\n                        startRentDate: new Date(FullStartDate),\r\n                        endRentDate: new Date(FullEndDate),\r\n                    });\r\n                    const priceDescription = '' + days;\r\n                    const isDelivery = !Booking_PickupProduct;\r\n\r\n                    let prices = [\r\n                        {\r\n                            price: isDelivery ? RentAmount-Delivery_Fee : RentAmount,\r\n                            description: `${priceDescription} ${$translate.instant(days == 1 ? 'DAY' : 'DAYS')}`\r\n                        },\r\n                        {\r\n                            price: 0,\r\n                            description: $translate.instant('SERVICE_FEE'),\r\n                            tooltip: $translate.instant('SERVICE_FEE_FREE'),\r\n                        }\r\n                    ];\r\n\r\n                    if (isDelivery) {\r\n                        prices.push({\r\n                            price: Delivery_Fee || 0,\r\n                            description: $translate.instant('DELIVERY_FEE'),\r\n                        })\r\n                    }\r\n                    if (Discount) {\r\n                        prices.push({\r\n                            price: -Discount,\r\n                            description: $translate.instant('DISCOUNT'),\r\n                        })\r\n                    }\r\n\r\n                    if (Fix_Amount_Coupon>0) {\r\n                        prices.push({\r\n                            price: Fix_Amount_Coupon,\r\n                            description: $translate.instant('FIX_COUPON_DISCOUNT'),\r\n                        })  \r\n                    }\r\n                    /* \r\n                    let totalPrice = RentAmount + (Booking_PickupProduct ? 0 : Delivery_Fee || 0) - (Discount ? Discount : 0);\r\n                    if (totalPrice < 0)\r\n                        totalPrice = 0;\r\n                    */\r\n                    //as total price we use AmountCharge    \r\n                    prices.push({\r\n                        price: AmountCharge,\r\n                        description: $translate.instant('TOTAL'),\r\n                    });\r\n\r\n                    resolve(prices)\r\n                })\r\n\r\n            };\r\n\r\n            const getRentalPeriodInDays = ({startRentDate, endRentDate}) => {\r\n                let startDate = moment.isMoment(startRentDate) ? startRentDate : moment(new Date(startRentDate));\r\n                let endDate = moment.isMoment(endRentDate) ? endRentDate : moment(new Date(endRentDate));\r\n                return endDate.diff(startDate, 'days') + 1;\r\n            };\r\n\r\n            /**\r\n             * @return {\r\n             *  startDate: Date,\r\n             *  endDate: Date,\r\n             * }\r\n             */\r\n            const getProductFirstAvailableDatesToRent = (productBookingDetails) => {\r\n                const dateRanges = getBookedDateRanges(productBookingDetails);\r\n                let firstAvailableDates = {\r\n                    startDate: moment(),\r\n                    endDate: moment().add(1, 'day')\r\n                };\r\n\r\n                for (let i = 0; i < dateRanges.length; i++) {\r\n                    if (isBookingDateBookedForDateRange(firstAvailableDates.startDate, dateRanges[i]) ||\r\n                        isBookingDateBookedForDateRange(firstAvailableDates.endDate, dateRanges[i])) {\r\n                        firstAvailableDates.startDate = moment(dateRanges[i].endDate).add(1, 'day');\r\n                        firstAvailableDates.endDate = moment(firstAvailableDates.startDate).add(1, 'day');\r\n                    }\r\n                }\r\n\r\n                return firstAvailableDates;\r\n            };\r\n\r\n\r\n            const getBookedDateRanges = (productBookingDetails) => {\r\n                const {ProductBookingDetail} = productBookingDetails;\r\n\r\n                if (ProductBookingDetail && ProductBookingDetail.length > 0) {\r\n                    let dateRanges = [];\r\n                    ProductBookingDetail.forEach((booking) => {\r\n                        dateRanges.push({\r\n                            endDate: moment(booking.EndDate),\r\n                            startDate: moment(booking.StartDate)\r\n                        })\r\n                    });\r\n\r\n                    return dateRanges;\r\n                }\r\n                return []\r\n            };\r\n\r\n            /**\r\n             *\r\n             * @param momentDate date to validate (moment Object)\r\n             * @param range dateRange containing startDate and enDate dates, usually means that the method \"getBookedDateRanges\" was called at an earlier step\r\n             */\r\n            const isBookingDateBookedForDateRange = (momentDate, range) => {\r\n                return (momentDate.isBetween(range.startDate, range.endDate) ||\r\n                    momentDate.isSame(range.startDate) ||\r\n                    momentDate.isSame(range.endDate))\r\n            };\r\n            const regexPatterns = {\r\n                email: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n                numbersOnly: /^[0-9]+$/,\r\n                minMaxLength: (min = 2, max = undefined) => new RegExp(`.{${min},${max ? max : ''}}`),\r\n            };\r\n\r\n            const sorters = {\r\n                bookingLastModifiedEpoch: (a, b) => b.Last_Modified - a.Last_Modified,\r\n            };\r\n\r\n\r\n            const dataUrlToBlob = (dataUrl) => {\r\n                // Decode the dataUrl\r\n                let binary = atob(dataUrl.split(',')[1]);\r\n                // Create 8-bit unsigned array\r\n                let array = [];\r\n                for (let i = 0; i < binary.length; i++) {\r\n                    array.push(binary.charCodeAt(i));\r\n                }\r\n                // Return our Blob object\r\n                return new Blob([new Uint8Array(array)], {type: 'image/jpg'});\r\n            };\r\n\r\n            const isMobile = {\r\n                Android: function () {\r\n                    return navigator.userAgent.match(/Android/i);\r\n                },\r\n                BlackBerry: function () {\r\n                    return navigator.userAgent.match(/BlackBerry/i);\r\n                },\r\n                iOS: function () {\r\n                    return navigator.userAgent.match(/iPhone|iPad|iPod/i);\r\n                },\r\n                Opera: function () {\r\n                    return navigator.userAgent.match(/Opera Mini/i);\r\n                },\r\n                Windows: function () {\r\n                    return navigator.userAgent.match(/IEMobile/i);\r\n                },\r\n                any: function () {\r\n                    return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());\r\n                }\r\n            };\r\n\r\n            const isCrawler = () => {\r\n                return /bot|prerender|googlebot|crawler|spider|robot|crawling/i.test(navigator.userAgent);\r\n            };\r\n\r\n            const playErrorSound = () => {\r\n                try {\r\n                    let context = new AudioContext();\r\n                    let o = context.createOscillator();\r\n                    let g = context.createGain();\r\n                    o.type = \"sine\";\r\n                    o.connect(g);\r\n                    g.connect(context.destination);\r\n                    o.start();\r\n                    g.gain.exponentialRampToValueAtTime(\r\n                        0.00010, context.currentTime + 1\r\n                    )\r\n                } catch (err) {\r\n                    ptLog.error('AudioContext not supported');\r\n                }\r\n            };\r\n\r\n            const isProductTryAndBuy = (product) => {\r\n                const {\r\n                    Product_CategoryId,\r\n                    Product_TryAndBuy\r\n                } = product;\r\n                return enums.categoriesIds.tryAndBuy == Product_CategoryId || Product_TryAndBuy;\r\n            };\r\n\r\n            const getProductDetailUrl = (product) => {\r\n                return window.globals.ROOT_PATH + $translate.use() + '/product/' + getProductNameAndId(product);\r\n            }\r\n\r\n            const getProductNameAndId = (product) => {\r\n                return `${product.Product_Title} ${product.Product_Id}`.replace(/\\ /g,'-');\r\n            }\r\n\r\n            \r\n\r\n            const getAddressToDisplayForBooking = ({product, productBookingDetails, booking}) => {\r\n                return new Promise((resolve, reject) => {\r\n                    const isProductTryAndBuyBool = isProductTryAndBuy(product);\r\n                    let location = {\r\n                        title: 'PICK_UP',\r\n                        address: undefined,\r\n                        lat: undefined,\r\n                        lng: undefined,\r\n                    };\r\n                    if (!product) {\r\n                        return reject('product must not be undefined')\r\n                    }\r\n                    location.address = product.Lender_User_Address;\r\n                    location.lat = product.Product_Latitude;\r\n                    location.lng = product.Product_Longitude;\r\n\r\n                    if (isProductTryAndBuyBool) {\r\n                        if (productBookingDetails) {\r\n                            if (booking) {\r\n                                const {Booking_PickupProduct, Delivery_Latitude, Delivery_Longitude, Delivery_Address} = booking;\r\n\r\n                                if (!Booking_PickupProduct) {\r\n                                    location.title = 'DELIVERY_ADDRESS';\r\n                                    location.address = Delivery_Address;\r\n                                    location.lat = Delivery_Latitude;\r\n                                    location.lng = Delivery_Longitude;\r\n                                } else {\r\n                                    const {PickUp_Address, PickUp_Latitude, PickUp_Longitude} = productBookingDetails;\r\n                                    location.address = PickUp_Address;\r\n                                    location.lat = PickUp_Latitude;\r\n                                    location.lng = PickUp_Longitude;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    extractAndGeoLocateAddressFromObjectForFieldNames({\r\n                        object: location,\r\n                        addressFieldName: 'address',\r\n                        latFieldName: 'lat',\r\n                        lngFieldName: 'lng'\r\n                    })\r\n                        .then((address) => {\r\n                            resolve({\r\n                                ...address,\r\n                                title: location.title\r\n                            })\r\n                        })\r\n                        .catch(reject)\r\n                })\r\n            };\r\n\r\n            const extractAndGeoLocateAddressFromObjectForFieldNames = ({object, addressFieldName, latFieldName, lngFieldName}) => {\r\n                return new Promise((resolve, reject) => {\r\n                    let address = object[addressFieldName];\r\n                    let lat = Number(object[latFieldName] || 0);\r\n                    let lng = Number(object[lngFieldName] || 0);\r\n                    if (!address && lat && lng) {\r\n                        geoLocationService.getUserAddressFromCoordinates({lat, lng})\r\n                            .then((geoLocatedAddress) => {\r\n                                resolve({\r\n                                    address: geoLocatedAddress,\r\n                                    lat,\r\n                                    lng\r\n                                })\r\n                            })\r\n                            .catch(reject)\r\n                    } else {\r\n                        resolve({\r\n                            address,\r\n                            lat,\r\n                            lng,\r\n                        })\r\n                    }\r\n\r\n                });\r\n\r\n            };\r\n\r\n\r\n            const parseBookingStepTutorialHTMLTemplateForTranslationId = (translationId) => {\r\n                const translatedText = $translate.instant(translationId);\r\n\r\n                if (translatedText.indexOf('|') != -1) {\r\n                    const textComponents = $translate.instant(translationId).split('|');\r\n                    let HTML_TEXT = '<div>';\r\n                    textComponents.forEach((comp, index) => {\r\n                        if (index == 0)\r\n                            HTML_TEXT += `<span>${comp}</span> <ol>`;\r\n                        else\r\n                            HTML_TEXT += `<li>${comp}</li>`\r\n\r\n                    });\r\n                    HTML_TEXT += '</ol><div>';\r\n                    return $sce.trustAsHtml(HTML_TEXT);\r\n                } else {\r\n                    ptLog.warn(TAG, 'parseBookingStepTutorialHTMLTemplateForTranslationId', 'failed to parse translationId:', translationId);\r\n                    return translatedText;\r\n                }\r\n            };\r\n\r\n            const getTranslationIdForBookingStatus = (bookingStatus, isLender, isTryAndBuy) => {\r\n                if (bookingStatus === enums.productRentalStatus.notVerified ||\r\n                    bookingStatus === enums.productRentalStatus.verified)\r\n                    return `BookingStatusNotVerified_${ isLender ? 'Lender' : 'Borrower' }`;\r\n                else if (bookingStatus === enums.productRentalStatus.verifying)\r\n                    return `BookingStatusVerifying_Borrower`;\r\n                else if (bookingStatus === enums.productRentalStatus.requested)\r\n                    return `BookingStatusRequested_${ isLender ? 'Lender' : 'Borrower' }`;\r\n                else if (bookingStatus === enums.productRentalStatus.accepted)\r\n                    return `BookingStatusAccepted_${ isLender ? 'Lender' : 'Borrower' }`;\r\n                \r\n                else if (bookingStatus === enums.productRentalStatus.booked)\r\n                    return `BookingStatusBooked_Borrower`;\r\n                \r\n                else if (bookingStatus === enums.productRentalStatus.timeout)\r\n                    return `BookingStatusTimeout_${ isLender ? 'Lender' : 'Borrower' }`;\r\n                else if (bookingStatus === enums.productRentalStatus.denied)\r\n                    return `BookingStatusDenied_${ isLender ? 'Lender' : 'Borrower' }`;\r\n                else if (bookingStatus === enums.productRentalStatus.canceled)\r\n                    return `BookingStatusCancelled_${ isLender ? 'Lender' : 'Borrower' }`;\r\n                else if (bookingStatus === enums.productRentalStatus.criticalCancel)\r\n                    return `BookingStatusCriticalCancelled_${ isLender ? 'Lender' : 'Borrower' }`;\r\n                else if (bookingStatus === enums.productRentalStatus.moderateCancel)\r\n                    return `BookingStatusModerateCancelled_${ isLender ? 'Lender' : 'Borrower' }`;\r\n                else if (bookingStatus === enums.productRentalStatus.canceledByLender)\r\n                    return `BookingStatusCancelledLender_${ isLender ? 'Lender' : 'Borrower' }`;\r\n                else if (bookingStatus === enums.productRentalStatus.started) {\r\n                    if (isTryAndBuy) \r\n                        return isLender ? `BookingStatusStarted_Lender` : `BookingStatusStarted_Borrower_TnB`;\r\n                    else \r\n                        return `BookingStatusStarted_${ isLender ? 'Lender' : 'Borrower' }`;\r\n                }\r\n                else if (bookingStatus === enums.productRentalStatus.ended)\r\n                    if (isTryAndBuy) \r\n                        return isLender ? `BookingStatusEnded_Lender` : `BookingStatusEnded_Borrower_TnB`;\r\n                    else \r\n                        return `BookingStatusEnded_${ isLender ? 'Lender' : 'Borrower' }`;\r\n            };\r\n\r\n            const getTranslationDictForDatePicker = () => {\r\n                return {\r\n                    'Month': $translate.instant('Month'),\r\n                    'Year': $translate.instant('Year'),\r\n                    'Date Range Template': $translate.instant('Date Range Template'),\r\n                    'Custom Date Range': $translate.instant('Custom Date Range'),\r\n                    'Today': $translate.instant('Today'),\r\n                    'Yesterday': $translate.instant('Yesterday'),\r\n                    'This Week': $translate.instant('Week'),\r\n                    'Last Week': $translate.instant('Week'),\r\n                    'This Month': $translate.instant('Month'),\r\n                    'Last Month': $translate.instant('Month'),\r\n                    'This Year': $translate.instant('Year'),\r\n                    'Last Year': $translate.instant('Year'),\r\n                    'Cancel': $translate.instant('Cancel'),\r\n                    'Clear': $translate.instant('Clear'),\r\n                    'Ok': $translate.instant('Ok'),\r\n                    'Sunday': $translate.instant('Sunday'),\r\n                    'Monday': $translate.instant('Monday'),\r\n                    'Tuesday': $translate.instant('Tuesday'),\r\n                    'Wednesday': $translate.instant('Wednesday'),\r\n                    'Thursday': $translate.instant('Thursday'),\r\n                    'Friday': $translate.instant('Friday'),\r\n                    'Saturday': $translate.instant('Saturday'),\r\n                    'Sun': $translate.instant('Sunday'),\r\n                    'Mon': $translate.instant('Monday'),\r\n                    'Tue': $translate.instant('Tuesday'),\r\n                    'Wed': $translate.instant('Wednesday'),\r\n                    'Thu': $translate.instant('Thursday'),\r\n                    'Fri': $translate.instant('Friday'),\r\n                    'Sat': $translate.instant('Saturday'),\r\n                    'January': $translate.instant('January'),\r\n                    'February': $translate.instant('February'),\r\n                    'March': $translate.instant('March'),\r\n                    'April': $translate.instant('April'),\r\n                    'May': $translate.instant('May'),\r\n                    'June': $translate.instant('June'),\r\n                    'July': $translate.instant('July'),\r\n                    'August': $translate.instant('August'),\r\n                    'September': $translate.instant('September'),\r\n                    'October': $translate.instant('October'),\r\n                    'November': $translate.instant('November'),\r\n                    'December': $translate.instant('December'),\r\n                    'Week': $translate.instant('Week'),\r\n                }\r\n            };\r\n\r\n            const getCategoriesUrl = (categoryName, subcategoryName, isTryAndBuy, languageCode) => {\r\n                let path = window.globals.ROOT_PATH + languageCode + \"/categorie/\" + (isTryAndBuy ? '' : \"privato/\");\r\n                if (subcategoryName == null) {\r\n                  path = path + categoryName;\r\n                } else {\r\n                  path = path + categoryName + \"/\" + subcategoryName;\r\n                }\r\n            \r\n                return path.split(' ').join('-');;\r\n              }\r\n\r\n            return {\r\n                stringToDate,\r\n                getDisplayDataForTransactionStatus,\r\n                getPriceForRentalPeriod,\r\n                calculatePricingListForProduct,\r\n                getPriceCalculatedDescriptionForRentalPeriod,\r\n                getBookedDateRanges,\r\n                isBookingDateBookedForDateRange,\r\n                getProductFirstAvailableDatesToRent,\r\n                regexPatterns,\r\n                sorters,\r\n                isProductTryAndBuy,\r\n                playErrorSound,\r\n                dataUrlToBlob,\r\n                isMobile,\r\n                isCrawler,\r\n                extractAndGeoLocateAddressFromObjectForFieldNames,\r\n                getAddressToDisplayForBooking,\r\n                getRentalPeriodInDays,\r\n                calculatePriceingListForBooking,\r\n                parseBookingStepTutorialHTMLTemplateForTranslationId,\r\n                getTranslationIdForBookingStatus,\r\n                getTranslationDictForDatePicker,\r\n                getProductDetailUrl,\r\n                getProductNameAndId,\r\n                getCategoriesUrl\r\n\r\n            }\r\n        }]);\r\n","angular.module('paladinApp').service('referralsService',\r\n    [\r\n        '$q',\r\n        '$location',\r\n        'apiService',\r\n        function (\r\n            $q,\r\n            $location,\r\n            apiService\r\n        ) {\r\n\r\n            this.userName = null;\r\n            this.referralCode = null;\r\n\r\n            this.validateReferralCode = (referralNameCode) => {\r\n                let self = this;\r\n\r\n                // referralCode includes the userName\r\n                let referralCode = referralNameCode;\r\n\r\n                let parts = referralNameCode.split('-');\r\n                // remove the alpha-numeric part which is last\r\n                parts.pop();\r\n                let userName = parts.join(' ');\r\n\r\n                // do some validation here to avoid unnecessary api calls\r\n                /*\r\n                                if(!referralCode || !referralCode.match(/^[a-z0-9]{6}$/i)){\r\n                                    $location.path('/');\r\n                                    return false;\r\n                                }\r\n                */\r\n\r\n                return $q(\r\n                    function (resolve, reject) {\r\n                        return apiService.users.signUpReferred(referralCode)\r\n                            .then(\r\n                                function (result) {\r\n                                    self.userName = userName;\r\n                                    self.referralCode = referralCode;\r\n\r\n                                    resolve({\r\n                                        userName: self.userName,\r\n                                        referralCode: self.referralCode\r\n                                    });\r\n                                },\r\n                                function (reason) {\r\n                                    // redirect to normal registration or some handler page\r\n                                    $location.path('/');\r\n                                    reject(reason);\r\n                                });\r\n\r\n                    },\r\n                    function (reason) {\r\n                        console.info('Validating the referralCode was rejected with reason: ', reason);\r\n                    })\r\n            };\r\n\r\n            this.getReferralData = () => {\r\n                return {\r\n                    userName: this.userName,\r\n                    code: this.referralCode\r\n                }\r\n            }\r\n        }\r\n    ]);\r\n","'use strict';\r\nangular.module('paladinApp')\r\n    .service('stripeService',[\r\n        '$rootScope',\r\n        'enums',\r\n        'appStateManager',\r\n        '$q',\r\n        '$http',\r\n        function (\r\n            $rootScope,\r\n            enums,\r\n            appStateManager,\r\n            $q,\r\n            $http) {\r\n\r\n            const self = this;\r\n            self.ENV = window.globals.STRIPE_URL;\r\n\r\n            self.JSON_to_URLEncoded = (element, key, list) => {\r\n                list = list || [];\r\n                if ( typeof ( element ) == 'object' ) {\r\n                    for (let idx in element)\r\n                        self.JSON_to_URLEncoded(element[idx], key ? key + '['+idx+']' : idx, list);\r\n                } else {\r\n                    list.push(key+'='+encodeURIComponent(element));\r\n                }\r\n                return list.join('&');\r\n            };\r\n\r\n            self.getHttpConfig = (params, headers) => {\r\n                let config = {\r\n                    headers: {\r\n                        'Access-Control-Allow-Origin': '*',\r\n                        'X-Requested' : null,\r\n                        'Content-Type' : 'application/x-www-form-urlencoded; charset=utf-8',\r\n                        'Access-Control-Allow-Methods': 'GET, POST, PATCH, PUT, DELETE, OPTIONS',\r\n                        'Access-Control-Allow-Headers': 'Origin, Content-Type, X-Auth-Token',\r\n                        'Authorization': `Bearer ${window.globals.STRIPE_SK}`\r\n                    }\r\n                };\r\n\r\n                if (headers) {\r\n                    Object.keys(headers).forEach((headerKey) => {\r\n                        config.headers[headerKey] = headers[headerKey];\r\n                    });\r\n                }\r\n\r\n                if (params) { config.params = params; }\r\n                return config;\r\n            };\r\n\r\n            self.postRequest = function (path, data, headers) {\r\n                // let deferred = $q.defer();\r\n                const config = self.getHttpConfig(null, headers);\r\n                return $http({\r\n                    method: 'POST',\r\n                    url: self.ENV + path,\r\n                    headers: config.headers,\r\n                    params: config.params,\r\n                    transformRequest: function(obj) {\r\n                        return self.JSON_to_URLEncoded(obj)\r\n                    },\r\n                    data,\r\n                })\r\n                // return deferred.promise;\r\n            };\r\n\r\n            self.getRequest = function (path, params, headers) {\r\n                const config = self.getHttpConfig(null, headers);\r\n                return $http({\r\n                    method: 'GET',\r\n                    url: self.ENV + path,\r\n                    headers: config.headers,\r\n                    params: config.params,\r\n                    transformRequest: function(obj) {\r\n                        return self.JSON_to_URLEncoded(obj)\r\n                    },\r\n                })\r\n            };\r\n\r\n            self.apiMethods = {\r\n                createToken: function ({number,exp_month,exp_year,cvc,name}) {\r\n                    return self.postRequest('/tokens',{\r\n                        card: {\r\n                            number,\r\n                            exp_month,\r\n                            exp_year,\r\n                            cvc,\r\n                            name\r\n                        }\r\n                    })\r\n                },\r\n                getCustomer: function (customerId) {\r\n                    return self.getRequest(`/customers/${customerId}`)\r\n                },\r\n                getCustomerSources: function (customerId) {\r\n                    return self.getRequest(`/customers/${customerId}/sources`)\r\n                }\r\n            };\r\n\r\n            return self.apiMethods\r\n    }]);","angular.module('paladinApp')\r\n.service('toastService',['$mdToast',function ($mdToast) {\r\n    this.simpleToast = function (message,delay = 3000, isRight = true) {\r\n        $mdToast.show(\r\n            $mdToast.simple()\r\n                .textContent(message)\r\n                .hideDelay(delay)\r\n                .position(isRight ? 'bottom right' : 'bottom left')\r\n        );\r\n    }\r\n}]);","'use strict';\r\nangular.module('paladinApp')\r\n    .service('transactionService',[\r\n        '$rootScope',\r\n        'appStateManager',\r\n        'enums',\r\n        'apiService',\r\n        'popupService',\r\n        'geoLocationService',\r\n        'ptLog',\r\n        'ptUtils',\r\n        '$translate',\r\n        'gtmService',\r\n        'productReviewService',\r\n        'moment',\r\n        function ($rootScope,\r\n                  appStateManager,\r\n                  enums,\r\n                  apiService,\r\n                  popupService,\r\n                  geoLocationService,\r\n                  ptLog,\r\n                  ptUtils,\r\n                  $translate,\r\n                  gtmService,\r\n                  productReviewService,\r\n                  moment) {\r\n            const TAG = 'transactionService || ';\r\n            const acceptRental = (booking) => {\r\n                return new Promise((resolve,reject) => {\r\n                    const apiMethod = () => {\r\n                        return new Promise((resolve2,reject2) => {\r\n                            apiService.bookings.acceptBookingRequest({bookingId:booking.Booking_Id,userId: booking.Lender_Id})\r\n                                .then((res) => {\r\n                                    gtmService.trackEvent('rental-status', 'request-accepted');\r\n                                    popupService.showAlert('SUCCESS', 'BOOKING_ACCEPTED_SUCCESS')\r\n                                        .finally(() => {\r\n                                            $rootScope.$emit(enums.busEvents.reloadDetailedBooking, {bookingId: booking.Booking_Id});\r\n                                            resolve2()\r\n                                        })\r\n                                })\r\n                                .catch((err) => {\r\n                                    if (err && err.data && err.data.Data && err.data.Data == 403) {\r\n                                        return showInvalidOperationError(booking)\r\n                                    }\r\n                                    popupService.showConfirm('ERROR', 'BOOKING_ACCEPTED_FAILURE','POPUP_TRY_AGAIN','POPUP_CANCEL')\r\n                                        .then(() => {\r\n                                            apiMethod()\r\n                                                .then(resolve2)\r\n                                                .catch(reject2)\r\n                                        })\r\n                                        .catch(() => {\r\n                                            resolve2()\r\n                                        })\r\n                                })\r\n                        })\r\n                    };\r\n                    popupService.showTransactionStatusChange({booking,apiMethod,title:'ACCEPT_REQUEST'})\r\n                        .then(resolve)\r\n                        .catch(reject)\r\n                })\r\n            };\r\n\r\n            // Reject Rental is used for both lender and borrower prio request acceptance\r\n            // Borrower: will see a cancel request CTA\r\n            // Lender: will see decline request CTA\r\n            // Both \"Reject\" the booking and don't \"Cancel\" it\r\n            // transactionService.cancelBooking should be called only after a certain booking was accepted,\r\n            // by either the borrower or the lender\r\n            const rejectRental = (booking, isLender) => {\r\n                return new Promise((resolve,reject) => {\r\n                    const apiMethod = () => {\r\n                        return new Promise((resolve2,reject2) => {\r\n                            const userId = isLender ? booking.Lender_Id : booking.Borrower_Id;\r\n                            apiService.bookings.rejectBookingRequest({\r\n                                bookingId: booking.Booking_Id,\r\n                                userId,\r\n                                reason: ''\r\n                            })\r\n                                .then((res) => {\r\n                                    gtmService.trackEvent('rental-status', isLender? 'request-declined' : 'request-cancelled-prior-approval');\r\n                                    popupService.showAlert('SUCCESS', 'BOOKING_CANCELED_SUCCESS')\r\n                                        .finally(() => {\r\n                                            $rootScope.$emit(enums.busEvents.reloadDetailedBooking, {bookingId: booking.Booking_Id});\r\n                                            resolve2()\r\n                                        })\r\n                                })\r\n                                .catch((err) => {\r\n                                    if (err && err.data && err.data.Data && err.data.Data == 403) {\r\n                                        return showInvalidOperationError(booking)\r\n                                    }\r\n                                    popupService.showConfirm('ERROR', 'BOOKING_CANCELED_FAILURE','POPUP_TRY_AGAIN','POPUP_CANCEL')\r\n                                        .then(() => {\r\n                                            apiMethod()\r\n                                                .then(resolve2)\r\n                                                .catch(reject2)\r\n                                        })\r\n                                        .catch(() => {\r\n                                            resolve2()\r\n                                        })\r\n                                })\r\n                        })\r\n                    };\r\n\r\n                   popupService.showConfirm('CONFIRM', isLender ? 'BOOKING_REJECT_WARNING' : 'CANCEL_REQUEST_WARNING')\r\n                        .then(() => {\r\n                            popupService.showTransactionStatusChange({booking, apiMethod, title: isLender ? 'DECLINE_REQUEST' : 'CANCEL_REQUEST'})\r\n                                .then(resolve)\r\n                                .catch((e)=> {\r\n                                    console.log('...... ERR ', e, ' .... ', reject)\r\n                                    reject();\r\n                                })\r\n                        })\r\n                        .catch(() => {\r\n                            resolve()\r\n                        })\r\n                })\r\n            };\r\n\r\n\r\n            const cancelRental = (booking,isLender) => {\r\n                return new Promise((resolve,reject) => {\r\n                    const apiMethod = () => {\r\n                        return new Promise((resolve2,reject2) => {\r\n                            const userId = isLender ? booking.Lender_Id : booking.Borrower_Id;\r\n                            apiService.bookings.cancelBookingRequest({\r\n                                bookingId: booking.Booking_Id,\r\n                                userId,\r\n                                reason: ''\r\n                            })\r\n                                .then((res) => {\r\n                                    gtmService.trackEvent('rental-status', isLender ? 'booking-cancelled-by-lender' : 'booking-cancelled-by-borrower');\r\n                                    popupService.showAlert('SUCCESS', 'BOOKING_CANCELED_SUCCESS')\r\n                                        .finally(() => {\r\n                                            $rootScope.$emit(enums.busEvents.reloadDetailedBooking, {bookingId: booking.Booking_Id});\r\n                                            resolve2()\r\n                                        })\r\n                                })\r\n                                .catch((err) => {\r\n                                    if (err && err.data && err.data.Data && err.data.Data == 403) {\r\n                                        return showInvalidOperationError(booking)\r\n                                    }\r\n                                    popupService.showConfirm('ERROR', 'BOOKING_CANCELED_FAILURE','POPUP_TRY_AGAIN','POPUP_CANCEL')\r\n                                        .then(() => {\r\n                                            return apiMethod()\r\n                                                .then(resolve2)\r\n                                                .catch(reject2)\r\n                                        })\r\n                                        .catch(() => {\r\n                                            resolve2()\r\n                                        })\r\n                                })\r\n                        })\r\n                    };\r\n                    const {\r\n                        FullStartDate,\r\n                    } = booking;\r\n                    const daysLeftBeforeBookingStarts = moment(new Date(FullStartDate)).diff(moment(),'days');\r\n                    let msg = 'BOOKING_CANCELLATION_MODERATE_WARNING';\r\n                    if (daysLeftBeforeBookingStarts <= 1) {\r\n                        msg = 'BOOKING_CANCELLATION_CRITICAL_WARNING';\r\n                    }\r\n\r\n                    popupService.showConfirm('CONFIRM',msg)\r\n                        .then(() => {\r\n                            popupService.showTransactionStatusChange({booking, apiMethod, title: 'CANCEL_REQUEST'})\r\n                                .then(resolve)\r\n                                .catch(reject)\r\n                        })\r\n                        .catch(() => {\r\n                            resolve()\r\n                        })\r\n                })\r\n            };\r\n\r\n\r\n            const startRental = (booking) => {\r\n              return new Promise((resolve,reject) => {\r\n                  const apiMethod = () => {\r\n                      return new Promise((resolve2,reject2) => {\r\n                            apiService.bookings.startRental({\r\n                                bookingId: booking.Booking_Id,\r\n                                userId: booking.Borrower_Id,\r\n                            })\r\n                                .then(() => {\r\n                                    gtmService.trackEvent('rental-status', 'rental-started');\r\n                                    popupService.showAlert('SUCCESS','BOOKING_START_RENTAL_SUCCESS')\r\n                                        .finally(() => {\r\n                                            resolve2();\r\n                                            $rootScope.$emit(enums.busEvents.reloadDetailedBooking, {bookingId: booking.Booking_Id});\r\n                                        })\r\n                                })\r\n                                .catch((err) => {\r\n                                    if (err && err.data && err.data.Data && err.data.Data == 403) {\r\n                                        return showInvalidOperationError(booking)\r\n                                    }\r\n\r\n                                    popupService.showConfirm('ERROR','BOOKING_START_RENTAL_FAILURE','POPUP_TRY_AGAIN','POPUP_CANCEL')\r\n                                        .then(() => {\r\n                                            return apiMethod()\r\n                                                    .then(resolve2)\r\n                                                    .catch(reject2)\r\n                                        })\r\n                                        .catch(reject2)\r\n                                })\r\n                      })\r\n                  };\r\n                  popupService.showConfirm('CONFIRM','BOOKING_START_RENTAL_WARNING')\r\n                      .then(() => {\r\n                          popupService.showTransactionStatusChange({booking, apiMethod, title: 'START_RENTAL'})\r\n                              .then(resolve)\r\n                              .catch(reject)\r\n                      })\r\n              })\r\n            };\r\n\r\n            const endRental = (booking) => {\r\n                return new Promise((resolve,reject) => {\r\n                    const apiMethod = () => {\r\n                        return new Promise((resolve2,reject2) => {\r\n                            const user = appStateManager.user;\r\n                            apiService.bookings.endRental({\r\n                                bookingId: booking.Booking_Id,\r\n                                userId: booking.Lender_Id\r\n                            })\r\n                                .then((res) => {\r\n                                    gtmService.trackEvent('rental-status', 'rental-ended');\r\n                                    if (!user.User_StripeAccount) {\r\n                                        // user has no stripe account, call create stripe account to allow him to get paid\r\n                                        createUserStripeAccount(booking)\r\n                                            .then((res) => {\r\n                                                gtmService.trackEvent('rental-status', 'stripe-account-created');\r\n                                                popupService.showAlert('SUCCESS','BOOKING_END_RENTAL_SUCCESS_PAYMENT')\r\n                                                    .finally(() => {\r\n                                                        resolve2();\r\n                                                        $rootScope.$emit(enums.busEvents.reloadDetailedBooking, {bookingId: booking.Booking_Id});\r\n                                                    })\r\n                                            })\r\n                                            .catch((err) => {\r\n                                                if (err && err.isMissingAddress) {\r\n                                                    popupService.showAlert('ERROR', 'PAYOUT_MISSING_ADDRESS')\r\n                                                        .finally(() => {\r\n                                                            reject2()\r\n                                                        });\r\n                                                } else {\r\n                                                    reject2()\r\n                                                }\r\n                                            })\r\n                                    } else {\r\n                                        popupService.showAlert('SUCCESS','BOOKING_END_RENTAL_SUCCESS_PAYMENT')\r\n                                            .finally(() => {\r\n                                                resolve2();\r\n                                                $rootScope.$emit(enums.busEvents.reloadDetailedBooking, {bookingId: booking.Booking_Id});\r\n                                            })\r\n                                    }\r\n                                })\r\n                                .catch((err) => {\r\n                                    if (err && err.data && err.data.Data && err.data.Data == 403) {\r\n                                        return showInvalidOperationError(booking)\r\n                                    }\r\n                                    popupService.showConfirm('ERROR','BOOKING_END_RENTAL_FAILURE')\r\n                                        .then(() => {\r\n                                            return apiMethod()\r\n                                                .then(resolve2)\r\n                                                .catch(reject2)\r\n                                        })\r\n                                        .catch(() => {\r\n                                            resolve2()\r\n                                        })\r\n                                })\r\n                        })\r\n                    };\r\n                    popupService.showConfirm('CONFIRM','BOOKING_END_RENTAL_WARNING')\r\n                        .then(() => {\r\n                            popupService.showTransactionStatusChange({booking, apiMethod, title: 'END_RENTAL'})\r\n                                .then(resolve)\r\n                                .catch(reject)\r\n                        })\r\n                })\r\n\r\n            };\r\n\r\n\r\n            const endRentalForStripeAccountOnly = (booking) => {\r\n                return new Promise((resolve,reject) => {\r\n                    const apiMethod = () => createUserStripeAccount(booking);\r\n                    popupService.showTransactionStatusChange({booking, apiMethod, title: 'CREATE_STRIPE_ACCOUNT'})\r\n                        .then(() => {\r\n                            gtmService.trackEvent('rental-status', 'stripe-account-created');\r\n                            popupService.showAlert('SUCCESS', 'CREATE_STRIPE_ACCOUNT_SUCCESS')\r\n                                .then(() => {\r\n                                    $rootScope.$emit(enums.busEvents.reloadDetailedBooking, {bookingId: booking.Booking_Id});\r\n                                    resolve()\r\n                                })\r\n                        })\r\n                        .catch((err) => {\r\n                            if (err && err.isMissingAddress) {\r\n                                popupService.showAlert('ERROR','PAYOUT_MISSING_ADDRESS')\r\n                                    .finally(() => {\r\n                                        resolve()\r\n                                    });\r\n                            } else {\r\n                                popupService.showAlert('ERROR', 'CREATE_STRIPE_ACCOUNT_FAILURE')\r\n                                    .then(() => {\r\n                                        $rootScope.$emit(enums.busEvents.reloadDetailedBooking, {bookingId: booking.Booking_Id});\r\n                                        resolve()\r\n                                    })\r\n                            }\r\n                        })\r\n                })\r\n            };\r\n\r\n            const createUserStripeAccount = (booking,email = undefined) => {\r\n                return new Promise((resolve,reject) => {\r\n                    const { user } = appStateManager;\r\n                    const { User_Address, User_Email,User_Id } = user;\r\n\r\n                    if (!User_Address) {\r\n                        return reject({isMissingAddress: true})\r\n                    }\r\n\r\n                    geoLocationService.getUserCountryFromUserAddress(User_Address)\r\n                        .then((country) => {\r\n                            const {short_name} = country;\r\n                            apiService.payments.createUserStripeAccount({\r\n                                userId: User_Id,\r\n                                email: email == undefined ? User_Email : email,\r\n                                bookingId: booking.Booking_Id,\r\n                                country: short_name\r\n                            })\r\n                                .then(resolve)\r\n                                .catch((err) => {\r\n                                    popupService.showInputField({\r\n                                        title: 'ERROR',\r\n                                        message: 'BOOKING_END_RENTAL_STRIPE_ACCOUNT_DUPLICATE_ERROR',\r\n                                        initialValue: appStateManager.user.User_Email,\r\n                                        inputRegexValidation: ptUtils.regexPatterns.email,\r\n                                    })\r\n                                        .then((res) => {\r\n                                            const apiMethod = () => createUserStripeAccount(booking,res.value);\r\n                                            popupService.showTransactionStatusChange({booking, apiMethod, title: 'END_RENTAL'})\r\n                                                .then(resolve)\r\n                                                .catch(reject)\r\n                                        })\r\n                                        .catch(reject)\r\n\r\n                                })\r\n                        })\r\n                        .catch((err) => {\r\n                            ptLog.error(`${TAG}, error getting user country, ${JSON.stringify(err)}`);\r\n                            reject(err)\r\n                        })\r\n                })\r\n            };\r\n\r\n            const showInvalidOperationError = (booking) => {\r\n                popupService.showAlert('ERROR','BOOKING_INVALID_OPERATION','REFRESH')\r\n                    .finally(() => {\r\n                        $rootScope.$emit(enums.busEvents.reloadDetailedBooking, {bookingId: booking.Booking_Id});\r\n                    })\r\n            };\r\n\r\n            return {\r\n                acceptRental,\r\n                rejectRental,\r\n                cancelRental,\r\n                startRental,\r\n                endRental,\r\n                createUserStripeAccount,\r\n                endRentalForStripeAccountOnly\r\n            }\r\n\r\n        }]);\r\n","angular.module('paladinApp')\r\n.service('uploadHandler',[function () {\r\n    this.convertInputElementToBas64 = function (inputElement) {\r\n        return new Promise((resolve,reject) => {\r\n            if (inputElement && inputElement.files && inputElement.files.length > 0) {\r\n                return convertFile(inputElement.files[0]).then(resolve)\r\n                    .catch(reject)\r\n            } else {\r\n                // No file uploaded\r\n                reject('no file uploaded')\r\n            }\r\n        })\r\n    };\r\n\r\n    const convertFile = (imgFile) => {\r\n        return new Promise((resolve,reject) => {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                if (reader.result) {\r\n                    const img64 = reader.result.replace(`data:${imgFile.type};base64,`, '');\r\n                    resolve({\r\n                        original64:reader.result,\r\n                        serverParsed64: img64,\r\n                    });\r\n                } else\r\n                    reject('error uploading image');\r\n            };\r\n            reader.readAsDataURL(imgFile);\r\n        })\r\n    }\r\n}]);","angular.module('paladinApp')\r\n    .controller('appController', [\r\n        '$scope',\r\n        '$rootScope',\r\n        'ZendeskWidget',\r\n        'enums',\r\n        'ptLog',\r\n        'appStateManager',\r\n        'dataService',\r\n        '$state',\r\n        '$location',\r\n        '$mdToast',\r\n        '$mdMedia',\r\n        function(\r\n            $scope,\r\n            $rootScope,\r\n            ZendeskWidget,\r\n            enums,\r\n            ptLog,\r\n            appStateManager,\r\n            dataService,\r\n            $state,\r\n            $location,\r\n            $mdToast,\r\n            $mdMedia) {\r\n            // $rootScope.lang =  localStorage.getItem(enums.localStorageKeys.preferredLanguage) || 'it';\r\n            $rootScope.isAppOnline = true;\r\n            //if any error this will log\r\n            $scope.$on(enums.busEvents.$routeChangeError, function(event, current, previous, rejection){\r\n                ptLog.log('route change error');\r\n                ptLog.log(rejection);\r\n            });\r\n\r\n            if ($state.includes('app.emailVerification') && Object.keys($location.search())[0] != undefined) {\r\n                $rootScope.$emit(enums.busEvents.triggerEmailValidation,{userId: Object.keys($location.search())[0]});\r\n            }\r\n\r\n            let deregs = [];\r\n            deregs.push($rootScope.$on(enums.busEvents.locationUpdate,(event,data) => {\r\n                // $mdToast.show(\r\n                //     $mdToast.simple()\r\n                //         .textContent('Location update')\r\n                //         .hideDelay(3000)\r\n                // );\r\n            }));\r\n\r\n            deregs.push($rootScope.$on(enums.busEvents.scrollMainScrollerToTop,(event,data) => {\r\n                // let isAnimated = false;\r\n                //\r\n                // if (data && data.isAnimated)\r\n                //     isAnimated = data.isAnimated;\r\n                document.getElementById('main-ui-view').scrollTo(0,0)\r\n            }));\r\n\r\n            if ($mdMedia('gt-sm'))\r\n                ZendeskWidget.show();\r\n            else\r\n                ZendeskWidget.hide();\r\n\r\n            deregs.push(\r\n                $scope.$watch(function () {return $mdMedia('gt-sm') },function (mgMd) {\r\n                    if (mgMd) {\r\n                        ZendeskWidget.show()\r\n                    } else {\r\n                        ZendeskWidget.hide()\r\n                    }\r\n                })\r\n            );\r\n\r\n\r\n\r\n            $scope.$on('$destroy',function () {\r\n                while (deregs.length)\r\n                    deregs.pop()();\r\n            })\r\n        }]);","'use strict';\r\nangular.module('paladinApp')\r\n    .controller('bookingDetailedController',[\r\n        '$rootScope',\r\n        '$scope',\r\n        'enums',\r\n        'appStateManager',\r\n        'apiService',\r\n        '$stateParams',\r\n        'ptLog',\r\n        'popupService',\r\n        'ptUtils',\r\n        '$sce',\r\n        function ($rootScope,\r\n                  $scope,\r\n                  enums,\r\n                  appStateManager,\r\n                  apiService,\r\n                  $stateParams,\r\n                  ptLog,\r\n                  popupService,\r\n                  ptUtils,\r\n                  $sce) {\r\n            $scope.isLoading = false;\r\n            $scope.bookingId = $stateParams.bookingId;\r\n            $scope.booking = null;\r\n            $scope.address = {\r\n                title: undefined,\r\n                address: undefined,\r\n                lat: undefined,\r\n                lng: undefined\r\n            };\r\n            $scope.fetchDetailedBooking = () => {\r\n                $scope.isLoading = true;\r\n                apiService.bookings.getBookingDetailed({\r\n                    bookingId: $scope.bookingId,\r\n                    userId: appStateManager.getUserId(),\r\n                })\r\n                    .then((res) => {\r\n                        $scope.booking = res.Data;\r\n                        $scope.booking.Product_Description = $sce.trustAsHtml($scope.booking.Product_Description);\r\n                        $scope.fetchProduct();\r\n                    })\r\n                    .catch((err) => {\r\n                        ptLog.error(JSON.stringify(err))\r\n                    })\r\n            };\r\n\r\n\r\n            $scope.fetchProduct = () => {\r\n                apiService.products.getDetailedProduct($scope.booking.Product_Id)\r\n                    .then((res) => {\r\n                        $scope.product = res.Data;\r\n                        $scope.fetchProductBookingDetails();\r\n                    })\r\n                    .catch((err) => {\r\n                        ptLog.error(JSON.stringify(err))\r\n                    })\r\n            };\r\n\r\n            $scope.fetchProductBookingDetails = () => {\r\n                apiService.products.getProductBookingDetails({\r\n                    productId: $scope.product.Product_Id,\r\n                    userId: appStateManager.getUserId()\r\n                })\r\n                    .then((response) => {\r\n                        $scope.productBookingDetails = response.Data;\r\n\r\n                        ptUtils.getAddressToDisplayForBooking({\r\n                            product: $scope.product,\r\n                            productBookingDetails: $scope.productBookingDetails,\r\n                            booking: $scope.booking,\r\n\r\n                        })\r\n                            .then((address) => {\r\n                                $scope.$evalAsync(() => {\r\n                                    $scope.address = address;\r\n                                    $scope.isLoading = false;\r\n                                    if (ptUtils.isMobile.any()) {\r\n                                        popupService.showBookingTrackerInfoMobilePopup($scope.booking)\r\n                                    }\r\n                                })\r\n                            })\r\n                            .catch((err) => {\r\n                                $scope.$evalAsync(() => {\r\n                                    $scope.isLoading = false;\r\n                                })\r\n                            });\r\n                    })\r\n                    .catch((err) => {\r\n                        ptLog.error(err);\r\n                    })\r\n            };\r\n\r\n            $scope.goToProduct = () => {\r\n                  $rootScope.$emit(enums.busNavigation.productDetailed,{product:$scope.booking})\r\n            };\r\n\r\n            $scope.fetchDetailedBooking();\r\n\r\n            let deregs = [];\r\n\r\n            deregs.push($rootScope.$on(enums.busEvents.reloadDetailedBooking,(event,{ bookingId }) => {\r\n                    if (bookingId == $scope.bookingId) {\r\n                        $scope.fetchDetailedBooking();\r\n                    }\r\n            }));\r\n\r\n            $scope.$on('$destroy',() => {\r\n                while (deregs.length)\r\n                    deregs.pop()();\r\n            })\r\n\r\n        }]);","'use strict';\r\nangular.module('paladinApp')\r\n    .controller('chatController',[\r\n        '$rootScope',\r\n        '$scope',\r\n        '$mdMedia',\r\n        '$mdSidenav',\r\n        'appStateManager',\r\n        'enums',\r\n        '$stateParams',\r\n        'chatService',\r\n        '$mdMedia',\r\n        function (\r\n            $rootScope,\r\n            $scope,\r\n            $mdMedia,\r\n            $mdSidenav,\r\n            appStateManager,\r\n            enums,\r\n            $stateParams,\r\n            chatService) {\r\n\r\n            $scope.isLoading = false;\r\n            $scope.isChatCollapsed = false;\r\n            $scope.preSelectedchat = { value: undefined };\r\n            $scope.isGtMd = $mdMedia('gt-md');\r\n            $scope.isGtSM = $mdMedia('gt-sm');\r\n            if ($stateParams.chatId)\r\n                chatService.activateChatWhenReady($stateParams.chatId);\r\n\r\n\r\n            $scope.toggleNav = () => {\r\n                $mdSidenav('chat-list-side-nav').toggle();\r\n            };\r\n\r\n\r\n            let deregs = [];\r\n\r\n            deregs.push(\r\n                $scope.$watch(function () {return $mdMedia('gt-md') },function (mgMd) {\r\n                    $scope.isGtMd = mgMd;\r\n                    $scope.isChatCollapsed = mgMd;\r\n                })\r\n            );\r\n            deregs.push(\r\n                $scope.$watch(function () {return $mdMedia('gt-sm') },function (mgSm) {\r\n                    $scope.isGtSM = mgSm;\r\n                })\r\n            );\r\n\r\n            $scope.$on('$destroy',() => {\r\n                while (deregs.length)\r\n                    deregs.pop()();\r\n            })\r\n\r\n    }]);","angular.module('paladinApp')\r\n.controller('homeController', [\r\n    '$scope',\r\n    '$http',\r\n    '$location',\r\n    '$cookies',\r\n    '$rootScope',\r\n    '$sce',\r\n    '$route',\r\n    'Filters',\r\n    '$translate',\r\n    'ZendeskWidget',\r\n    'ngMeta',\r\n    '$mdDialog',\r\n    'enums',\r\n    '$state',\r\n    '$stateParams',\r\n    'popupService',\r\n    '$timeout',\r\n    'appStateManager',\r\n    function ($scope,\r\n              $http,\r\n              $location,\r\n              $cookies,\r\n              $rootScope,\r\n              $sce,\r\n              $route,\r\n              Filters,\r\n              $translate,\r\n              ZendeskWidget,\r\n              ngMeta,\r\n              $mdDialog,\r\n              enums,\r\n              $state,\r\n              $stateParams,\r\n              popupService,\r\n              $timeout,\r\n              appStateManager) {\r\n\r\n\r\n        $scope.verificationMessage = \"Processing ...\";\r\n        let geocoder;\r\n        const cat = $stateParams.category;\r\n        let categoryParam =  cat && cat.toString().replace(/-/g, ' ')!=$translate.instant('ACTG') ? cat :$translate.instant('ACTG');\r\n        let subCategoryParam = $stateParams.subCategory ? $stateParams.subCategory :'';\r\n        let initialSortBy = $state.params.sortBy || undefined;\r\n        let pageIndex = $state.params.pageIndex || 1;\r\n\r\n        let city = $stateParams.city || ($rootScope.filter || {}).glCity || undefined;\r\n\r\n         const languageCode = $stateParams.languageCode;\r\n        $rootScope.lang = languageCode;\r\n        $translate.use(languageCode);\r\n\r\n        ZendeskWidget.setLocale(languageCode);\r\n\r\n        var scope = $scope;\r\n        if ($state.params.search != undefined) {\r\n            $rootScope.searchKey = $state.params.search;\r\n        } else if ($location.search().search != undefined) {\r\n            $rootScope.searchKey = $location.search().search;\r\n        }\r\n        if ($stateParams.isResetSearch) {\r\n            $rootScope.searchKey = '';\r\n        }\r\n\r\n        $rootScope.isTryAndBuy = $stateParams.isTryAndBuy;\r\n      \r\n\r\n        function initCategories() {\r\n            Filters.get('it', function(response){\r\n                $rootScope.categoriesMap.set('it', response.data.Data);\r\n                Filters.get('en', function(response){\r\n                    $rootScope.categoriesMap.set('en', response.data.Data);\r\n                    // Filters.get('de', function(response){\r\n                    //     $rootScope.categoriesMap.set('de', response.data.Data);\r\n                        scope.selectCategory();\r\n                        scope.findLatLong();\r\n                    // });\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n        function updateHreflangTags() {\r\n            updateHreflang(\"it\");\r\n            // updateHreflang(\"de\");\r\n            updateHreflang(\"en\");\r\n\r\n        }\r\n\r\n        scope.filter = {\r\n            categories: [],\r\n            languageCode: languageCode,\r\n            priceRange: [0,1000],\r\n            search:{\r\n                lat: undefined,\r\n                lng: undefined,\r\n                searchStr: ''\r\n            },\r\n            currentPage:1,\r\n            distanceRange: city? 10 : null,\r\n            sortBy: enums.productsSortOptions.bestProduct,\r\n            sortByCode: enums.productsSortByTextCode.SortByBestProduct,\r\n            category : {\r\n                defaultCategoryName : $translate.instant('ACTG'),\r\n                defaultCategoryDesc : $translate.instant('ACTG'),\r\n                selectedCategoryName :$translate.instant('ACTG'),\r\n                isTryAndBuy: $rootScope.isTryAndBuy,\r\n                selectedCategoryBannerImage: window.globals.IS_PROMO ? enums.categoriesBannersPaths.promo : enums.categoriesBannersPaths.all[languageCode],\r\n                selectedSubCategoryName: null\r\n            },\r\n            gl: null, //google location object when location searched this will be accessible to all\r\n            glString: '',\r\n            glCity: ''\r\n        };\r\n\r\n        scope.prepareUrl = function(){\r\n            let url = $rootScope.isTryAndBuy ? `/${appStateManager.currentLang}/categorie` : `/${appStateManager.currentLang}/categorie/privato`;\r\n            if(scope.filter.category.selectedCategoryName && scope.filter.category.selectedCategoryName.toString()){\r\n                url +='/'+scope.filter.category.selectedCategoryName.toString();\r\n                if(scope.filter.category.selectedSubCategoryName && scope.filter.category.selectedSubCategoryName.toString()){\r\n                    url +='/'+scope.filter.category.selectedSubCategoryName.toString();\r\n                    if (city) {\r\n                        url+='/'+city;\r\n                    }\r\n                    //if(scope.filter.glCity){\r\n                    //\turl +='/'+scope.filter.glCity;\r\n                    //}\r\n                }\r\n            }\r\n            return url.split(' ').join('-');\r\n        };\r\n\r\n        scope.prepareQuery = () => {\r\n            let obj = {};\r\n            if (scope.filter.search.searchStr) {\r\n                obj.search = scope.filter.search.searchStr\r\n            }\r\n            if (scope.filter.sortBy) {\r\n                obj.sortBy = scope.filter.sortBy;\r\n            }\r\n            if (scope.filter.currentPage) {\r\n                obj.pageIndex = scope.filter.currentPage;\r\n            }\r\n        \r\n        return obj;\r\n        };\r\n\r\n        function updateHreflang(lang) {\r\n            const metaTag = enums.ngMetaValues.currentUrl(lang);\r\n            if (lang == languageCode) {\r\n                ngMeta.setTag(metaTag, $location.absUrl());\r\n                return;\r\n            }\r\n\r\n            var url = '/'+lang+'/categorie/';\r\n            if (scope.filter.category.selectedCategoryId == null) {\r\n                url += enums.allCategories[lang].replace(/ /g, '-')+ '/';\r\n            } else {\r\n                url += Filters.getCategoryById(scope.filter.category.selectedCategoryId, lang).Category_Name.replace(/ /g, '-');\r\n            }\r\n\r\n            if (scope.filter.category.selectedSubCategoryId && scope.filter.category.selectedSubCategoryId != null) {\r\n                url += '/' + Filters.getSubcategoryById(scope.filter.category.selectedSubCategoryId, lang).SubCategory_Name.replace(/ /g, '-');\r\n\r\n                if (city) {\r\n                    url += '/'+city;\r\n                }\r\n            }\r\n            ngMeta.setTag(metaTag, $location.absUrl().split('/' + languageCode+'/')[0] + url);\r\n        }\r\n\r\n        //method needed to init the app. We will determine the location based on either\r\n        //0. previous location stored (in rootscope)\r\n        //1. city in url\r\n        //2. GPS loc\r\n        //3. Default loc\r\n        function init() {\r\n\r\n            //dont need to reload if $rootscope has already filter stored\r\n            if (initialSortBy) {\r\n                scope.filter.sortBy = initialSortBy;\r\n                scope.filter.sortByCode = enums.productsSortByTextCode[initialSortBy];\r\n                // scope.filter.search.searchStr = '';\r\n                if ($stateParams.isResetSearch) {\r\n                    scope.filter.search.searchStr = $rootScope.searchKey;\r\n                    scope.filter.search.currentSearchStr = $rootScope.searchKey;\r\n                }\r\n            } else if ($rootScope.searchKey != undefined) {\r\n                scope.filter.search.searchStr = $rootScope.searchKey;\r\n                scope.filter.search.currentSearchStr = $rootScope.searchKey;\r\n            }\r\n\r\n            if (pageIndex) {\r\n                scope.filter.currentPage = pageIndex;\r\n            }\r\n\r\n            if ($rootScope.filter) {\r\n                //case where we press back button from product preview page or to breadcrumb\r\n                scope.filter = $rootScope.filter; //!important for not loading again all data\r\n                //dont need to reload if $rootscope has already filter stored\r\n                if (initialSortBy) {\r\n                    scope.filter.sortBy = initialSortBy;\r\n                    scope.filter.sortByCode = enums.productsSortByTextCode[initialSortBy];\r\n\r\n                    if ($stateParams.isResetSearch) {\r\n                        scope.filter.search.searchStr = '';\r\n                        scope.filter.search.currentSearchStr = '';\r\n                    }\r\n                    // scope.filter.search.searchStr = '';\r\n                } else if ($rootScope.searchKey != undefined) {\r\n                    scope.filter.search.searchStr = $rootScope.searchKey;\r\n                    scope.filter.search.currentSearchStr = $rootScope.searchKey;\r\n                }\r\n                registerUpdateUrlListener();\r\n                scope.selectCategory();\r\n                scope.findLatLong();\r\n            } else {\r\n                //case where we init/refresh website\r\n                if (!$rootScope.categoriesMap) {\r\n                    $rootScope.categoriesMap = new Map();\r\n                    initCategories(languageCode);\r\n                } else {\r\n\r\n                    scope.selectCategory();\r\n                    scope.findLatLong();\r\n                }\r\n            }\r\n\r\n            \r\n            scope.promoTimeout = $timeout( () => {\r\n                if (appStateManager.user == null && !angular.element(document.body).hasClass('md-dialog-is-showing')) {    \r\n                    popupService.showLoginSignupPopup(true);\r\n                }\r\n            },window.globals.PROMO_SIGNUP_TIMER);\r\n            \r\n        }\r\n\r\n        scope.findLatLong = function() {\r\n            //location already defined\r\n            if (scope.filter.glString) {\r\n                scope.geocodeNow(null,null,scope.filter.glString)\r\n            } else if(!city) {\r\n                //asking for location access\r\n                if (navigator.geolocation) {\r\n                    scope.geocodeNow(null,null,null);\r\n                    navigator.geolocation.getCurrentPosition(function(position) {\r\n                        scope.geocodeNow(position.coords.latitude,position.coords.longitude,null);\r\n                    }, function() {\r\n                        scope.geocodeNow(null,null,null);\r\n                    });\r\n                } else {\r\n                    // Browser doesn't support Geolocation\r\n                    scope.geocodeNow(null,null,null);\r\n                }\r\n            }else{\r\n                scope.geocodeNow(null,null,null);\r\n            }\r\n\r\n        };\r\n\r\n        scope.geocodeNow = function(lat,lng,address) {\r\n            var data= {};\r\n            if(lat && lng){\r\n                data.location = {};\r\n                data.location.lat = lat;\r\n                data.location.lng = lng;\r\n            }else if(address){\r\n                data.address = address;\r\n            }else{\r\n                if(languageCode == 'it' || languageCode == 'en'){\r\n                    data.address = 'milan italy';\r\n                }else if(languageCode == 'de'){\r\n                    data.address = 'berlin germany';\r\n                }else{\r\n                    data.address = 'berlin germany';\r\n                }\r\n            }\r\n\r\n            geocoder = new google.maps.Geocoder();\r\n            geocoder.geocode(data, function(results, status) {\r\n                if (results && results.length > 0) {\r\n                    saveLocationToScope(results[0]);\r\n                }\r\n\r\n                $rootScope.$broadcast('filtersUpdated',scope.filter);\r\n            });\r\n        }\r\n\r\n\r\n\r\n        function saveLocationToScope(place) {\r\n            scope.filter.gl = place;\r\n            scope.filter.search.lat = place.geometry.location.lat();\r\n            scope.filter.search.lng = place.geometry.location.lng();\r\n            scope.filter.glCity = getCity(place);\r\n            scope.filter.glString = place.formatted_address;\r\n        }\r\n\r\n        function getCity(result){\r\n            var country='',state='',city='';\r\n            for(var i=0 ;i<result.address_components.length;i++){\r\n                var types = result.address_components[i].types;\r\n                for(var j=0;j<types.length;j++){\r\n                    var type = types[j];\r\n                    if(type=='country' || type==\"political\"){\r\n                        country = result.address_components[i].long_name;\r\n                        break;\r\n                    }else if(type=='administrative_area_level_1'){\r\n                        state = result.address_components[i].long_name;\r\n                        break;\r\n                    }else if((type=='administrative_area_level_2' && !city) || type=='locality'){\r\n                        city = result.address_components[i].long_name;\r\n                        break;\r\n                    }\r\n\r\n                }\r\n            }\r\n            return city;\r\n\r\n            //var shortAddress = (city ? city+',':'' )+(state ? state+',':'' )+(country ? country:'' );\r\n            //return shortAddress;\r\n        }\r\n\r\n        scope.selectCategory = function(){\r\n\r\n            scope.filter.categories = $rootScope.categoriesMap.get(languageCode);\r\n\r\n            let category = Filters.getCategoryByName(categoryParam,languageCode, $rootScope.isTryAndBuy);\r\n\r\n            let tempCategory = scope.filter.category;\r\n            if (category) {\r\n                tempCategory.selectedCategoryId = category.Category_Id;\r\n                tempCategory.selectedCategoryDesc=$sce.trustAsHtml(category.Category_Description);\r\n                tempCategory.selectedCategoryName=category.Category_Name;\r\n                tempCategory.selectedCategoryImagePath=category.Category_ImagePath;\r\n                tempCategory.selectedCategoryBannerImage = category.Category_BannerPath;\r\n\r\n                if (category.Category_SubCatrgories && category.Category_SubCatrgories.length>0) {\r\n                    for (var i=0;i<category.Category_SubCatrgories.length;i++) {\r\n                        var subCategory = category.Category_SubCatrgories[i];\r\n\r\n                        tempCategory.selectedSubCategoryId = undefined;\r\n                        tempCategory.selectedSubCategoryDesc = undefined;\r\n                        tempCategory.selectedSubCategoryName = undefined;\r\n                        tempCategory.selectedSubCategoryImagePath = undefined;\r\n                        tempCategory.selectedSubCategoryBannerImage\t= undefined;\r\n\r\n                        if(subCategory.SubCategory_Name.toLowerCase().replace(/ /g,'-') == subCategoryParam.toLowerCase()) {\r\n                            tempCategory.selectedSubCategoryId = subCategory.SubCategory_Id;\r\n                            tempCategory.selectedSubCategoryDesc = $sce.trustAsHtml(subCategory.SubCategory_Description );\r\n                            tempCategory.selectedSubCategoryName = subCategory.SubCategory_Name ;\r\n                            tempCategory.selectedSubCategoryImagePath = subCategory.SubCategory_ImagePath ;\r\n                            tempCategory.selectedSubCategoryBannerImage\t= subCategory.SubCategory_BannerPath;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                //all categories selected\r\n                tempCategory.selectedCategoryId = null;\r\n                tempCategory.selectedCategoryDesc = $sce.trustAsHtml(categoryParam);\r\n                tempCategory.selectedCategoryName = $translate.instant('ACTG');\r\n                tempCategory.selectedCategoryImagePath = null;\r\n                tempCategory.selectedCategoryBannerImage = window.globals.IS_PROMO ? enums.categoriesBannersPaths.promo : enums.categoriesBannersPaths.all[languageCode];\r\n                tempCategory.selectedSubCategoryId = undefined;\r\n                tempCategory.selectedSubCategoryDesc = undefined;\r\n                tempCategory.selectedSubCategoryName = undefined;\r\n                tempCategory.selectedSubCategoryImagePath = undefined;\r\n                tempCategory.selectedSubCategoryBannerImage\t= undefined;\r\n                tempCategory.isTryAndBuy = $rootScope.isTryAndBuy;\r\n            }\r\n            scope.filter.category = tempCategory ; // this is required because if we set only one param than immediately list directive will be loaded and fetch data ;\r\n\r\n\r\n            //$rootScope.$broadcast('filtersUpdated',scope.filter);\r\n\r\n\r\n            //when city is in url, we select distance \"In the City (10km)\"\r\n            if (city) {\r\n                let radius = {\r\n                    \"l_id\": 3,\r\n                    \"distance\":10,\r\n                    \"name\": \"IC\"\r\n                };\r\n                $rootScope.$broadcast('distanceChanged', radius);\r\n            }\r\n            //listen to any filter changes in order to update url\r\n            registerUpdateUrlListener();\r\n        };\r\n\r\n        let deregs = [];\r\n        //here is where we start everything\r\n        init();\r\n\r\n        // var off = $scope.$on('$stateChangeStart', function(e) {\r\n        //     e.preventDefault();\r\n        //     off();\r\n        // });\r\n\r\n        deregs.push($rootScope.$on(enums.busEvents.googlePlacesAutocompletePlaceChanged, function(events, args){\r\n            if(args && args.place && (args.elementId == 'search-location-bar-desktop' || args.elementId == 'search-location-bar-mobile')) {\r\n                saveLocationToScope(args.place);\r\n                city = null;\r\n                $rootScope.$broadcast('filtersUpdated',scope.filter);\r\n            }\r\n        }));\r\n\r\n        deregs.push(scope.$on('languageChanged', function(event,data){\r\n            scope.filter.languageCode = data;\r\n            ZendeskWidget.setLocale(data);\r\n        }));\r\n\r\n        function registerUpdateUrlListener() {\r\n            //listen to any filter changes in order to update url\r\n            deregs.push(scope.$watchGroup([\r\n                'filter.languageCode',\r\n                'filter.sortBy',\r\n                'filter.currentPage',\r\n                'filter.category.selectedCategoryName',\r\n                'filter.category.selectedSubCategoryName',\r\n                'search.lat',\r\n                'search.lng',\r\n            ],function(value) {\r\n                if(value) {\r\n                    $rootScope.filter = scope.filter;\r\n                    $location.search(scope.prepareQuery());\r\n                    $location.update_path(scope.prepareUrl(), false);\r\n                    // $scope\r\n                    updateHreflangTags();\r\n                }\r\n            }))\r\n        }\r\n\r\n\r\n\r\n        $scope.$on('$destroy', () => {\r\n            \r\n            while (deregs.length) {\r\n                deregs.pop()();\r\n            }\r\n\r\n            $timeout.cancel(scope.promoTimeout);\r\n            \r\n        })\r\n\r\n    }]);\r\n\r\nangular.module('paladinApp')\r\n    .directive('googleplaceAutocomplete', ['$rootScope','enums', function ($rootScope,enums) {\r\n    return {\r\n        restrict: 'A',\r\n        require: 'ngModel',\r\n        scope: {\r\n            googleplaceAutocompletePlace: '=?',\r\n            googleplaceAutocomplete: '=',\r\n        },\r\n        link: function postLink(scope, element, attrs, model) {\r\n            var options = scope.googleplaceAutocomplete || {};\r\n            options.placeholder = '';\r\n            options.componentRestrictions = {country: 'it'};\r\n            var autocomplete = new google.maps.places.Autocomplete(element[0], options);\r\n            delete element[0].placeholder;\r\n            google.maps.event.addListener(autocomplete, 'place_changed', function () {\r\n                delete element[0].placeholder;\r\n                scope.$apply(function () {\r\n                    scope.googleplaceAutocompletePlace = autocomplete.getPlace();\r\n                    model.$setViewValue(element.val());\r\n                    $rootScope.$emit(enums.busEvents.googlePlacesAutocompletePlaceChanged, {\r\n                        place: scope.googleplaceAutocompletePlace,\r\n                        elementId: element[0].attributes.id.nodeValue,\r\n                    });\r\n                });\r\n            });\r\n\r\n            scope.$on('$destroy', function () {\r\n                google.maps.event.clearInstanceListeners(element[0]);\r\n            });\r\n        }\r\n    };\r\n}]);","angular.module('paladinApp')\r\n    .controller('homeV2Controller',[\r\n        '$rootScope',\r\n        '$scope',\r\n        'enums',\r\n        'apiService',\r\n        'appStateManager',\r\n        '$mdToast',\r\n        '$translate',\r\n        'popupService',\r\n        'ngMeta',\r\n        '$timeout',\r\n        'referralsService',\r\n        'validReferralCode',\r\n        function (\r\n            $rootScope,\r\n            $scope,\r\n            enums,\r\n            apiService,\r\n            appStateManager,\r\n            $mdToast,\r\n            $translate,\r\n            popupService,\r\n            ngMeta,\r\n            $timeout,\r\n            referralsService,\r\n            validReferralCode // from resolve\r\n        ) {\r\n            $scope.isLoading = true;\r\n\r\n            $scope.isPromo = window.globals.IS_PROMO;\r\n\r\n            $scope.lendTutorial = {\r\n                title: $translate.instant('MAKE_MONEY'),\r\n                description: 'ITEMS_ARE_INSURED',\r\n                // imgUrl: 'https://picsum.photos/400/250/?random',\r\n                imgUrl: '/assets/lend_tutorial_image.png',\r\n                steps: [\r\n                    'UPLOAD_AN_ITEM',\r\n                    'WAIT_FOR_REQUEST',\r\n                    'LEND_YOUR_ITEM'\r\n                ]\r\n            };\r\n\r\n            $scope.borrowTutorial = {\r\n                title: $translate.instant('SAVE_MONEY'),\r\n                description: 'ITEMS_ARE_INSURED',\r\n                // imgUrl: 'https://picsum.photos/400/250/?random',\r\n                imgUrl: '/assets/browse-banner-hp.jpg',\r\n                steps: [\r\n                    'FIND_THE_ITEM',\r\n                    'MAKE_A_REQUEST',\r\n                    'PICK_UP_OR_DELIVER',\r\n                ]\r\n            };\r\n\r\n            $scope.promoFixCoupon1 = {\r\n                title:  $translate.instant('PROMO_TITLE_1'),\r\n                description: $translate.instant('OFERTA_VALIDA', {couponValue: window.globals.COUPON_VALUE}),\r\n                // imgUrl: 'https://picsum.photos/400/250/?random',\r\n                imgUrl: enums.categoriesBannersPaths.promo1,\r\n                steps: [\r\n                    'STEP1',\r\n                    $translate.instant('STEP2', {couponCode: window.globals.COUPON_CODE}),\r\n                    'STEP3',\r\n                ]\r\n            };\r\n            $scope.promoFixCoupon2 = {\r\n                title: $translate.instant('PROMO_TITLE_2'), \r\n                description: $translate.instant('OFERTA_VALIDA', {couponValue: window.globals.COUPON_VALUE}),\r\n                // imgUrl: 'https://picsum.photos/400/250/?random',\r\n                imgUrl: enums.categoriesBannersPaths.promo2,\r\n                steps: [\r\n                    'STEP1',\r\n                    $translate.instant('STEP2', {couponCode: window.globals.COUPON_CODE}),\r\n                    'STEP3',\r\n                ]\r\n            };\r\n\r\n            $scope.productTeasers = {\r\n                tryAndBuy: {\r\n                    description: 'TRY_AND_BUY_INFO',\r\n                    link: `https://paladintrue.com/${appStateManager.currentLang}/${window.globals.SUPPORTED_LANGS.find((lang) => appStateManager.currentLang == lang.code).tryAndBuyWordPressPath}/`,\r\n                },\r\n                homeAppliance: {\r\n                    categoryId: enums.categoriesIds.homeAppliance,\r\n                },\r\n                smartMobility: {\r\n                    categoryId: enums.categoriesIds.smartMobility,\r\n                },\r\n                hiTech: {\r\n                    categoryId: enums.categoriesIds.hiTech,\r\n                },\r\n                outdoor: {\r\n                    categoryId: enums.categoriesIds.outdoor,\r\n                },\r\n                \r\n                kids: {\r\n                    categoryId: enums.categoriesIds.kids,\r\n                }\r\n\r\n            };\r\n\r\n            $scope.takingAboutUsImages = [\r\n                {\r\n                    img: \"assets/talkingAboutUs/nuvola_testata-black-white_squared.jpg\",\r\n                    link: 'http://nuvola.corriere.it/2017/04/26/paladin-lapp-di-noleggio-di-oggetti-tra-privati/',\r\n                },\r\n                {\r\n                    img: 'assets/talkingAboutUs/corriere-sera-square-1.jpg',\r\n                    link: 'http://www.corriere.it/tecnologia/app-software/17_aprile_27/paladin-l-app-mettere-noleggio-oggetti-che-non-usiamo-750154f0-2b76-11e7-9442-4fba01914cee.shtml',\r\n                },\r\n                {\r\n                    img: \"assets/talkingAboutUs/deejay_Logo-black-white.jpg\",\r\n                    link: 'https://www.deejay.it/audio/20170430-4/520066/',\r\n                },\r\n                {\r\n                    img: \"assets/talkingAboutUs/green-me-black-white.jpg\",\r\n                    link: 'https://www.greenme.it/tecno/cellulari/23899-paladin-app-affitto-oggetti',\r\n                },\r\n                {\r\n                    img: 'assets/talkingAboutUs/webnews-black-white.jpg',\r\n                    link: 'http://www.webnews.it/2017/05/05/paladin-sharing-applicazione-economia-startup/',\r\n                },\r\n                {\r\n                    img:'assets/talkingAboutUs/logo-lifegate-radio-black-white.jpeg',\r\n                    link:'https://www.lifegate.it/radio-sound'\r\n                },\r\n                {\r\n                    img:'assets/talkingAboutUs/logo-radio-popolare-black-white.jpeg',\r\n                    link:'http://www.radiopopolare.it/podcast/pionieri-di-lun-2310/'\r\n                },\r\n                {\r\n                    img:'assets/talkingAboutUs/green-planner-black-white.jpeg',\r\n                    link:'https://www.greenplanner.it/2017/10/10/paladin-noleggio-strumenti/'\r\n                },\r\n                {\r\n                    img:'assets/talkingAboutUs/logo-Rai3-black-white.jpeg',\r\n                    link:'http://www.rai.it/rai3/',\r\n                }\r\n\r\n            ];\r\n\r\n            $scope.getHomePageData = () => {\r\n                $scope.isLoading = true;\r\n                apiService.pages.getHomePageData([\r\n                    $scope.productTeasers.hiTech.categoryId,\r\n                    $scope.productTeasers.smartMobility.categoryId,\r\n                    $scope.productTeasers.homeAppliance.categoryId,\r\n                    $scope.productTeasers.outdoor.categoryId,\r\n                    $scope.productTeasers.kids.categoryId,\r\n                    ].toString())\r\n                    .then((response) => {\r\n                        $scope.isLoading = false;\r\n                        $scope.data = response.Data;\r\n                    })\r\n                    .catch((err) => {\r\n                        $scope.isLoading = false;\r\n                        $scope.data = {};\r\n                    })\r\n            };\r\n\r\n            $scope.getCategoryName = (categoryId) => {\r\n                const category = $scope.data.Categories.find((item) => item.CategoryId == categoryId);\r\n                if (category)\r\n                    return category.CategoryName;\r\n            }\r\n\r\n            $scope.getProductList = (categoryId, isTryAndBuy) => {\r\n                if (categoryId == 0) {\r\n                    return isTryAndBuy ? $scope.data.TryAndBuyProducts : $scope.data.P2PProducts;\r\n                }\r\n\r\n                const category = $scope.data.Categories.find((item) => item.CategoryId == categoryId);\r\n                if (category)\r\n                    return category.ProductList;\r\n            }\r\n\r\n            $scope.getPopularTryAndBuy = () => {\r\n                $scope.isLoading = true;\r\n                apiService.products.getPopularTryAndBuy()\r\n                    .then((response) => {\r\n                        $scope.isLoading = false;\r\n                        $scope.tryAndBuy = response.Data\r\n                    })\r\n                    .catch((err) => {\r\n                        $scope.isLoading = false;\r\n                        $scope.tryAndBuy = [];\r\n                    })\r\n            } ;\r\n            $scope.getHomePageData();\r\n\r\n            // $scope.getPopularTryAndBuy();\r\n\r\n            ngMeta.setTitle($translate.instant('HOME_TITLE'));\r\n            ngMeta.setTag('description', $translate.instant('DEFAULT_META_DESC'));\r\n            ngMeta.setTag('imagePath', '../../assets/paladin-logo-300x300.png');\r\n\r\n            $scope.promoTimeout = $timeout( () => {\r\n                if(!$scope.isCrawler()){\r\n                    if (appStateManager.user == null && !angular.element(document.body).hasClass('md-dialog-is-showing')) {\r\n                        popupService.showLoginSignupPopup(true);\r\n                    }\r\n                }\r\n            }, referralsService.referralCode ? 0 : window.globals.PROMO_SIGNUP_TIMER);\r\n\r\n            $scope.isCrawler = () => {\r\n                \r\n                return /bot|prerender|googlebot|crawler|spider|robot|crawling/i.test(navigator.userAgent);\r\n                \r\n            }\r\n            $scope.$on('$destroy', () => {\r\n\r\n                // while (deregs.length)\r\n                //     deregs.pop()();\r\n\r\n                $timeout.cancel($scope.promoTimeout);\r\n            });\r\n\r\n            $scope.showToast = (message,delay = 3000) => {\r\n                $mdToast.show(\r\n                    $mdToast.simple()\r\n                        .textContent(message)\r\n                        .hideDelay(delay)\r\n                );\r\n            };\r\n\r\n        }]);\r\n\r\n","angular.module('paladinApp')\r\n    .controller('myListingsController',[\r\n        '$rootScope',\r\n        '$scope',\r\n        'enums',\r\n        'appStateManager',\r\n        'apiService',\r\n        '$mdMedia',\r\n        function (\r\n            $rootScope,\r\n            $scope,\r\n            enums,\r\n            appStateManager,\r\n            apiService,\r\n            $mdMedia) {\r\n            $scope.isLoading = false;\r\n            $scope.userId = appStateManager.getUserId();\r\n            $scope.addNewItem = () => {\r\n                $rootScope.$emit(enums.busNavigation.newProduct);\r\n            };\r\n\r\n\r\n            $scope.isGtMd = $mdMedia('gt-md');\r\n\r\n            let deregs = [];\r\n\r\n            deregs.push(\r\n                $scope.$watch(function () {return $mdMedia('gt-md') },function (mgMd) {\r\n                    $scope.isGtMd = mgMd;\r\n                })\r\n            );\r\n\r\n            $scope.$on('$destroy',() => {\r\n                while (deregs.length)\r\n                    deregs.pop()()\r\n            })\r\n\r\n        }\r\n    ]);","angular.module('paladinApp')\r\n    .controller('newProductController',[\r\n        '$rootScope',\r\n        '$scope',\r\n        'enums',\r\n        'appStateManager',\r\n        'apiService',\r\n        'uploadHandler',\r\n        'toastService',\r\n        '$translate',\r\n        'gtmService',\r\n        'ptUtils',\r\n        function ($rootScope,\r\n                  $scope,\r\n                  enums,\r\n                  appStateManager,\r\n                  apiService,\r\n                  uploadHandler,\r\n                  toastService,\r\n                  $translate,\r\n                  gtmService,\r\n                  ptUtils) {\r\n            $scope.isLoading = true;\r\n            $scope.emptyProductImage = enums.categoriesBannersPaths.addProduct;\r\n            $scope.subCategories = [];\r\n\r\n            $scope.userAddress =  undefined;\r\n            $scope.isUseUserAddress = { value: false };\r\n\r\n\r\n            $scope.newProductModel = {\r\n                Product_Title:'',\r\n                Product_Description:'',\r\n\r\n                Product_ItemCategory_Id: 0,\r\n                Product_SubCategoryId: 0,\r\n                Product_LenduserId: appStateManager.getUserId(),\r\n                Product_TryAndBuy: false,\r\n                Product_IsShop: false,\r\n                Product_ShopURL: '',\r\n                Product_Price_Perday: null,\r\n                Product_City: '',\r\n                Price7Day: null,\r\n                Price15Day: null,\r\n            };\r\n\r\n\r\n            $scope.onUploadClicked = () => {\r\n                $scope.$$postDigest(() => {\r\n                    angular.element(document.getElementById('uploadImageBtn'))[0].click();\r\n                })\r\n            };\r\n\r\n            $scope.onUploaded = (inputElement) => {\r\n                toastService.simpleToast($translate.instant('UPLOADING_IMAGE'));\r\n                // Resize\r\n                canvasResize(inputElement.files[0], {\r\n                    quality: 75,\r\n                    isPreprocessing: true,\r\n                    cardType: '',\r\n                    maxW: 2048,\r\n                    maxH: 2008,\r\n                    isiOS: ptUtils.isMobile.iOS(),\r\n                    callback: function (data, width, height) {\r\n                        $scope.$evalAsync(() => {\r\n                            $scope.tmpUlpoadedImg = data;\r\n                            $scope.newProductModel.ProductImage_Image1 = data.split(',')[1];\r\n                            toastService.simpleToast($translate.instant('IMAGE_UPLOADED'));\r\n                        })\r\n                    }\r\n                });\r\n            };\r\n\r\n            $scope.validator = () => {\r\n                let valid = true;\r\n                let errMsg = '';\r\n                if (!$scope.newProductModel.Product_Title) {\r\n                    valid = false;\r\n                    // Please select title\r\n                    if (!errMsg) errMsg = $translate.instant('PRODUCT_INVALID_TITLE');\r\n                }\r\n\r\n                if (!$scope.newProductModel.Product_Description) {\r\n                    valid = false;\r\n                    // Please select description\r\n                    if (!errMsg)\r\n                        errMsg = $translate.instant('PRODUCT_INVALID_DESCRIPTION');\r\n                }\r\n\r\n                if ($scope.newProductModel.Product_Latitude &&\r\n                    $scope.newProductModel.Product_Longitude ||\r\n                    ($scope.isUseUserAddress.value && $scope.userAddress && $scope.userAddress.lat && $scope.userAddress.lng)) {\r\n\r\n                } else {\r\n                    valid = false;\r\n                    // Please select address\r\n                    if (!errMsg)\r\n                        errMsg = $translate.instant('PRODUCT_INVALID_ADDRESS');\r\n                }\r\n\r\n                if (!$scope.newProductModel.ProductImage_Image1) {\r\n                    valid = false;\r\n                    // Please upload image\r\n                    if (!errMsg)\r\n                        errMsg = $translate.instant('PRODUCT_INVALID_IMAGE');\r\n                }\r\n\r\n                if (!$scope.newProductModel.Product_ItemCategory_Id) {\r\n                    valid = false;\r\n                    // Please select category\r\n                    if (!errMsg)\r\n                        errMsg = $translate.instant('PRODUCT_INVALID_CATEGORY');\r\n                }\r\n\r\n                if (!$scope.newProductModel.Product_Price_Perday) {\r\n                    valid = false;\r\n                    // Please select price per day\r\n                    if (!errMsg)\r\n                        errMsg = $translate.instant('PRODUCT_INVALID_PRICE_PER_DAY');\r\n                }\r\n\r\n                if ($scope.newProductModel.Product_TryAndBuy && !$scope.newProductModel.Product_ShopURL) {\r\n                    valid = false;\r\n                    // Try and buy must have url\r\n                    if (!errMsg)\r\n                       errMsg = $translate.instant('PRODUCT_INVALID_TRY_AND_BUY_URL');\r\n                }\r\n                if (!valid)\r\n                    toastService.simpleToast(errMsg);\r\n                return valid\r\n            };\r\n\r\n            $scope.onCategorySelected = (categoryId) => {\r\n                $scope.subCategories = [];\r\n                $scope.newProductModel.Product_SubCategoryId = 0;\r\n                if ($scope.categories) {\r\n                    const selectedCategory = $scope.categories.find((cat) => cat.Category_Id == categoryId);\r\n                    if (selectedCategory && selectedCategory.Category_SubCatrgories && selectedCategory.Category_SubCatrgories.length > 0) {\r\n                        $scope.subCategories = selectedCategory.Category_SubCatrgories;\r\n                    } else {\r\n                        $scope.subCategories = [];\r\n                    }\r\n                }\r\n            };\r\n\r\n            $scope.addProduct = () => {\r\n                if (!$scope.validator())\r\n                    return;\r\n                $scope.isLoading = true;\r\n                let newProduct = angular.copy($scope.newProductModel);\r\n                if ($scope.isUseUserAddress.value) {\r\n                    delete newProduct.Product_LocationId;\r\n                    newProduct.Product_Latitude = $scope.userAddress.lat;\r\n                    newProduct.Product_Longitude = $scope.userAddress.lng;\r\n                }\r\n                $rootScope.$emit(enums.busEvents.scrollMainScrollerToTop);\r\n                apiService.products.addProduct(newProduct)\r\n                    .then((response) => {\r\n                        gtmService.trackEvent('add-product', 'new-product-added');\r\n                        apiService.products.getUserProducts({\r\n                            userId: appStateManager.getUserId(),\r\n                            productsFilter: enums.userProductsFilter.myProductsToBorrow\r\n                        })\r\n                            .then((res) => {\r\n                                $scope.isLoading = false;\r\n                                if (res && res.Data && res.Data.User_AllProducts && res.Data.User_AllProducts.length > 0) {\r\n                                    const newProduct = res.Data.User_AllProducts[res.Data.User_AllProducts.length-1];\r\n                                    $rootScope.$emit(enums.busNavigation.productDetailed,{product: newProduct});\r\n                                }\r\n                                console.log(res)\r\n                            })\r\n                            .catch((err) => {\r\n                                $scope.isLoading = false;\r\n                                console.error(err)\r\n                            })\r\n                    })\r\n                    .catch((err) => {\r\n                        $scope.isLoading = false;\r\n                        // toastService.simpleToast(JSON.stringify(err));\r\n                    })\r\n            };\r\n\r\n            const formValuesInit = () => {\r\n                if (appStateManager.user && appStateManager.user.User_Address && appStateManager.user.User_Latitude && appStateManager.user.User_Longitude && !$scope.userAddress) {\r\n                    $scope.userAddress = {\r\n                        address: appStateManager.user.User_Address,\r\n                        lat: appStateManager.user.User_Latitude,\r\n                        lng: appStateManager.user.User_Longitude,\r\n                    }\r\n                }\r\n                if (appStateManager.categoriesDict && !$scope.categories) {\r\n                    let tnBCategories = [];\r\n                    let i = 0;\r\n                    Object.values(appStateManager.categoriesDict)\r\n                        .forEach((category) => {\r\n                            if (!category.IsTryAndBuy) \r\n                                 tnBCategories[i++] = category;\r\n                        });\r\n                    $scope.categories = tnBCategories;\r\n                    }\r\n            };\r\n\r\n\r\n            formValuesInit();\r\n            $scope.isLoading = false;\r\n\r\n            let deregs = [];\r\n            deregs.push($rootScope.$on(enums.busEvents.categoriesUpdate,() => {\r\n                formValuesInit();\r\n            }));\r\n\r\n            deregs.push($rootScope.$on(enums.busEvents.updatedUser,() => {\r\n                formValuesInit();\r\n            }));\r\n\r\n            deregs.push($rootScope.$on(enums.busEvents.googlePlacesAutocompletePlaceChanged,(event,data) => {\r\n                if (data.elementId == 'newProductAddress') {\r\n                    let { place } = data, { geometry } = place;\r\n\r\n                    $scope.newProductModel.Product_Latitude = geometry.location.lat();\r\n                    $scope.newProductModel.Product_Longitude = geometry.location.lng();\r\n                    $scope.newProductModel.Product_LocationId = place.id;\r\n                }\r\n            }));\r\n            $scope.$on('$destroy',() => {\r\n                while (deregs.length)\r\n                    deregs.pop()();\r\n            })\r\n\r\n        }]);","'use strict';\r\nangular.module('paladinApp')\r\n    .controller('paymentDetailedController', [\r\n        '$rootScope',\r\n        '$scope',\r\n        'apiService',\r\n        'appStateManager',\r\n        'enums',\r\n        '$stateParams',\r\n        'popupService',\r\n        'toastService',\r\n        '$sce',\r\n        'stripeService',\r\n        'creditcards',\r\n        'menusService',\r\n        'ptUtils',\r\n        'moment',\r\n        'geoLocationService',\r\n        'ptLog',\r\n        '$translate',\r\n        'gtmService',\r\n        function ($rootScope,\r\n                  $scope,\r\n                  apiService,\r\n                  appStateManager,\r\n                  enums,\r\n                  $stateParams,\r\n                  popupService,\r\n                  toastService,\r\n                  $sce,\r\n                  stripeService,\r\n                  creditcards,\r\n                  menusService,\r\n                  ptUtils,\r\n                  moment,\r\n                  geoLocationService,\r\n                  ptLog,\r\n                  $translate,\r\n                  gtmService) {\r\n            $scope.isLoading = true;\r\n            $scope.isHaveSavedCC = false;\r\n            $scope.isTryAndBuy = false;\r\n            $scope.isNewCardLayoutOpen = false;\r\n            $scope.isBuy = false;\r\n            \r\n            if ($stateParams.startDate && $stateParams.startDate && $stateParams.productId) {\r\n                $scope.rentStartDate = $stateParams.startDate;\r\n                $scope.rentEndDate = $stateParams.endDate;        \r\n                $scope.productId = $stateParams.productId;        \r\n            } else if ($stateParams.productId && ($stateParams.purchase || $stateParams.bookingId)) {\r\n                $scope.isBuy = $stateParams.purchase;\r\n                $scope.bookingId = $stateParams.bookingId;\r\n                $scope.productId = $stateParams.productId;        \r\n            } else {\r\n                popupService.showAlert('Ops', $translate.instant('INVALID_PAGE'))\r\n                    .finally(() => {\r\n                        $rootScope.$emit(enums.busNavigation.homePage)\r\n                    });\r\n                return\r\n            }\r\n\r\n            $scope.prices = [];\r\n            $scope.userSavedCard = null;\r\n            $scope.coupon = null;\r\n            $scope.statusError = null;\r\n\r\n            // New Card model\r\n            $scope.ccModel = {\r\n                number: '',\r\n                type: '',\r\n                expiration: '',\r\n                exp_month: '',\r\n                exp_year: '',\r\n                cvc: '',\r\n                name: '',\r\n                isTermsAndConditionsAccepted: false,\r\n                isSaveCardForFutureTransactions: true,\r\n                isDelivery: true,\r\n                deliveryAddress: '',\r\n                deliveryName: '',\r\n                deliveryPhone: '',\r\n                deliveryBell: '',\r\n            };\r\n            // New CC submit form\r\n            $scope.forms = {};\r\n\r\n\r\n            $scope.ccIcon = {\r\n                'MasterCard': 'fa-cc-mastercard',\r\n                'Visa': 'fa-cc-visa',\r\n                'American Express': 'fa-cc-amex',\r\n                'Discover': 'fa-cc-discover',\r\n                undefined: 'fa-credit-card',\r\n                'Unknown': 'fa-credit-card',\r\n                'Maestro': 'fa-credit-card',\r\n                'JCB': 'fa-cc-jcb',\r\n                'Diners': 'fa-cc-diners',\r\n                'Diners Club': 'fa-cc-diners-club',\r\n            };\r\n\r\n            $scope.fetchProduct = () => {\r\n                $scope.isLoading = true;\r\n                apiService.products.getDetailedProduct($scope.productId)\r\n                    .then((response) => {\r\n                        $scope.product = response.Data;\r\n                        $scope.product.Product_Description = $sce.trustAsHtml($scope.product.Product_Description);\r\n\r\n                        ptUtils.extractAndGeoLocateAddressFromObjectForFieldNames({\r\n                            object: $scope.product,\r\n                            addressFieldName: 'Lender_User_Address',\r\n                            latFieldName: 'Product_Latitude',\r\n                            lngFieldName: 'Product_Longitude'\r\n                        })\r\n                            .then((address) => {\r\n                                $scope.product.Lender_User_Address = address;\r\n                            });\r\n\r\n                        $scope.isTryAndBuy = ptUtils.isProductTryAndBuy($scope.product);\r\n\r\n                        $scope.fetchBookingDetails();\r\n                    })\r\n                    .catch((err) => {\r\n                        $scope.isLoading = false;\r\n                        toastService.simpleToast(JSON.stringify(err));\r\n                        ptLog.error(JSON.stringify(err))\r\n                    })\r\n            };\r\n\r\n            $scope.fetchBookingDetails = () => {\r\n                apiService.products.getProductBookingDetails({\r\n                    productId: $scope.product.Product_Id,\r\n                    userId: appStateManager.getUserId(),\r\n                })\r\n                    .then((response) => {\r\n                        $scope.productBookingDetails = response.Data;\r\n                        $scope.calculatePrices();\r\n                        const {\r\n                            UserCustomerDetail\r\n                        } = $scope.productBookingDetails;\r\n\r\n                        let {\r\n                            User_CustomerId\r\n                        } = UserCustomerDetail;\r\n\r\n                        // User Has saved credit card, fetch and fill info\r\n                        if (User_CustomerId) {\r\n                            $scope.fetchStripeUserCard(User_CustomerId)\r\n                        } else {\r\n                            $scope.isLoading = false;\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        $scope.isLoading = false;\r\n                        console.error(err)\r\n                    })\r\n            };\r\n\r\n            $scope.fetchProduct();\r\n\r\n\r\n            $scope.toggleNewCardLayout = () => {\r\n                $scope.isNewCardLayoutOpen = !$scope.isNewCardLayoutOpen;\r\n                $scope.userSavedCard = null;\r\n                $scope.isHaveSavedCC = false;\r\n            };\r\n\r\n            $scope.gotoTermsAndConditions = () => {\r\n                const url = menusService.commonMenus.linksMenu.list[1].link;\r\n                const win = window.open(url, '_blank');\r\n                win.focus();\r\n            };\r\n\r\n            $scope.fetchStripeUserCard = (customerId) => {\r\n                stripeService.getCustomerSources(customerId)\r\n                    .then((response) => {\r\n                        if (response.status === 200 && response.data != null) {\r\n                            const {data, object} = response.data;\r\n                            if (object == 'list' && data && data.length > 0) {\r\n                                const card = data.find((sourceItem) => sourceItem.object == 'card');\r\n\r\n                                if (card) {\r\n                                    $scope.userSavedCard = card;\r\n                                    $scope.isHaveSavedCC = true;\r\n                                }\r\n                            }\r\n                        }\r\n                        $scope.isLoading = false;\r\n                    })\r\n                    .catch((err) => {\r\n                        $scope.isLoading = false;\r\n                        console.error(err)\r\n                    })\r\n            };\r\n\r\n            $scope.calculatePrices = () => {\r\n\r\n                $scope.prices = [];\r\n                $scope.statusError = undefined;\r\n                $scope.userCredit = null;\r\n\r\n                let calculateTransactionPrice = () => {\r\n\r\n                    const {\r\n                        product,\r\n                        productBookingDetails,\r\n                        rentStartDate,\r\n                        rentEndDate,\r\n                        userCredit,\r\n                        coupon,\r\n                        ccModel\r\n                    } = $scope;\r\n\r\n                    ptUtils.calculatePricingListForProduct(\r\n                        rentStartDate,\r\n                        rentEndDate,\r\n                        product,\r\n                        productBookingDetails,\r\n                        ccModel.isDelivery,\r\n                        userCredit,\r\n                        coupon,\r\n                        $scope.isBuy\r\n                    )\r\n                        .then((prices) => {\r\n                            $scope.$evalAsync(() => {\r\n                                $scope.prices = prices\r\n                            })\r\n                        })\r\n                        .catch((err) => {\r\n                            $scope.$evalAsync(() => {\r\n                                if (err && err.message)\r\n                                    $scope.statusError = err.message\r\n                            })\r\n                        })\r\n                };\r\n\r\n                let userId = appStateManager.getUserId();\r\n\r\n                apiService.users.getUserCredit({userId})\r\n                    .then((result) => {\r\n                        $scope.userCredit = result.Data;\r\n                        calculateTransactionPrice();\r\n                    })\r\n                    .catch((err) => {\r\n                        console.error('getuserCredit failed ', err)\r\n                    });\r\n            };\r\n\r\n            $scope.onDatesSelected = ({startDate, endDate}) => {\r\n                $scope.rentStartDate = startDate;\r\n                $scope.rentEndDate = endDate;\r\n                $scope.calculatePrices();\r\n            };\r\n\r\n            $scope.couponValidated = (coupon) => {\r\n                $scope.coupon = coupon;\r\n                $scope.calculatePrices();\r\n            };\r\n            $scope.deleteCoupon = () => {\r\n                $scope.coupon = null;\r\n                $scope.calculatePrices();\r\n            };\r\n\r\n            $scope.isDeliveryStatusChange = () => {\r\n                $scope.calculatePrices();\r\n            };\r\n\r\n            $scope.bookingValidator = () => {\r\n                $scope.statusError = undefined;\r\n                const {ccModel, forms} = $scope;\r\n                const {ccForm} = forms;\r\n\r\n\r\n                const {isHaveSavedCC, userSavedCard, isNewCardLayoutOpen} = $scope;\r\n\r\n                let isValid = true;\r\n                let msg = '';\r\n\r\n                if (!ccModel.isTermsAndConditionsAccepted) {\r\n                    isValid = false;\r\n                    msg = 'NEED_TO_ACCEPT_TERMS_AND_CONDITIONS';\r\n                } else if (isHaveSavedCC && userSavedCard != undefined && !isNewCardLayoutOpen) {\r\n                    isValid = true;\r\n                } else if (ccForm.$invalid || !ccForm.$valid || !ccForm.$dirty) {\r\n                    isValid = false;\r\n                    msg = 'INVALID_CC_FORM'\r\n                }\r\n\r\n                if ($scope.isTryAndBuy && ccModel.isDelivery) {\r\n                    if (!ccModel.deliveryAddress || !ccModel.productLat || !ccModel.productLng) {\r\n                        isValid = false;\r\n                        msg = 'INVALID_DELIVERY_ADDRESS';\r\n                    } else if (!ccModel.deliveryName){\r\n                        isValid = false;\r\n                        msg = 'ADD_BILLING_NAME_MISSING';\r\n                    }else if (!ccModel.deliveryPhone){\r\n                        isValid = false;\r\n                        msg = 'ADD_PHONE_NUMBER_MISSING';\r\n                    }else if (!ccModel.deliveryBell){\r\n                        isValid = false;\r\n                        msg = 'ADD_RING_BELL_NAME_MISSING';\r\n                    }\r\n                }\r\n\r\n\r\n                if (!isValid && msg) {\r\n                    toastService.simpleToast($translate.instant(msg));\r\n                    $scope.statusError = msg;\r\n                }\r\n                return isValid;\r\n            };\r\n\r\n            $scope.bookNow = async () => {\r\n                let ccModel = angular.copy($scope.ccModel);\r\n                const {product, isHaveSavedCC, userSavedCard, productBookingDetails, isNewCardLayoutOpen} = $scope;\r\n                const {UserCustomerDetail} = productBookingDetails;\r\n                let {User_CustomerId} = UserCustomerDetail;\r\n                if ($scope.bookingValidator()) {\r\n\r\n                    popupService.showLoader();\r\n\r\n                    try {\r\n\r\n                        const {\r\n                            User_IsVerfied,\r\n                            User_Email\r\n                        } = appStateManager.user;\r\n                        //Check if its a new credit card or we already have it\r\n                        let customerData = null;\r\n                        if (!(User_CustomerId && isHaveSavedCC && userSavedCard && !isNewCardLayoutOpen)) {\r\n                            const cardData = await $scope.createNewCardToken();\r\n                            customerData = await $scope.createStripeCustomer(cardData.id, User_Email);\r\n                            console.log(customerData);\r\n                        } else {\r\n                            customerData = User_CustomerId;\r\n                        } \r\n\r\n                            // Charge Card!\r\n                        const chargeCardRes = await $scope.chargeCard(customerData, User_Email);\r\n\r\n                        if (chargeCardRes && chargeCardRes.Data) {\r\n                            //charge card successfull\r\n                            popupService.hideLoader();\r\n\r\n                            if (!$scope.isBuy) \r\n                                gtmService.trackEvent('booking', 'booking-request-submitted', chargeCardRes.Data.Booking_Id, chargeCardRes.Data.AmountCharge*0.78);\r\n                            else    \r\n                                gtmService.trackEvent('purchase', 'purchase-submitted');\r\n\r\n                            console.log(chargeCardRes);\r\n                            const bookingId = chargeCardRes.Data.Booking_Id;\r\n                            if ($scope.isBuy) {\r\n\r\n                                if ($scope.bookingId) {\r\n                                    $rootScope.$emit(enums.busNavigation.transactionDetailed, {\r\n                                        bookingId,\r\n                                        replace: true\r\n                                    });\r\n                                } else {\r\n                                    $rootScope.$emit(enums.busNavigation.productDetailed, {\r\n                                        product\r\n                                    \r\n                                    });\r\n                                }\r\n                                popupService.showAlert('PURCHASE_SUCCESSFUL_TITLE','PURCHASE_SUCCESSFUL')\r\n                                    .finally(() => {\r\n                                        if ($scope.bookingId)\r\n                                            $rootScope.$emit(enums.busNavigation.transactionDetailed,{ bookingId: $scope.bookingId, replace: true  });\r\n                                        else\r\n                                            $rootScope.$emit(enums.busNavigation.productDetailed,{ product: product });\r\n                                })\r\n\r\n                            } else if (User_IsVerfied || $scope.productBookingDetails.UserCustomerDetail.User_VerifyingStatus === 1)\r\n                                $rootScope.$emit(enums.busNavigation.transactionDetailed, {\r\n                                    bookingId,\r\n                                    replace: true\r\n                                });\r\n                            else {\r\n                                $rootScope.$emit(enums.busNavigation.idVerification, {bookingId, replace: true});\r\n                            }\r\n                        \r\n                        } else {\r\n                                popupService.hideLoader();\r\n                        }\r\n                        \r\n                    } catch (err) {\r\n                        let errMsg = null;\r\n                        if (err.data && err.data.error && err.data.error.code) {\r\n                            //stripe error code from token creation\r\n                            errMsg = $translate.instant(err.data.error.code);\r\n                        } else {\r\n                            errMsg = (err.data || {}).Message || err.message || 'DEFAULT_ERROR';\r\n                        }\r\n                        console.error(err);\r\n                        popupService.hideLoader();\r\n                        $scope.statusError = errMsg;\r\n                        toastService.simpleToast($translate.instant(errMsg));\r\n\r\n                    }\r\n                }\r\n            };\r\n\r\n            $scope.createNewCardToken = async () => {\r\n                const {number, exp_month, exp_year, cvc, name} = $scope.ccModel;\r\n                // create new token and customer for new card\r\n                const tokenRes = await stripeService.createToken({number, exp_month, exp_year, cvc, name});\r\n\r\n                if (tokenRes.data) {\r\n                    const {data} = tokenRes;\r\n                    const {id, card} = data;\r\n                    if (!$scope.isBuy && card && card.funding == 'credit' || $scope.isBuy && card) {\r\n                        return data;\r\n                    } else {\r\n                        // debit not supported\r\n                        throw new Error('DEBIT_CARD_NOT_SUPPORTED');\r\n                    }\r\n                } else {\r\n                    // response is empty\r\n                    throw new Error('CANT_CHARGE_CC');\r\n                }\r\n            };\r\n\r\n            $scope.createStripeCustomer = async (tokenId, email) => {\r\n                // create stripe customer\r\n                const stripeCustomer = await apiService.payments.createStripeCustomer({\r\n                    cardToken: tokenId,\r\n                    email: email,\r\n                });\r\n\r\n                if (stripeCustomer && stripeCustomer.Data) {\r\n                    console.log(JSON.stringify(stripeCustomer.Data));\r\n                    return stripeCustomer.Data;\r\n                } else {\r\n                    throw new Error('COULD_CREATE_STRIPE_CUSTOMER')\r\n                }\r\n\r\n            };\r\n\r\n\r\n            $scope.chargeCard = async (customerId, stripeEmail) => {\r\n                const {product, rentStartDate, rentEndDate, ccModel, coupon} = $scope;\r\n\r\n                if (!$scope.isBuy) {\r\n                    const rentalDays = ptUtils.getRentalPeriodInDays({\r\n                        startRentDate: rentStartDate,\r\n                        endRentDate: rentEndDate\r\n                    });\r\n\r\n                \r\n                    return await apiService.bookings.bookProduct({\r\n                    stripeEmail: stripeEmail,\r\n                    borrowerId: Number(appStateManager.getUserId()),\r\n                    lenderId: product.Lender_UserId,\r\n                    productId: product.Product_Id,\r\n                    startDate: moment(rentStartDate).format('MM/DD/YYYY'),\r\n                    endDate: moment(rentEndDate).format('MM/DD/YYYY'),\r\n                    stripeCustomerId: customerId,\r\n                    noOfDays: rentalDays,\r\n                    isSaveCard: ccModel.isSaveCardForFutureTransactions,\r\n                    isPickUp: !ccModel.isDelivery,\r\n                    deliveryAddress: ccModel.isDelivery ? ccModel.deliveryAddress : undefined,\r\n                    deliveryLat: ccModel.isDelivery ? ccModel.productLat : undefined,\r\n                    deliveryLng: ccModel.isDelivery ? ccModel.productLng : undefined,\r\n                    deliveryName: ccModel.isDelivery ? ccModel.deliveryName : undefined,\r\n                    deliveryPhone: ccModel.isDelivery ? ccModel.deliveryPhone : undefined,\r\n                    deliveryBell: ccModel.isDelivery ? ccModel.deliveryBell : undefined,\r\n                    coupon: coupon != undefined ? coupon.Coupon : undefined,\r\n                    idVerified: appStateManager.user.User_IsVerfied,\r\n                    isTryAndBuy: product.Product_TryAndBuy,\r\n                    });\r\n                }\r\n\r\n                else return await apiService.purchase.buyProduct({\r\n                    stripeEmail: stripeEmail,\r\n                    bookingId: $scope.bookingId || undefined,\r\n                    borrowerId: Number(appStateManager.getUserId()),\r\n                    purchaseAmount: product.Product_PurchasePrice + product.Product_Process_Fee,\r\n                    lenderId: product.Lender_UserId,\r\n                    productId: product.Product_Id,\r\n                    stripeCustomerId: customerId,\r\n                    isSaveCard: ccModel.isSaveCardForFutureTransactions,\r\n                    isPickUp: !ccModel.isDelivery,\r\n                    deliveryAddress: ccModel.isDelivery ? ccModel.deliveryAddress : undefined,\r\n                    deliveryLat: ccModel.isDelivery ? ccModel.productLat : undefined,\r\n                    deliveryLng: ccModel.isDelivery ? ccModel.productLng : undefined,\r\n                    deliveryName: ccModel.isDelivery ? ccModel.deliveryName : undefined,\r\n                    deliveryPhone: ccModel.isDelivery ? ccModel.deliveryPhone : undefined,\r\n                    deliveryBell: ccModel.isDelivery ? ccModel.deliveryBell : undefined,\r\n                });\r\n\r\n            };\r\n\r\n\r\n            let deregs = [];\r\n\r\n            deregs.push($rootScope.$on(enums.busEvents.googlePlacesAutocompletePlaceChanged, (event, data) => {\r\n                if (data.elementId == 'productDeliveryAddress') {\r\n                    let {place} = data, {geometry} = place;\r\n                    $scope.ccModel.productLat = geometry.location.lat();\r\n                    $scope.ccModel.productLng = geometry.location.lng();\r\n                    $scope.ccModel.productLocationId = place.id;\r\n                }\r\n            }));\r\n\r\n            const unsavedChanges = (e) => {\r\n                event.returnValue = 'are you sure?'\r\n            };\r\n\r\n\r\n            window.addEventListener('beforeunload', unsavedChanges);\r\n\r\n            $scope.$on('$destroy', () => {\r\n                while (deregs.length)\r\n                    deregs.pop()();\r\n                window.removeEventListener('beforeunload', unsavedChanges);\r\n            })\r\n\r\n        }]);\r\n\r\n","'use strict';\r\nangular.module('paladinPopups')\r\n    .controller('bookingTrackerInfoMobilePopup',[\r\n        '$scope',\r\n        'enums',\r\n        'ptUtils',\r\n        'locals',\r\n        'appStateManager',\r\n        '$mdDialog',\r\n        '$mdColors',\r\n        function (\r\n            $scope,\r\n            enums,\r\n            ptUtils,\r\n            locals,\r\n            appStateManager,\r\n            $mdDialog,\r\n            $mdColors\r\n        ) {\r\n\r\n            $scope.userId = appStateManager.getUserId();\r\n            $scope.isLender = $scope.userId == locals.booking.Lender_Id;\r\n            $scope.isTryAndBuy = locals.booking.IsTryAndBuy;\r\n            $scope.currentStatusId = locals.booking.BookingStatus[locals.booking.BookingStatus.length - 1].Status_TrackId;\r\n            $scope.popupDescription = ptUtils.parseBookingStepTutorialHTMLTemplateForTranslationId(\r\n                ptUtils.getTranslationIdForBookingStatus($scope.currentStatusId,$scope.isLender, $scope.isTryAndBuy)\r\n            );\r\n\r\n            $scope.close = () => $mdDialog.hide();\r\n\r\n            const setTrackerDescriptionStyle = () => {\r\n                document.getElementById('bookingTrackerInfoMobilePopupId').parentNode.classList.add('md-dialog-booking-tracker-class');\r\n                let bookingTrackerWrapperDiv = document.querySelector('#bookingTrackerInfoMobilePopupId div>div');\r\n                bookingTrackerWrapperDiv.className = 'flex-100 layout-column layout-align-center-center';\r\n\r\n                let titleSpan = document.querySelector('#bookingTrackerInfoMobilePopupId div>div>span');\r\n                titleSpan.className = 'fontWeight450 font20pt md-padding';\r\n                $mdColors.applyThemeColors(angular.element(titleSpan),{color:'default-primary-A300'});\r\n\r\n                let ol = document.querySelector('#bookingTrackerInfoMobilePopupId div>div>ol');\r\n                ol.className = 'md-padding';\r\n\r\n                let listItems = document.querySelectorAll('#bookingTrackerInfoMobilePopupId div>div>ol>li');\r\n\r\n                listItems.forEach((item) => {\r\n                    item.className = 'font12pt';\r\n                    $mdColors.applyThemeColors(angular.element(item),{color:'default-primary-A400'});\r\n                })\r\n            };\r\n\r\n            $scope.$$postDigest(() => {\r\n                setTrackerDescriptionStyle()\r\n            })\r\n\r\n\r\n\r\n\r\n\r\n    }]);\r\n","angular.module('paladinPopups')\r\n    .controller('changePasswordPopup', [\r\n        '$scope',\r\n        '$mdDialog',\r\n        'locals',\r\n        'appStateManager',\r\n        'apiService',\r\n        function (\r\n            $scope,\r\n            $mdDialog,\r\n            locals,\r\n            appStateManager,\r\n            apiService) {\r\n\r\n            $scope.isProcessing = false;\r\n            $scope.statusError = null;\r\n            $scope.changePassModel = {\r\n                oldPassword: '',\r\n                newPassword: '',\r\n                newPasswordConfirmation:''\r\n            };\r\n\r\n\r\n            $scope.cancel = () => {\r\n                $mdDialog.cancel();\r\n            };\r\n\r\n            $scope.validator = () => {\r\n                let isValid = true;\r\n                if ($scope.changePassModel.oldPassword &&\r\n                    $scope.changePassModel.newPassword &&\r\n                    $scope.changePassModel.newPasswordConfirmation) {\r\n\r\n                    if ($scope.changePassModel.newPassword != $scope.changePassModel.newPasswordConfirmation) {\r\n                        isValid = false;\r\n                        $scope.statusError = 'PASSES_DONT_MATCH';\r\n                    }\r\n                } else {\r\n                    $scope.statusError = 'FILL_ALL_FIELDS';\r\n                    isValid = false;\r\n                }\r\n                return isValid;\r\n            };\r\n            $scope.changePass = () => {\r\n                $scope.statusError = null;\r\n                if ($scope.validator()) {\r\n                    $scope.isProcessing = true;\r\n\r\n                    apiService.users.changePassword({\r\n                        newPassword: $scope.changePassModel.newPassword,\r\n                        oldPassword: $scope.changePassModel.oldPassword,\r\n                        userId: appStateManager.getUserId(),\r\n                    })\r\n                        .then((response) => {\r\n                            $mdDialog.hide()\r\n                        })\r\n                        .catch((err) => {\r\n                            $scope.statusError = err.data.Message || 'DEFAULT_ERROR';\r\n                            $scope.isProcessing = false;\r\n                        })\r\n                }\r\n            }\r\n        }]);","angular.module('paladinPopups')\r\n    .controller('confirmPopup',['$scope','$mdDialog','locals',function ($scope,$mdDialog,locals) {\r\n        $scope.title = locals.title;\r\n        $scope.message = locals.message;\r\n        $scope.isConfirm = locals.isConfirm;\r\n        if ($scope.isConfirm) {\r\n            $scope.yesButton = locals.yesButton;\r\n            $scope.noButton = locals.noButton;\r\n        } else {\r\n            $scope.okBtn = locals.okBtn || 'POPUP_OK';\r\n        }\r\n\r\n        $scope.closeDialog = (isConfirm) => {\r\n            if (isConfirm)\r\n                $mdDialog.hide();\r\n            else\r\n                $mdDialog.cancel();\r\n        }\r\n    }]);","angular.module('paladinPopups')\r\n.controller('emailVerificationPopup',['$scope', '$rootScope', '$mdDialog', 'enums','apiService','$translate','ptLog','appStateManager','locals',\r\n    function ($scope,$rootScope,$mdDialog,enums,apiService,$translate,ptLog,appStateManager,locals) {\r\n            $scope.welcome_message_dialog = $translate.instant(\"WELCOME\");\r\n            $scope.isProcessing = true;\r\n            $scope.isSuccess = true;\r\n            $scope.message = $translate.instant('PLEASE_WAIT');\r\n\r\n            $scope.hide = function() {\r\n                $mdDialog.hide();\r\n            };\r\n\r\n            $scope.cancel = function() {\r\n                $mdDialog.cancel();\r\n            };\r\n\r\n            $scope.answer = function(answer) {\r\n                $mdDialog.hide(answer);\r\n            };\r\n\r\n            $scope.retry = function () {\r\n                $scope.verifyUser();\r\n            };\r\n\r\n            $scope.verifyUser = () => {\r\n                $scope.message = $translate.instant('PLEASE_WAIT');\r\n                $scope.isProcessing = true;\r\n                $scope.isSuccess = true;\r\n                apiService.users.emailVerification({userId:locals.userId})\r\n                    .then((response) => {\r\n                        $scope.isProcessing = false;\r\n                        $scope.isSuccess = true;\r\n                        $scope.message = $translate.instant('REGISTRATION_SUCCESS');\r\n                        $rootScope.$emit(enums.busEvents.userLogin,response.Data);\r\n                    })\r\n                    .catch((err) => {\r\n                        $scope.isProcessing = false;\r\n                        $scope.isSuccess = false;\r\n                        $scope.message = $translate.instant('REGISTRATION_ERROR');\r\n                    })\r\n            };\r\n\r\n            $scope.verifyUser();\r\n    }]);","angular.module('paladinPopups')\r\n    .controller('forgotPasswordPopup',['$scope', '$rootScope', '$mdDialog', 'enums','apiService','$translate','ptLog','appStateManager',\r\n        function ($scope,$rootScope,$mdDialog,enums,apiService,$translate,ptLog,appStateManager) {\r\n            $scope.forgotPasswordMessage = '';\r\n            $scope.forgotpasswordStatus = '';\r\n            $scope.btnForgotPasswordStatus = 10;\r\n\r\n\r\n            $scope.forgotPassword = (email) => {\r\n                $scope.btnForgotPasswordStatus = 1;\r\n\r\n                apiService.users.forgotPassword({email,currentLang: appStateManager.getCurrentLang()})\r\n                    .then((response) => {\r\n                        $scope.btnForgotPasswordStatus = 10;\r\n                        $scope.forgotpasswordStatus = response.Status;\r\n                        $scope.forgotPasswordMessage = response.Message;\r\n                        ptLog.log(JSON.stringify(response))\r\n                    })\r\n                    .catch((err) => {\r\n                        $scope.btnForgotPasswordStatus = 10;\r\n                        $scope.forgotpasswordStatus = err.data.Status;\r\n                        $scope.forgotPasswordMessage = err.data.Message;\r\n                        ptLog.error(JSON.stringify(err))\r\n\r\n                    })\r\n            };\r\n\r\n            $scope.cancel = () => {\r\n                $mdDialog.cancel();\r\n            };\r\n        }]);","angular.module('paladinPopups')\r\n    .controller('idVerificationFailureHandlerPopup',\r\n        [\r\n            '$scope',\r\n            '$mdDialog',\r\n            '$translate',\r\n            'locals',\r\n        function (\r\n            $scope,\r\n            $mdDialog,\r\n            $translate,\r\n            locals\r\n        ) {\r\n            $scope.popupTitle = $translate.instant(\"ID_VERIFY_FAIL_POPUP_TITLE\");\r\n            $scope.isProcessing = false;\r\n            $scope.isSuccess = true;\r\n            $scope.message = locals.message; // already translated in userVerification controller\r\n\r\n            $scope.cancel = function() {\r\n                $mdDialog.cancel();\r\n            };\r\n\r\n            $scope.retry = function () {\r\n                // close popup and clear form data\r\n                locals.retryClb();\r\n                $scope.cancel();\r\n            };\r\n\r\n            $scope.sendToManualVerification = () => {\r\n                locals.sendToManualClb();\r\n                $scope.cancel();\r\n            };\r\n\r\n        }]);","'use strict';\r\nangular.module('paladinPopups')\r\n    .controller('inputFieldPopup',[\r\n        '$scope',\r\n        '$mdDialog',\r\n        'locals',\r\n        function ($scope,$mdDialog,locals) {\r\n            $scope.isInvalid = false;\r\n            $scope.message = locals.message;\r\n            $scope.title = locals.title;\r\n            $scope.inputRegexValidation = locals.inputRegexValidation;\r\n            $scope.validationErrorMessage = locals.validationErrorMessage;\r\n            $scope.inputField = { value: locals.value };\r\n            $scope.closeDialog = (isConfirm) => {\r\n                if (isConfirm) {\r\n                    if ($scope.inputRegexValidation && $scope.inputRegexValidation.test($scope.inputField.value))\r\n                        $mdDialog.hide($scope.inputField);\r\n                    else\r\n                        $scope.isInvalid = true;\r\n                } else {\r\n                    $mdDialog.cancel()\r\n                }\r\n            }\r\n        }]);\r\n\r\n","'use strict';\r\nangular.module('paladinPopups')\r\n    .controller('loaderPopup',[\r\n        '$rootScope',\r\n        '$scope',\r\n        function (\r\n            $rootScope,\r\n            $scope) {\r\n                $scope.loadingText = undefined\r\n        }\r\n    ]);","angular.module('paladinPopups')\r\n    .controller('loginSignUpPopup',\r\n        [\r\n            '$scope',\r\n            '$rootScope',\r\n            '$mdDialog',\r\n            'enums',\r\n            'apiService',\r\n            '$translate',\r\n            'ptLog',\r\n            'appStateManager',\r\n            'popupService',\r\n            '$timeout',\r\n            'locals',\r\n            'ptUtils',\r\n            'gtmService',\r\n            'referralsService',\r\n            function ($scope,\r\n                $rootScope,\r\n                $mdDialog,\r\n                enums,\r\n                apiService,\r\n                $translate,\r\n                ptLog,\r\n                appStateManager,\r\n                popupService,\r\n                $timeout,\r\n                locals,\r\n                ptUtils,\r\n                gtmService,\r\n                referralsService\r\n            ) {\r\n                $scope.selectedTab = locals.selectedTab;\r\n                $scope.currentLang = $translate.proposedLanguage() ? $translate.proposedLanguage() : $translate.preferredLanguage();\r\n                if ($rootScope.currentLang)\r\n                    $scope.currentLang = $rootScope.currentLang;\r\n                $scope.loginMessage = '';\r\n                $scope.loginFacebookMessage = '';\r\n                $scope.signupFacebookMessage = '';\r\n                $scope.signupFacebookStatus = '';\r\n                $scope.signupMessage = '';\r\n                $scope.signupStatus = '';\r\n                $scope.registerFacebookStatus = '';\r\n                $scope.btnStatus = 10;\r\n                $scope.isLoading = false;\r\n                $scope.isFacebookApiLoaded = $rootScope.facebookApiLoaded;\r\n\r\n                // if referralsService.referralCode is defined, it has alredy been validated\r\n                let referralData = referralsService.getReferralData();\r\n                let referralCode = referralData.code;\r\n\r\n                $scope.promoMessage = referralsService.getReferralData().code\r\n                    ? $translate.instant('PROMO_MESSAGE_REGISTER_REFERRED', {ambassadorUserName: referralData.userName})\r\n                    : window.globals.IS_PROMO ? $translate.instant('PROMO_MESSAGE_REGISTER_PROMO', {startDate: window.globals.START_DATE, endDate: window.globals.END_DATE, couponValue: window.globals.COUPON_VALUE}) \r\n                    : $translate.instant('PROMO_MESSAGE_REGISTER');\r\n\r\n\r\n                $scope.register = (username, password, email, location) => {\r\n                    const currentLang = appStateManager.currentLang === 'it' ? 'it-IT' : appStateManager.currentLang;\r\n                    if (!ptUtils.regexPatterns.minMaxLength(6).test(password)) {\r\n                        $scope.signupStatus = 'error';\r\n                        $scope.signupMessage = 'SIGN_UP_ERROR_PASSWORD_RESTRICTION';\r\n                        return\r\n                    }\r\n                    $scope.btnStatus = 1;\r\n\r\n                    apiService.users.signUp({\r\n                        email,\r\n                        username,\r\n                        password,\r\n                        location,\r\n                        currentLang,\r\n                        referralCode\r\n                    })\r\n                        .then((response) => {\r\n                            $scope.btnStatus = 10;\r\n                            $scope.signupMessage = response.Message;\r\n                            $scope.signupStatus = response.Status;\r\n                            popupService.showAlert('ACTIVATION_EMAIL_SENT_TITLE','ACTIVATION_EMAIL_SENT_DESCR');\r\n                            ptLog.log(JSON.stringify(response));\r\n                            gtmService.trackEvent('registration', 'click-on-sign-up-button', 'email signup');\r\n                        })\r\n                        .catch((err) => {\r\n                            $scope.btnStatus = 10;\r\n                            $scope.signupMessage = err.data.Message;\r\n                            $scope.signupStatus = err.data.Status;\r\n                            ptLog.error(JSON.stringify(err));\r\n                        })\r\n                };\r\n\r\n                $scope.login = (username,password) => {\r\n                    const currentLang = appStateManager.currentLang === 'it' ? 'it-IT' : appStateManager.currentLang;\r\n                    $scope.isLoading = true;\r\n                    let loginObj = {username,password,currentLang};\r\n                    if (ptUtils.regexPatterns.email.test(username)) {\r\n                        //    username is actually email address, edit loginObj\r\n                        delete loginObj.username;\r\n                        loginObj.email = username\r\n                    }\r\n                    apiService.users.login(loginObj)\r\n                        .then((response) => {\r\n                            $scope.isLoading = false;\r\n                            ptLog.log(JSON.stringify(response));\r\n                            $rootScope.$emit(enums.busEvents.userLogin,response.Data);\r\n                            $mdDialog.hide();\r\n                        })\r\n                        .catch((err) => {\r\n                            $scope.isLoading = false;\r\n                            $scope.loginStatus = err.data.Status;\r\n                            $scope.loginMessage = err.data.Message;\r\n                            ptLog.error(JSON.stringify(err))\r\n                        })\r\n                };\r\n\r\n                $scope.registerFacebook = () => {\r\n                    if($rootScope.facebookApiLoaded) {\r\n\r\n                        $scope.btnStatus = 1;\r\n\r\n                        apiService.users.signupFacebook({\r\n                            facebookName:$rootScope.facebook_user.name,\r\n                            email: $rootScope.facebook_user.email,\r\n                            address: $rootScope.facebook_user.address,\r\n                            currentLang:appStateManager.getCurrentLang(),\r\n                            facebookUserId: $rootScope.facebook_user.id,\r\n                            referralCode: referralCode\r\n                        })\r\n                            .then((response) => {\r\n                                $scope.btnStatus = 10;\r\n                                $scope.signupFacebookStatus = response.Status;\r\n                                ptLog.log(JSON.stringify(response));\r\n                                $rootScope.$emit(enums.busEvents.userLogin,response.Data);\r\n                                $mdDialog.hide();\r\n                                //only track event if its the first facebook signup and not login\r\n                                if (response.Data.FbSignup && response.Data.FbSignup == true) {\r\n                                    gtmService.trackEvent('registration', 'click-on-facebook-signup', 'facebook signup');\r\n                                }\r\n                            })\r\n                            .catch((err) => {\r\n                                $scope.btnStatus = 10;\r\n                                $scope.signupFacebookStatus = err.data.Status;\r\n                                $scope.signupFacebookMessage = err.data.Message;\r\n\r\n                            });\r\n                    } else {\r\n                        $scope.signupFacebookStatus = 'error';\r\n                        $scope.signupFacebookMessage =  $translate.instant('FACEBOOK_LOADING');\r\n                        $timeout( () => {\r\n                            $scope.registerFacebook();\r\n                        }, 2000 );\r\n                    }\r\n                };\r\n\r\n                $scope.cancel = () => {\r\n                    $mdDialog.hide();\r\n                };\r\n\r\n                $scope.showTabDialogForgotPassword = () => {\r\n                    popupService.showForgotPassword();\r\n                };\r\n\r\n                let deregs = [];\r\n\r\n                deregs.push($rootScope.$on(enums.busEvents.facebookApiLoad),(event,data) => {\r\n                    // $scope.isFacebookApiLoaded = data.isLoaded;\r\n                });\r\n\r\n                $scope.$on('$destroy', function() {\r\n                    while (deregs.length)\r\n                        deregs.pop()();\r\n                });\r\n\r\n                // $scope.\r\n            }]);\r\n","'use strict';\r\nangular.module('paladinPopups')\r\n    .controller('shareToSocialMediaPopup', [\r\n        '$scope',\r\n        '$mdDialog',\r\n        'locals',\r\n        'ptUtils',\r\n        function (\r\n            $scope,\r\n            $mdDialog,\r\n            locals,\r\n            ptUtils\r\n        ) {\r\n            $scope.referralLink = locals.referralLink;\r\n\r\n            $scope.isMobile = ptUtils.isMobile.any();\r\n\r\n            $scope.cancel = () => {\r\n                $mdDialog.cancel();\r\n            }\r\n        }]);\r\n","'use strict';\r\nangular.module('paladinPopups')\r\n    .controller('transactionStatusChangePopup',[\r\n        '$scope',\r\n        '$mdDialog',\r\n        'locals',\r\n        function ($scope,$mdDialog,locals) {\r\n            $scope.title = locals.title;\r\n            $scope.apiMethod = locals.apiMethod;\r\n            $scope.isLoading = true;\r\n\r\n            $scope.runApiMethod = () => {\r\n                $scope.apiMethod()\r\n                    .then((res) => {\r\n                        $mdDialog.hide(res)\r\n                    })\r\n                    .catch((err) => {\r\n                        $mdDialog.cancel(err)\r\n                    })\r\n            };\r\n\r\n            $scope.runApiMethod();\r\n    }]);\r\n","angular.module('paladinApp')\r\n    .controller('productDetailedController',[\r\n        '$rootScope',\r\n        '$scope',\r\n        'enums',\r\n        'apiService',\r\n        '$stateParams',\r\n        'toastService',\r\n        'appStateManager',\r\n        'dataService',\r\n        '$sce',\r\n        'NgMap',\r\n        'popupService',\r\n        '$timeout',\r\n        'moment',\r\n        'ngMeta',\r\n        '$translate',\r\n        'ptUtils',\r\n        '$anchorScroll',\r\n        '$location',\r\n        'referralsService',\r\n        function ($rootScope,\r\n                  $scope,\r\n                  enums,\r\n                  apiService,\r\n                  $stateParams,\r\n                  toastService,\r\n                  appStateManager,\r\n                  dataService,\r\n                  $sce,\r\n                  NgMap,\r\n                  popupService,\r\n                  $timeout,\r\n                  moment,\r\n                  ngMeta,\r\n                  $translate,\r\n                  ptUtils,\r\n                  $anchorScroll,\r\n                  $location,\r\n                  referralsService) {\r\n            $scope.isLoading = false;\r\n            if ($stateParams.productNameAndId) {\r\n                $scope.productId = $stateParams.productNameAndId.split('-') [$stateParams.productNameAndId.split('-').length - 1];\r\n            }\r\n            $scope.category = null;\r\n            $scope.subCategory = null;\r\n            $scope.rentPickersIds = {\r\n                mobile: 'rental-request-picker-mobile',\r\n                desktop: 'rental-request-picker-desktop',\r\n            };\r\n            $scope.productAddress = {\r\n                address: undefined,\r\n                lat: undefined,\r\n                lng: undefined,\r\n\r\n            };\r\n            $scope.productBookingDetails = null;\r\n\r\n            $scope.isLoggedInUser = () => {\r\n                return appStateManager.getUserId();\r\n            }\r\n            $scope.updateMetaTags = () => {\r\n                if($scope.product){\r\n\r\n                    ngMeta.setTitle($scope.getPageTitle());\r\n                    ngMeta.setTag('description',$scope.getPageTitle());\r\n                    ngMeta.setTag('imagePath', window.globals.PRODUCT_IMAGE_URL + $scope.product.ProductImage_Image1);\r\n\r\n                }\r\n            }\r\n\r\n            $scope.getPageTitle= () => {\r\n                var title = $translate.instant('RENT')+' ';\r\n\r\n                // if($scope.category && !$scope.subCategory) {\r\n                //     title +=$scope.category.Category_Name + ' ';\r\n                // }else if($scope.subCategory){\r\n                //     title += $scope.subCategory.SubCategory_Name + ' ';\r\n                // }\r\n\r\n                if($scope.product && $scope.product.Product_Title){\r\n                    title += $scope.product.Product_Title +'  ';\r\n                }\r\n\r\n                // if(scope.productLocation){\r\n                //     title += $translate.instant('IN')+' '+scope.getCity(scope.productLocation);\r\n                // }\r\n\r\n                return title + \"| Paladintrue\";\r\n            }\r\n\r\n            $scope.fetchDetailedProduct = () => {\r\n                $scope.isLoading = true;\r\n                apiService.pages.getProductDetailData($scope.productId)\r\n                    .then((response) => {\r\n                        $scope.product = response.Data;\r\n                        $scope.isMyProduct = $scope.product.Lender_UserId == appStateManager.getUserId();\r\n                        $scope.product.Product_Description = $sce.trustAsHtml($scope.product.Product_Description);\r\n\r\n\r\n                        ptUtils.extractAndGeoLocateAddressFromObjectForFieldNames({\r\n                            object: $scope.product,\r\n                            addressFieldName: 'Product_Address',\r\n                            latFieldName: 'Product_Latitude',\r\n                            lngFieldName: 'Product_Longitude'\r\n                        })\r\n                            .then((location) => {\r\n                                $scope.productAddress = location;\r\n                            });\r\n\r\n                        if (appStateManager.getUserId()) {\r\n                            $scope.productBookingDetails = $scope.product.UserData_ProductBooking;\r\n                        }    \r\n                        \r\n                        $scope.getCategory();\r\n                        $scope.updateMetaTags();\r\n                        $scope.isLoading = false;\r\n                    })\r\n                    .catch((err) => {\r\n                        $scope.isLoading = false;\r\n                        toastService.simpleToast(JSON.stringify(err));\r\n                        console.error(err)\r\n                    })\r\n            };\r\n       \r\n\r\n            $scope.getCategory = () => {\r\n                if (!appStateManager.categoriesDict) {\r\n                    return dataService.getCategories()\r\n                }\r\n                if ($scope.product) {\r\n                    $scope.category = appStateManager.categoriesDict[$scope.product.Product_CategoryId];\r\n                    if ($scope.category && $scope.product.Product_SubCategoryId > 0) {\r\n                        const subCat = $scope.category.Category_SubCatrgories.find((subCat) => subCat.SubCategory_Id == $scope.product.Product_SubCategoryId);\r\n                        if (subCat)\r\n                            $scope.subCategory = subCat;\r\n                    }\r\n                }\r\n            };\r\n\r\n            $scope.requestRentalDates = () => {\r\n                popupService.showDateRangePicker($scope.productBookingDetails,$scope.product)\r\n                    .then((data) => {\r\n                        const startDate = moment(data.dateStart);\r\n                        const endDate = moment(data.dateEnd);\r\n                        const days = ptUtils.getRentalPeriodInDays({\r\n                            startRentDate: data.dateStart,\r\n                            endRentDate: data.dateEnd\r\n                        });\r\n                        if ($scope.product.MinRentalPeriod > 0 && days < $scope.product.MinRentalPeriod) {\r\n                             return popupService.showAlert('OOPS',$translate.instant('INVALID_MIN_RENTAL_PERIOD', {days: $scope.product.MinRentalPeriod}))\r\n                                .finally(() => {\r\n                                    $scope.requestRentalDates();\r\n                                \r\n                            })\r\n                        }\r\n                               \r\n                        $scope.onRequestRent({\r\n                            startDate,\r\n                            endDate\r\n                        });\r\n                    })\r\n            };\r\n\r\n            $scope.onRequestRent = function ({startDate,endDate,componentId}) {\r\n                if (startDate && endDate) {\r\n                    $rootScope.$emit(enums.busNavigation.paymentDetailed,{\r\n                        startDate,\r\n                        endDate,\r\n                        productId: $scope.productId,\r\n                    })\r\n                }\r\n                // toastService.simpleToast(`Rental request not implemented yet, startDate: ${moment(startDate).format('DD/MM/YY')} endDate ${moment(endDate).format('DD/MM/YY')}`);\r\n            };\r\n\r\n            $scope.onDatesUpdated = ({startDate,endDate,componentId}) => {\r\n                const compToUpdate = componentId == $scope.rentPickersIds.desktop ? $scope.rentPickersIds.mobile : $scope.rentPickersIds.desktop\r\n                $rootScope.$emit(enums.busEvents.rentalRequestPickerUpdateDates,\r\n                    {startDate,endDate, componentId : compToUpdate })\r\n            };\r\n\r\n            $scope.browseCategory = (cat, subCat) => {\r\n                $rootScope.$emit(enums.busNavigation.browseCategory,{categoryName: cat,subCategoryName: subCat});\r\n            } ;\r\n\r\n            $scope.getCategoriesUrl = (cat, subCat) => {\r\n\r\n                return ptUtils.getCategoriesUrl(cat, subCat, $scope.product.Product_TryAndBuy, $translate.use());\r\n            }\r\n\r\n            $scope.onStartEndDateSelected = ({startDate, endDate}) => {};\r\n\r\n\r\n            let deregs = [];\r\n            deregs.push($rootScope.$on(enums.busEvents.categoriesUpdate,(event,data) => {\r\n                $scope.getCategory();\r\n            }));\r\n\r\n            // deregs.push($scope.$on('$viewContentLoaded', function() {\r\n            // }));\r\n   \r\n            $scope.fetchDetailedProduct();\r\n            \r\n            $scope.promoTimeout = $timeout( () => {\r\n                if(!ptUtils.isCrawler()){\r\n                    if (appStateManager.user == null && !angular.element(document.body).hasClass('md-dialog-is-showing')) {\r\n                        popupService.showLoginSignupPopup(true);\r\n                    }\r\n                }\r\n            }, referralsService.referralCode ? 0 : window.globals.PROMO_SIGNUP_TIMER);\r\n            \r\n            $scope.$on('$destroy',() => {\r\n                while (deregs.length) {\r\n                    deregs.pop()()\r\n                }\r\n                $timeout.cancel($scope.promoTimeout);\r\n            });\r\n            \r\n            //scroll to top (workaround)\r\n            var oldAnchor = $location.hash();\r\n            $location.hash(\"main-product-image\");\r\n            $anchorScroll();\r\n            $location.hash(oldAnchor);\r\n        }]);","// angular.module('productPreview', ['resources.products', 'resources.filters','directives.header','directives.footer','resources.constants',\r\n//     'uiGmapgoogle-maps','ui.bootstrap','ngMeta','ngMap','pascalprecht.translate','angularReverseGeocode'])\r\n//\r\n//     .config(['$routeProvider', function ($routeProvider,GoogleMapApi) {\r\n//\r\n//         $routeProvider.when('/:languageCode/product/:productId', {\r\n//             templateUrl:'/script/productPreview/productPreview.tpl.html',\r\n//             reloadOnSearch: false,\r\n//             controller:'PreviewController'\r\n//         }).when('/product/:productId', {\r\n//             templateUrl:'/script/productPreview/productPreview.tpl.html',\r\n//             reloadOnSearch: false,\r\n//             controller:'PreviewController'\r\n//         });\r\n//\r\n//\r\n//     }])\r\n\r\nangular.module('paladinApp')\r\n    .controller('PreviewController', ['$scope','$sce','$window','$rootScope','$translate','$stateParams', '$location',\r\n        'Products','ngMeta','$filter','$anchorScroll','ZendeskWidget','Filters','enums',\r\n        function ($scope,$sce,$window,$rootScope,$translate,$stateParams, $location,Products,ngMeta,NgMap, $anchorScroll,ZendeskWidget,Filters,enums) {\r\n\r\n            var scope = $scope;\r\n\r\n            scope.getCurrentLanguageCode = function(){\r\n                return $translate.proposedLanguage()?$translate.proposedLanguage(): $translate.preferredLanguage();\r\n            };\r\n            //Lender rating\r\n            scope.rating = 0;\r\n            scope.ratingRounded = 0;\r\n            //Profile default image path\r\n            scope.profileDefaultImage=\"../../assets/profile.png\";\r\n\r\n\r\n            //console.log('ROOT SCOPE : ')\r\n            //console.log($routeParams);\r\n\r\n            var product_id = $stateParams.productId.split('-')[ $stateParams.productId.split('-').length-1 ];\r\n            var languageCode = $stateParams.languageCode ? $stateParams.languageCode : scope.getCurrentLanguageCode();\r\n            updateHreflang();\r\n            //updating language code globally if user comes directly to this page\r\n            $translate.use(languageCode);\r\n            $rootScope.lang = languageCode;\r\n            ZendeskWidget.setLocale(languageCode);\r\n            $rootScope.$broadcast('updateLanguage',languageCode);\r\n\r\n            var searchedLocation = $rootScope.searchedLocation;// $location.search().searchedLocation;\r\n\r\n            scope.allCategory = $translate.instant('ACTG');\r\n            if(scope.allCategory == scope.selectedCategoryName)scope.selectedCategoryName=null;\r\n\r\n            //console.log( scope.selectedCategoryName)\r\n            //console.log(scope.allCategory)\r\n            //console.log(scope.allCategory == scope.selectedCategoryName);\r\n\r\n            scope.selectedSubCategoryName =$rootScope.subcategory;//$location.search().subcategory?$location.search().subcategory.replace(/-/g, ' '):null;\r\n\r\n            scope.productDetail={};\r\n            scope.productImageBaseUrl = window.globals.PRODUCT_IMAGE_URL;\r\n            scope.userImageBaseUrl = window.globals.PROFILE_IMAGE_URL;\r\n            scope.rentNowUrl = window.globals.RENT_NOW_URL;\r\n            scope.h1 = '';\r\n            scope.h2 = '';\r\n            scope.productAddress='';\r\n            scope.sample =1;\r\n\r\n            function updateBreadcrumb(){\r\n                if (scope.productDetail.Product_CategoryId) {\r\n                    scope.selectedCategoryName = Filters.getCategoryById(scope.productDetail.Product_CategoryId, languageCode).Category_Name;\r\n                }\r\n\r\n                if (scope.productDetail.Product_SubCategoryId) {\r\n                    scope.selectedSubCategoryName = Filters.getSubcategoryById(scope.productDetail.Product_SubCategoryId, languageCode).SubCategory_Name;\r\n                }\r\n            }\r\n\r\n\r\n            scope.fetchProductAddress = function(){\r\n                var data = {};\r\n\r\n                data.location = {};\r\n                //console.log(scope.productDetail.Product_Latitude);\r\n                data.location.lat = Number(scope.productDetail.Product_Latitude);\r\n                data.location.lng = Number(scope.productDetail.Product_Longitude);\r\n\r\n                geocoder = new google.maps.Geocoder();\r\n                var _scope = scope;\r\n                geocoder.geocode(data, function(results, status) {\r\n                    if(results && results.length > 0){\r\n                        scope.productLocation = results[0];\r\n                        scope.setProductAddress(results[0]);\r\n                    }\r\n                });\r\n            }\r\n\r\n            scope.setProductAddress= function(loc){\r\n                $scope.productDetail.productAddress= loc.formatted_address;\r\n                scope.sample = 2;\r\n                scope.productLocation = loc;\r\n                //console.log('SETTING ADD : '+$scope.productDetail.productAddress);\r\n                scope.updateMetaTags();\r\n                $scope.$apply();\r\n            }\r\n\r\n            scope.getCity = function(result){\r\n                var country='',state='',city='';\r\n                for(var i=0 ;i<result.address_components.length;i++){\r\n                    var types = result.address_components[i].types;\r\n                    for(var j=0;j<types.length;j++){\r\n                        var type = types[j];\r\n                        if(type=='country' || type==\"political\"){\r\n                            country = result.address_components[i].long_name;\r\n                            break;\r\n                        }else if(type=='administrative_area_level_1'){\r\n                            state = result.address_components[i].long_name;\r\n                            break;\r\n                        }else if((type=='administrative_area_level_2' && !city) || type=='locality'){\r\n                            city = result.address_components[i].long_name;\r\n                            break;\r\n                        }\r\n\r\n                    }\r\n                }\r\n                return city;\r\n\r\n                //var shortAddress = (city ? city+',':'' )+(state ? state+',':'' )+(country ? country:'' );\r\n                //return shortAddress;\r\n            }\r\n\r\n            scope.$on('languageChanged', function(event,data){\r\n                $location.update_path($location.path().replace('/' + languageCode+'/','/'+data+'/'), true);\r\n                languageCode = data;\r\n                scope.refreshProductDetail();\r\n                ZendeskWidget.setLocale(languageCode);\r\n                updateBreadcrumb();\r\n            });\r\n            scope.getPageTitle= function(){\r\n                var title = $translate.instant('RENT')+' ';\r\n\r\n                //console.log('meta tag :')\r\n                //console.log(scope.selectedCategoryName);\r\n\r\n                if(scope.selectedCategoryName && !scope.selectedSubCategoryName){\r\n                    title +=scope.selectedCategoryName+ ' ';\r\n                }else if(scope.selectedSubCategoryName){\r\n                    title += scope.selectedSubCategoryName + ' ';\r\n                }\r\n\r\n                if(scope.productDetail && scope.productDetail.Product_Title){\r\n                    title += scope.productDetail.Product_Title +'  ';\r\n                }\r\n\r\n                if(scope.productLocation){\r\n                    title += $translate.instant('IN')+' '+scope.getCity(scope.productLocation);\r\n                }\r\n\r\n                return title;\r\n            }\r\n\r\n            scope.getMetaTags= function(){\r\n                var tag = $translate.instant('RENT')+' ';\r\n\r\n                if(scope.selectedCategoryName){\r\n                    tag += scope.selectedCategoryName+ ' ';\r\n                }\r\n                if(scope.selectedSubCategoryName){\r\n                    tag += scope.selectedSubCategoryName + ' ';\r\n                }\r\n\r\n                if(scope.productDetail && scope.productDetail.Product_Title){\r\n                    tag += scope.productDetail.Product_Title +'  ';\r\n                }\r\n\r\n\r\n                if(scope.productLocation){\r\n                    tag += $translate.instant('IN')+' '+scope.getCity(scope.productLocation);\r\n                }\r\n                return tag;\r\n            }\r\n\r\n            scope.updateH1 = function(){\r\n                scope.h1 = $translate.instant('RENT')+' ';\r\n\r\n                /*\r\n                if(scope.selectedCategoryName && !scope.selectedSubCategoryName){\r\n                  scope.h1 += capitalizeFilter(scope.selectedCategoryName)+ ' ';\r\n                }else if(scope.selectedSubCategoryName){\r\n                  scope.h1 += capitalizeFilter(scope.selectedSubCategoryName) + ' ';\r\n                }\r\n                */\r\n\r\n                if(scope.productDetail && scope.productDetail.Product_Title){\r\n                    scope.h1 +='<span class=\"greenText\">'+scope.productDetail.Product_Title +'</span> ';\r\n                }\r\n\r\n\r\n                if(scope.productLocation){\r\n                    scope.h1 += $translate.instant('IN')+' '+scope.getCity(scope.productLocation);\r\n                }\r\n\r\n                //console.log('setting h1 = '+scope.h1)\r\n                scope.h1 =$sce.trustAsHtml(scope.h1);\r\n            }\r\n\r\n            scope.updateH2 = function(){\r\n                scope.h2 = scope.getPageTitle();\r\n            }\r\n\r\n            scope.updateMetaTags= function(){\r\n                if(scope.productDetail){\r\n\r\n                    ngMeta.setTitle(scope.getPageTitle());\r\n                    ngMeta.setTag('description',scope.getMetaTags());\r\n                    ngMeta.setTag('imagePath', window.globals.PRODUCT_IMAGE_URL + scope.productDetail.ProductImage_Image1);\r\n\r\n                    scope.updateH1();\r\n\r\n                    scrollToH1();\r\n                    //scope.updateH2();\r\n                }\r\n            }\r\n            scope.refreshProductDetail = function(){\r\n                //console.log('PRODUCT ID IS : '+product_id);\r\n\r\n                if(product_id){\r\n                    Products.getDetail(product_id,languageCode,function(response){\r\n                        scope.productDetail = response.data.Data;\r\n                        scope.rating=scope.productDetail.User_ReviewAsLender>0\r\n                            ? parseFloat(scope.productDetail.User_ReviewAsLender/2).toFixed(1)\r\n                            : 0;\r\n                        scope.ratingRounded = Math.round(scope.rating);\r\n                        scope.fetchProductAddress();\r\n\r\n                        if (!$rootScope.categoriesMap) {\r\n                            $rootScope.categoriesMap = new Map();\r\n                            Filters.get('it', function(response){\r\n                                $rootScope.categoriesMap.set('it', response.data.Data);\r\n                                Filters.get('en', function(response){\r\n                                    $rootScope.categoriesMap.set('en', response.data.Data);\r\n                                    Filters.get('de', function(response){\r\n                                        $rootScope.categoriesMap.set('de', response.data.Data);\r\n                                        updateBreadcrumb();\r\n                                        scope.updateMetaTags();\r\n                                    });\r\n\r\n                                });\r\n\r\n                            });\r\n                        } else {\r\n                            updateBreadcrumb();\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n\r\n            scope.goToAllCategory = function(){\r\n                if ($rootScope.filter) {\r\n                    $rootScope.filter.category.selectedCategoryId = null;\r\n                    $rootScope.filter.category.selectedCategoryDesc =null;\r\n                    $rootScope.filter.category.selectedCategoryName =$translate.instant('ACTG');\r\n                    $rootScope.filter.category.selectedCategoryImagePath=null;\r\n                    $rootScope.filter.category.selectedCategoryBannerImage = enums.categoriesBannersPaths.all;\r\n\r\n                    $rootScope.filter.category.selectedSubCategoryId = null;\r\n                    $rootScope.filter.category.selectedSubCategoryDesc =null;\r\n                    $rootScope.filter.category.selectedSubCategoryName =null;\r\n                    $rootScope.filter.category.selectedSubCategoryImagePath = null;\r\n                    $rootScope.filter.category.selectedSubCategoryBannerImage = null;\r\n\r\n                    $rootScope.filter.currentPage = 1;\r\n                }\r\n\r\n                $location.search('key', null)\r\n                $location.url('/'+languageCode+'/'+$translate.instant('ACTG').replace(/ /g,'-'));\r\n            }\r\n\r\n\r\n            scope.goToCategory = function(){\r\n\r\n                if ($rootScope.filter) {\r\n                    var category = Filters.getCategoryById(scope.productDetail.Product_CategoryId,languageCode);\r\n                    $rootScope.filter.category.selectedCategoryId = scope.productDetail.Product_CategoryId;\r\n                    $rootScope.filter.category.selectedCategoryDesc =$sce.trustAsHtml(category.Category_Description);\r\n                    $rootScope.filter.category.selectedCategoryName =category.Category_Name;\r\n                    $rootScope.filter.category.selectedCategoryImagePath=category.Category_ImagePath;\r\n                    $rootScope.filter.category.selectedCategoryBannerImage = category.Category_BannerPath;\r\n\r\n                    $rootScope.filter.category.selectedSubCategoryId = null;\r\n                    $rootScope.filter.category.selectedSubCategoryDesc =null;\r\n                    $rootScope.filter.category.selectedSubCategoryName =null;\r\n                    $rootScope.filter.category.selectedSubCategoryImagePath = null;\r\n                    $rootScope.filter.category.selectedSubCategoryBannerImage = null;\r\n\r\n                    $rootScope.filter.currentPage = 1;\r\n                }\r\n\r\n                $location.search('key', null);\r\n                //$location.url('/'+languageCode+'/'+scope.selectedCategoryName);\r\n                $location.url('/'+languageCode+'/'+scope.selectedCategoryName.replace(/ /g, '-'));\r\n\r\n            }\r\n\r\n            scope.goToSubCategory = function(){\r\n                if ($rootScope.filter) {\r\n                    var category = Filters.getCategoryById(scope.productDetail.Product_CategoryId,languageCode);\r\n                    $rootScope.filter.category.selectedCategoryId = scope.productDetail.Product_CategoryId;\r\n                    $rootScope.filter.category.selectedCategoryDesc =$sce.trustAsHtml(category.Category_Description);\r\n                    $rootScope.filter.category.selectedCategoryName =category.Category_Name;\r\n                    $rootScope.filter.category.selectedCategoryImagePath=category.Category_ImagePath;\r\n                    $rootScope.filter.category.selectedCategoryBannerImage = category.Category_BannerPath;\r\n\r\n                    var subCategory = Filters.getSubcategoryById(scope.productDetail.Product_SubCategoryId, languageCode);\r\n                    $rootScope.filter.category.selectedSubCategoryId = scope.productDetail.Product_SubCategoryId;\r\n                    $rootScope.filter.category.selectedSubCategoryDesc =$sce.trustAsHtml(subCategory.SubCategory_Description);\r\n                    $rootScope.filter.category.selectedSubCategoryName =subCategory.SubCategory_Name;\r\n                    $rootScope.filter.category.selectedSubCategoryImagePath = subCategory.SubCategory_ImagePath;\r\n                    $rootScope.filter.category.selectedSubCategoryBannerImage = subCategory.SubCategory_BannerPath;\r\n\r\n                    $rootScope.filter.currentPage = 1;\r\n                }\r\n                $location.search('key', null);\r\n                $location.url('/'+languageCode+'/'+scope.selectedCategoryName.replace(/ /g, '-')+'/'+scope.selectedSubCategoryName.replace(/ /g, '-'));\r\n                //$window.history.back();\r\n            };\r\n\r\n            function updateHreflang() {\r\n                ngMeta.setTag('currentUrl_en', $location.absUrl().replace('/' + languageCode+'/','/en/'));\r\n                ngMeta.setTag('currentUrl_it', $location.absUrl().replace('/' + languageCode+'/','/it/'));\r\n                ngMeta.setTag('currentUrl_de', $location.absUrl().replace('/' + languageCode+'/','/de/'));\r\n            }\r\n\r\n            scope.go = function ( path ) {\r\n                $location.$$search = {};\r\n                $location.path( path );\r\n            };\r\n\r\n            scope.rentNow = function(){\r\n                var url  = scope.rentNowUrl.replace('{0}',languageCode).replace('{1}',scope.productDetail.Product_Id);\r\n\r\n                $window.location.href =  url ;\r\n            };\r\n\r\n            scope.rentNowDesktop = function(){\r\n                $window.location.href = $translate.instant('URL_DOWNLOAD');\r\n            };\r\n\r\n            var scrollToH1 = function() {\r\n                //scroll preview page up at startup\r\n                var oldAnchor = $location.hash();\r\n                $location.hash(\"breadcrumb-pr-detail\");\r\n                $anchorScroll();\r\n                $location.hash(oldAnchor);\r\n            };\r\n\r\n            scope.refreshProductDetail();\r\n            /*\r\n               $scope.$on('$routeChangeSuccess', function () {\r\n                scrollToH1();\r\n              });\r\n              */\r\n        }]);\r\n\r\n","angular.module('paladinApp')\r\n    .controller('productReviewController', [\r\n        '$scope',\r\n        '$state',\r\n        '$location',\r\n        '$rootScope',\r\n        'appStateManager',\r\n        'apiService',\r\n        'productReviewService',\r\n        'toastService',\r\n        '$translate',\r\n        function (\r\n            $scope,\r\n            $state,\r\n            $location,\r\n            $rootScope,\r\n            appStateManager,\r\n            apiService,\r\n            productReviewService,\r\n            toastService,\r\n            $translate\r\n        ) {\r\n            let self = this;\r\n            // normally done through \"controllerAs: 'vm'\" property but didn't want to\r\n            // break the code style outside this file;\r\n            // there's a lot to gain from proper namespacing...\r\n            let vm = {};\r\n\r\n            vm.review = {\r\n                text: null,\r\n                rating: null\r\n            };\r\n\r\n            vm.booking = productReviewService.getBookingToReview();\r\n\r\n            vm.isLoading = false;\r\n            vm.onRating = (rating) => {\r\n                vm.review.rating = rating;\r\n            }\r\n            vm.submitReview = (transactionId = null) => {\r\n                // validate\r\n                if (!vm.booking) {\r\n                    \r\n                    console.error('Invalid booking: ', vm.booking)\r\n                    return;\r\n                } else if (vm.review.stars === undefined) {\r\n                    toastService.simpleToast($translate.instant('REVIEW_VALIDATION_NO_STARS')); \r\n                    return;\r\n                } else if (vm.review.text === null ) {\r\n                    toastService.simpleToast($translate.instant('REVIEW_VALIDATION_NO_COMMENT'));\r\n                    return;\r\n                }\r\n\r\n                // keep transactionId out of prereqData in case this controller\r\n                // needs to be reused in other context\r\n                let params = {\r\n                    Review_Precnt: vm.review.stars * 2,\r\n                    Review_ProductId: vm.booking.Product_Id,\r\n                    Review_UserId: vm.booking.Borrower_Id,\r\n                    LanguageCode: appStateManager.getCurrentLang(),\r\n                    ReviewDetail_Comment: vm.review.text || '',\r\n                    Review_BookingId: vm.booking.Booking_Id\r\n                };\r\n\r\n                apiService.reviews.submitTransactionReview(params)\r\n                    .then((result) => {\r\n                            console.log('submit review result ', result)\r\n                            // show a toast message\r\n                            toastService.simpleToast($translate.instant('REVIEW_ADDED_SUCCESS'));\r\n                        \r\n                        },\r\n                        (err) => {\r\n                            toastService.simpleToast($translate.instant('REVIEW_ADDED_FAILED'));\r\n                        \r\n                            console.error(err);\r\n                        });\r\n\r\n\r\n                $scope.vm.closeProductReview();\r\n            };\r\n\r\n            vm.closeProductReview = () => {\r\n                // done through service to make it easily accessible\r\n                productReviewService.leaveProductReviewPage();\r\n            };\r\n\r\n            // booking already has a rating\r\n            // only the borrower ca review the product\r\n/*\r\n            if (vm.booking.Booking_ReviewStatus\r\n                || vm.booking.Borrower_Id !== appStateManager.getUserId()) {\r\n                // maybe display a toast message or some other error handling here\r\n                vm.closeProductReview();\r\n            }\r\n\r\n*/\r\n            /** it's always a good idea to namespace properties in $scope */\r\n            $scope.vm = vm;\r\n        }\r\n    ]);\r\n","'use strict';\r\n\r\nconst mockDummyData = {\r\n    \"Status\": \"success\",\r\n    \"Data\": {\r\n        \"User_Booking_Borrower\": [\r\n            {\r\n                \"Product_Id\": 11425,\r\n                \"Booking_Id\": 736,\r\n                \"Borrower_Id\": 11736,\r\n                \"Borrower_Name\": \"milalou2 milalou2-last\",\r\n                \"Borrower_ReviewScore\": 0,\r\n                \"Borrower_ReviewCount\": 0,\r\n                \"Borrower_QBId\": null,\r\n                \"Lender_Id\": 11608,\r\n                \"Lender_Name\": \"Marc Ferrer\",\r\n                \"Lender_StripeAccount\": \"acct_1AJTHYAN9BUpHCOJ\",\r\n                \"Lender_ReviewScore\": 0,\r\n                \"Lender_ReviewCount\": 0,\r\n                \"Lender_QBId\": null,\r\n                \"Booking_PaidToLender\": false,\r\n                \"StartDate\": \"4/26/2018\",\r\n                \"EndDate\": \"4/27/2018\",\r\n                \"FullStartDate\": \"2018-04-26T00:00:00Z\",\r\n                \"FullEndDate\": \"2018-04-27T00:00:00Z\",\r\n                \"Lender_Image\": \"qSzR0g6M0HFiwOZaTm42D5a4stKjQj\",\r\n                \"Borrower_Image\": \"JoyyjhIuu7zFjvau4s6HT5a4stKjQj\",\r\n                \"Chat_Id\": 0,\r\n                \"NoOfdays\": 2,\r\n                \"Product_Title\": \"retina screen\",\r\n                \"Lender_BillingAddress\": null,\r\n                \"Product_Image\": \"lFYnTHaa7yI4kboCpsrT5a4stKjQj\",\r\n                \"Product_PricePerDay\": \"5\",\r\n                \"BorrowerCusotmerId\": \"\",\r\n                \"RentAmount\": 10,\r\n                \"Discount\": 0,\r\n                \"AmountCharge\": 10,\r\n                \"Status\": \"timeout\",\r\n                \"Booking_ReadId\": 2,\r\n                \"Delivery_Latitude\": \"\",\r\n                \"Delivery_Longitude\": \"\",\r\n                \"Delivery_Address\": \"\",\r\n                \"Booking_PickupProduct\": false,\r\n                \"BookingStatus\": [\r\n                    {\r\n                        \"StatusName\": \"requested\",\r\n                        \"CreatedDate\": \"10/04/2018\",\r\n                        \"Status_TrackId\": 1,\r\n                        \"CreatedTime\": \"05:46\"\r\n                    },\r\n                    {\r\n                        \"StatusName\": \"verified\",\r\n                        \"CreatedDate\": \"10/04/2018\",\r\n                        \"Status_TrackId\": 3,\r\n                        \"CreatedTime\": \"05:46\"\r\n                    },\r\n                    {\r\n                        \"StatusName\": \"timeout\",\r\n                        \"CreatedDate\": \"10/04/2018\",\r\n                        \"Status_TrackId\": 4,\r\n                        \"CreatedTime\": \"06:00\"\r\n                    }\r\n                ],\r\n                \"Booking_ReviewStatus\": null,\r\n                \"DeliveryAndPickupDetail\": null\r\n            },\r\n            {\r\n                \"Product_Id\": 11510,\r\n                \"Booking_Id\": 730,\r\n                \"Borrower_Id\": 11736,\r\n                \"Borrower_Name\": \"milalou2 milalou2-last\",\r\n                \"Borrower_ReviewScore\": 0,\r\n                \"Borrower_ReviewCount\": 0,\r\n                \"Borrower_QBId\": null,\r\n                \"Lender_Id\": 11624,\r\n                \"Lender_Name\": \"Muhammad Ali\",\r\n                \"Lender_StripeAccount\": \"acct_1CCQcZLXqrrI6AjN\",\r\n                \"Lender_ReviewScore\": 0,\r\n                \"Lender_ReviewCount\": 0,\r\n                \"Lender_QBId\": null,\r\n                \"Booking_PaidToLender\": false,\r\n                \"StartDate\": \"4/19/2018\",\r\n                \"EndDate\": \"4/21/2018\",\r\n                \"FullStartDate\": \"2018-04-19T00:00:00Z\",\r\n                \"FullEndDate\": \"2018-04-21T00:00:00Z\",\r\n                \"Lender_Image\": \"yTj58mdeStrfU5QoJBmtD5a4stKjQj\",\r\n                \"Borrower_Image\": \"JoyyjhIuu7zFjvau4s6HT5a4stKjQj\",\r\n                \"Chat_Id\": 0,\r\n                \"NoOfdays\": 3,\r\n                \"Product_Title\": \"Plastic bottle\",\r\n                \"Lender_BillingAddress\": null,\r\n                \"Product_Image\": \"Iti4Fsg9gJl2db5XWKAseD5a4stKjQj\",\r\n                \"Product_PricePerDay\": \"14\",\r\n                \"BorrowerCusotmerId\": \"\",\r\n                \"RentAmount\": 7,\r\n                \"Discount\": 0,\r\n                \"AmountCharge\": 7,\r\n                \"Status\": \"timeout\",\r\n                \"Booking_ReadId\": 2,\r\n                \"Delivery_Latitude\": \"\",\r\n                \"Delivery_Longitude\": \"\",\r\n                \"Delivery_Address\": \"\",\r\n                \"Booking_PickupProduct\": false,\r\n                \"BookingStatus\": [\r\n                    {\r\n                        \"StatusName\": \"requested\",\r\n                        \"CreatedDate\": \"09/04/2018\",\r\n                        \"Status_TrackId\": 1,\r\n                        \"CreatedTime\": \"20:16\"\r\n                    },\r\n                    {\r\n                        \"StatusName\": \"verified\",\r\n                        \"CreatedDate\": \"09/04/2018\",\r\n                        \"Status_TrackId\": 3,\r\n                        \"CreatedTime\": \"20:16\"\r\n                    },\r\n                    {\r\n                        \"StatusName\": \"timeout\",\r\n                        \"CreatedDate\": \"09/04/2018\",\r\n                        \"Status_TrackId\": 4,\r\n                        \"CreatedTime\": \"20:30\"\r\n                    }\r\n                ],\r\n                \"Booking_ReviewStatus\": null,\r\n                \"DeliveryAndPickupDetail\": null\r\n            },\r\n            {\r\n                \"Product_Id\": 11535,\r\n                \"Booking_Id\": 689,\r\n                \"Borrower_Id\": 11736,\r\n                \"Borrower_Name\": \"milalou2 milalou2-last\",\r\n                \"Borrower_ReviewScore\": 0,\r\n                \"Borrower_ReviewCount\": 0,\r\n                \"Borrower_QBId\": null,\r\n                \"Lender_Id\": 11735,\r\n                \"Lender_Name\": \"milalou4\",\r\n                \"Lender_StripeAccount\": \"\",\r\n                \"Lender_ReviewScore\": 0,\r\n                \"Lender_ReviewCount\": 0,\r\n                \"Lender_QBId\": null,\r\n                \"Booking_PaidToLender\": false,\r\n                \"StartDate\": \"4/19/2018\",\r\n                \"EndDate\": \"4/20/2018\",\r\n                \"FullStartDate\": \"2018-04-19T00:00:00Z\",\r\n                \"FullEndDate\": \"2018-04-20T00:00:00Z\",\r\n                \"Lender_Image\": \"NXxMyDfZn2ZHu0dUvLJeT5a4stKjQj\",\r\n                \"Borrower_Image\": \"JoyyjhIuu7zFjvau4s6HT5a4stKjQj\",\r\n                \"Chat_Id\": 0,\r\n                \"NoOfdays\": 2,\r\n                \"Product_Title\": \"tennis sport\",\r\n                \"Lender_BillingAddress\": null,\r\n                \"Product_Image\": \"3rQf5vmj3KTZmJ2y5Notj5a4stKjQj\",\r\n                \"Product_PricePerDay\": \"3\",\r\n                \"BorrowerCusotmerId\": \"\",\r\n                \"RentAmount\": 6,\r\n                \"Discount\": 0,\r\n                \"AmountCharge\": 6,\r\n                \"Status\": \"timeout\",\r\n                \"Booking_ReadId\": 3,\r\n                \"Delivery_Latitude\": \"\",\r\n                \"Delivery_Longitude\": \"\",\r\n                \"Delivery_Address\": \"\",\r\n                \"Booking_PickupProduct\": false,\r\n                \"BookingStatus\": [\r\n                    {\r\n                        \"StatusName\": \"requested\",\r\n                        \"CreatedDate\": \"09/04/2018\",\r\n                        \"Status_TrackId\": 1,\r\n                        \"CreatedTime\": \"14:25\"\r\n                    },\r\n                    {\r\n                        \"StatusName\": \"verified\",\r\n                        \"CreatedDate\": \"09/04/2018\",\r\n                        \"Status_TrackId\": 3,\r\n                        \"CreatedTime\": \"14:25\"\r\n                    },\r\n                    {\r\n                        \"StatusName\": \"timeout\",\r\n                        \"CreatedDate\": \"09/04/2018\",\r\n                        \"Status_TrackId\": 4,\r\n                        \"CreatedTime\": \"14:40\"\r\n                    }\r\n                ],\r\n                \"Booking_ReviewStatus\": null,\r\n                \"DeliveryAndPickupDetail\": null\r\n            },\r\n            {\r\n                \"Product_Id\": 11545,\r\n                \"Booking_Id\": 688,\r\n                \"Borrower_Id\": 11736,\r\n                \"Borrower_Name\": \"milalou2 milalou2-last\",\r\n                \"Borrower_ReviewScore\": 0,\r\n                \"Borrower_ReviewCount\": 0,\r\n                \"Borrower_QBId\": null,\r\n                \"Lender_Id\": 11746,\r\n                \"Lender_Name\": \"milalou3\",\r\n                \"Lender_StripeAccount\": \"acct_1CDbR1BB9Tg1dJD4\",\r\n                \"Lender_ReviewScore\": 0,\r\n                \"Lender_ReviewCount\": 0,\r\n                \"Lender_QBId\": null,\r\n                \"Booking_PaidToLender\": false,\r\n                \"StartDate\": \"4/20/2018\",\r\n                \"EndDate\": \"4/20/2018\",\r\n                \"FullStartDate\": \"2018-04-20T00:00:00Z\",\r\n                \"FullEndDate\": \"2018-04-20T00:00:00Z\",\r\n                \"Lender_Image\": null,\r\n                \"Borrower_Image\": \"JoyyjhIuu7zFjvau4s6HT5a4stKjQj\",\r\n                \"Chat_Id\": 0,\r\n                \"NoOfdays\": 1,\r\n                \"Product_Title\": \"little mu\",\r\n                \"Lender_BillingAddress\": null,\r\n                \"Product_Image\": \"dQgiMmnnpqeikt2ASslLj5a4stKjQj\",\r\n                \"Product_PricePerDay\": \"5\",\r\n                \"BorrowerCusotmerId\": \"\",\r\n                \"RentAmount\": 5,\r\n                \"Discount\": 0,\r\n                \"AmountCharge\": 5,\r\n                \"Status\": \"card_not_verified_timeout\",\r\n                \"Booking_ReadId\": 2,\r\n                \"Delivery_Latitude\": \"\",\r\n                \"Delivery_Longitude\": \"\",\r\n                \"Delivery_Address\": \"\",\r\n                \"Booking_PickupProduct\": false,\r\n                \"BookingStatus\": [\r\n                    {\r\n                        \"StatusName\": \"requested\",\r\n                        \"CreatedDate\": \"09/04/2018\",\r\n                        \"Status_TrackId\": 1,\r\n                        \"CreatedTime\": \"14:18\"\r\n                    },\r\n                    {\r\n                        \"StatusName\": \"notverified\",\r\n                        \"CreatedDate\": \"09/04/2018\",\r\n                        \"Status_TrackId\": 2,\r\n                        \"CreatedTime\": \"14:18\"\r\n                    },\r\n                    {\r\n                        \"StatusName\": \"card_not_verified_timeout\",\r\n                        \"CreatedDate\": \"09/04/2018\",\r\n                        \"Status_TrackId\": 13,\r\n                        \"CreatedTime\": \"18:35\"\r\n                    }\r\n                ],\r\n                \"Booking_ReviewStatus\": null,\r\n                \"DeliveryAndPickupDetail\": null\r\n            },\r\n            {\r\n                \"Product_Id\": 11535,\r\n                \"Booking_Id\": 556,\r\n                \"Borrower_Id\": 11736,\r\n                \"Borrower_Name\": \"milalou2 milalou2-last\",\r\n                \"Borrower_ReviewScore\": 0,\r\n                \"Borrower_ReviewCount\": 0,\r\n                \"Borrower_QBId\": null,\r\n                \"Lender_Id\": 11735,\r\n                \"Lender_Name\": \"milalou4\",\r\n                \"Lender_StripeAccount\": \"\",\r\n                \"Lender_ReviewScore\": 0,\r\n                \"Lender_ReviewCount\": 0,\r\n                \"Lender_QBId\": null,\r\n                \"Booking_PaidToLender\": false,\r\n                \"StartDate\": \"4/26/2018\",\r\n                \"EndDate\": \"4/28/2018\",\r\n                \"FullStartDate\": \"2018-04-26T00:00:00Z\",\r\n                \"FullEndDate\": \"2018-04-28T00:00:00Z\",\r\n                \"Lender_Image\": \"NXxMyDfZn2ZHu0dUvLJeT5a4stKjQj\",\r\n                \"Borrower_Image\": \"JoyyjhIuu7zFjvau4s6HT5a4stKjQj\",\r\n                \"Chat_Id\": 0,\r\n                \"NoOfdays\": 3,\r\n                \"Product_Title\": \"tennis sport\",\r\n                \"Lender_BillingAddress\": null,\r\n                \"Product_Image\": \"3rQf5vmj3KTZmJ2y5Notj5a4stKjQj\",\r\n                \"Product_PricePerDay\": \"3\",\r\n                \"BorrowerCusotmerId\": \"\",\r\n                \"RentAmount\": 9,\r\n                \"Discount\": 0,\r\n                \"AmountCharge\": 9,\r\n                \"Status\": \"started\",\r\n                \"Booking_ReadId\": 2,\r\n                \"Delivery_Latitude\": \"\",\r\n                \"Delivery_Longitude\": \"\",\r\n                \"Delivery_Address\": \"\",\r\n                \"Booking_PickupProduct\": false,\r\n                \"BookingStatus\": [\r\n                    {\r\n                        \"StatusName\": \"requested\",\r\n                        \"CreatedDate\": \"03/04/2018\",\r\n                        \"Status_TrackId\": 1,\r\n                        \"CreatedTime\": \"20:15\"\r\n                    },\r\n                    {\r\n                        \"StatusName\": \"verified\",\r\n                        \"CreatedDate\": \"03/04/2018\",\r\n                        \"Status_TrackId\": 3,\r\n                        \"CreatedTime\": \"20:15\"\r\n                    },\r\n                    {\r\n                        \"StatusName\": \"accepted\",\r\n                        \"CreatedDate\": \"03/04/2018\",\r\n                        \"Status_TrackId\": 7,\r\n                        \"CreatedTime\": \"20:16\"\r\n                    },\r\n                    {\r\n                        \"StatusName\": \"started\",\r\n                        \"CreatedDate\": \"09/04/2018\",\r\n                        \"Status_TrackId\": 8,\r\n                        \"CreatedTime\": \"21:13\"\r\n                    }\r\n                ],\r\n                \"Booking_ReviewStatus\": null,\r\n                \"DeliveryAndPickupDetail\": null\r\n            },\r\n            {\r\n                \"Product_Id\": 11537,\r\n                \"Booking_Id\": 526,\r\n                \"Borrower_Id\": 11736,\r\n                \"Borrower_Name\": \"milalou2 milalou2-last\",\r\n                \"Borrower_ReviewScore\": 0,\r\n                \"Borrower_ReviewCount\": 0,\r\n                \"Borrower_QBId\": null,\r\n                \"Lender_Id\": 11737,\r\n                \"Lender_Name\": \"milalou5\",\r\n                \"Lender_StripeAccount\": \"acct_1CClL3HkZgZyGSpV\",\r\n                \"Lender_ReviewScore\": 0,\r\n                \"Lender_ReviewCount\": 0,\r\n                \"Lender_QBId\": null,\r\n                \"Booking_PaidToLender\": true,\r\n                \"StartDate\": \"4/19/2018\",\r\n                \"EndDate\": \"4/21/2018\",\r\n                \"FullStartDate\": \"2018-04-19T00:00:00Z\",\r\n                \"FullEndDate\": \"2018-04-21T00:00:00Z\",\r\n                \"Lender_Image\": null,\r\n                \"Borrower_Image\": \"JoyyjhIuu7zFjvau4s6HT5a4stKjQj\",\r\n                \"Chat_Id\": 0,\r\n                \"NoOfdays\": 3,\r\n                \"Product_Title\": \"sock\",\r\n                \"Lender_BillingAddress\": null,\r\n                \"Product_Image\": \"GCdCsbMYjJAIQ3CnJQ93Mj5a4stKjQj\",\r\n                \"Product_PricePerDay\": \"7\",\r\n                \"BorrowerCusotmerId\": \"\",\r\n                \"RentAmount\": 21,\r\n                \"Discount\": 0,\r\n                \"AmountCharge\": 21,\r\n                \"Status\": \"ended\",\r\n                \"Booking_ReadId\": 3,\r\n                \"Delivery_Latitude\": \"\",\r\n                \"Delivery_Longitude\": \"\",\r\n                \"Delivery_Address\": \"\",\r\n                \"Booking_PickupProduct\": false,\r\n                \"BookingStatus\": [\r\n                    {\r\n                        \"StatusName\": \"requested\",\r\n                        \"CreatedDate\": \"03/04/2018\",\r\n                        \"Status_TrackId\": 1,\r\n                        \"CreatedTime\": \"08:38\"\r\n                    },\r\n                    {\r\n                        \"StatusName\": \"verified\",\r\n                        \"CreatedDate\": \"03/04/2018\",\r\n                        \"Status_TrackId\": 3,\r\n                        \"CreatedTime\": \"08:38\"\r\n                    },\r\n                    {\r\n                        \"StatusName\": \"accepted\",\r\n                        \"CreatedDate\": \"03/04/2018\",\r\n                        \"Status_TrackId\": 7,\r\n                        \"CreatedTime\": \"08:46\"\r\n                    },\r\n                    {\r\n                        \"StatusName\": \"started\",\r\n                        \"CreatedDate\": \"03/04/2018\",\r\n                        \"Status_TrackId\": 8,\r\n                        \"CreatedTime\": \"08:47\"\r\n                    },\r\n                    {\r\n                        \"StatusName\": \"ended\",\r\n                        \"CreatedDate\": \"03/04/2018\",\r\n                        \"Status_TrackId\": 9,\r\n                        \"CreatedTime\": \"08:48\"\r\n                    }\r\n                ],\r\n                \"Booking_ReviewStatus\": null,\r\n                \"DeliveryAndPickupDetail\": null\r\n            }\r\n        ],\r\n        \"User_Booking_Lender\": [\r\n            {\r\n                \"Product_Id\": 11533,\r\n                \"Booking_Id\": 756,\r\n                \"Borrower_Id\": 11735,\r\n                \"Borrower_Name\": \"milalou4\",\r\n                \"Borrower_ReviewScore\": 0,\r\n                \"Borrower_ReviewCount\": 0,\r\n                \"Borrower_QBId\": null,\r\n                \"Lender_Id\": 11736,\r\n                \"Lender_Name\": \"milalou2 milalou2-last\",\r\n                \"Lender_StripeAccount\": \"acct_1CCujsKRD1g5AQ99\",\r\n                \"Lender_ReviewScore\": 0,\r\n                \"Lender_ReviewCount\": 0,\r\n                \"Lender_QBId\": null,\r\n                \"Booking_PaidToLender\": false,\r\n                \"StartDate\": \"4/20/2018\",\r\n                \"EndDate\": \"4/20/2018\",\r\n                \"FullStartDate\": \"2018-04-20T00:00:00Z\",\r\n                \"FullEndDate\": \"2018-04-20T00:00:00Z\",\r\n                \"Lender_Image\": \"JoyyjhIuu7zFjvau4s6HT5a4stKjQj\",\r\n                \"Borrower_Image\": \"NXxMyDfZn2ZHu0dUvLJeT5a4stKjQj\",\r\n                \"Chat_Id\": 0,\r\n                \"NoOfdays\": 1,\r\n                \"Product_Title\": \"pen blue \",\r\n                \"Lender_BillingAddress\": null,\r\n                \"Product_Image\": \"ezPAZU9e8Z3LaNECKB8FQT5a4stKjQj\",\r\n                \"Product_PricePerDay\": \"3\",\r\n                \"BorrowerCusotmerId\": \"\",\r\n                \"RentAmount\": 3,\r\n                \"Discount\": 0,\r\n                \"AmountCharge\": 3,\r\n                \"Status\": \"timeout\",\r\n                \"Booking_ReadId\": 3,\r\n                \"Delivery_Latitude\": \"0\",\r\n                \"Delivery_Longitude\": \"0\",\r\n                \"Delivery_Address\": \"\",\r\n                \"Booking_PickupProduct\": true,\r\n                \"BookingStatus\": [\r\n                    {\r\n                        \"StatusName\": \"requested\",\r\n                        \"CreatedDate\": \"10/04/2018\",\r\n                        \"Status_TrackId\": 1,\r\n                        \"CreatedTime\": \"10:28\"\r\n                    },\r\n                    {\r\n                        \"StatusName\": \"verified\",\r\n                        \"CreatedDate\": \"10/04/2018\",\r\n                        \"Status_TrackId\": 3,\r\n                        \"CreatedTime\": \"10:28\"\r\n                    },\r\n                    {\r\n                        \"StatusName\": \"timeout\",\r\n                        \"CreatedDate\": \"10/04/2018\",\r\n                        \"Status_TrackId\": 4,\r\n                        \"CreatedTime\": \"10:40\"\r\n                    }\r\n                ],\r\n                \"Booking_ReviewStatus\": null,\r\n                \"DeliveryAndPickupDetail\": null\r\n            },\r\n            {\r\n                \"Product_Id\": 11533,\r\n                \"Booking_Id\": 755,\r\n                \"Borrower_Id\": 11735,\r\n                \"Borrower_Name\": \"milalou4\",\r\n                \"Borrower_ReviewScore\": 0,\r\n                \"Borrower_ReviewCount\": 0,\r\n                \"Borrower_QBId\": null,\r\n                \"Lender_Id\": 11736,\r\n                \"Lender_Name\": \"milalou2 milalou2-last\",\r\n                \"Lender_StripeAccount\": \"acct_1CCujsKRD1g5AQ99\",\r\n                \"Lender_ReviewScore\": 0,\r\n                \"Lender_ReviewCount\": 0,\r\n                \"Lender_QBId\": null,\r\n                \"Booking_PaidToLender\": false,\r\n                \"StartDate\": \"4/19/2018\",\r\n                \"EndDate\": \"4/22/2018\",\r\n                \"FullStartDate\": \"2018-04-19T00:00:00Z\",\r\n                \"FullEndDate\": \"2018-04-22T00:00:00Z\",\r\n                \"Lender_Image\": \"JoyyjhIuu7zFjvau4s6HT5a4stKjQj\",\r\n                \"Borrower_Image\": \"NXxMyDfZn2ZHu0dUvLJeT5a4stKjQj\",\r\n                \"Chat_Id\": 0,\r\n                \"NoOfdays\": 4,\r\n                \"Product_Title\": \"pen blue \",\r\n                \"Lender_BillingAddress\": null,\r\n                \"Product_Image\": \"ezPAZU9e8Z3LaNECKB8FQT5a4stKjQj\",\r\n                \"Product_PricePerDay\": \"3\",\r\n                \"BorrowerCusotmerId\": \"\",\r\n                \"RentAmount\": 12,\r\n                \"Discount\": 0,\r\n                \"AmountCharge\": 12,\r\n                \"Status\": \"cancelled\",\r\n                \"Booking_ReadId\": 2,\r\n                \"Delivery_Latitude\": \"0\",\r\n                \"Delivery_Longitude\": \"0\",\r\n                \"Delivery_Address\": \"\",\r\n                \"Booking_PickupProduct\": true,\r\n                \"BookingStatus\": [\r\n                    {\r\n                        \"StatusName\": \"requested\",\r\n                        \"CreatedDate\": \"10/04/2018\",\r\n                        \"Status_TrackId\": 1,\r\n                        \"CreatedTime\": \"10:26\"\r\n                    },\r\n                    {\r\n                        \"StatusName\": \"verified\",\r\n                        \"CreatedDate\": \"10/04/2018\",\r\n                        \"Status_TrackId\": 3,\r\n                        \"CreatedTime\": \"10:26\"\r\n                    },\r\n                    {\r\n                        \"StatusName\": \"cancelled\",\r\n                        \"CreatedDate\": \"10/04/2018\",\r\n                        \"Status_TrackId\": 6,\r\n                        \"CreatedTime\": \"10:26\"\r\n                    }\r\n                ],\r\n                \"Booking_ReviewStatus\": null,\r\n                \"DeliveryAndPickupDetail\": null\r\n            },\r\n            {\r\n                \"Product_Id\": 11533,\r\n                \"Booking_Id\": 735,\r\n                \"Borrower_Id\": 11735,\r\n                \"Borrower_Name\": \"milalou4\",\r\n                \"Borrower_ReviewScore\": 0,\r\n                \"Borrower_ReviewCount\": 0,\r\n                \"Borrower_QBId\": null,\r\n                \"Lender_Id\": 11736,\r\n                \"Lender_Name\": \"milalou2 milalou2-last\",\r\n                \"Lender_StripeAccount\": \"acct_1CCujsKRD1g5AQ99\",\r\n                \"Lender_ReviewScore\": 0,\r\n                \"Lender_ReviewCount\": 0,\r\n                \"Lender_QBId\": null,\r\n                \"Booking_PaidToLender\": false,\r\n                \"StartDate\": \"4/26/2018\",\r\n                \"EndDate\": \"4/26/2018\",\r\n                \"FullStartDate\": \"2018-04-26T00:00:00Z\",\r\n                \"FullEndDate\": \"2018-04-26T00:00:00Z\",\r\n                \"Lender_Image\": \"JoyyjhIuu7zFjvau4s6HT5a4stKjQj\",\r\n                \"Borrower_Image\": \"NXxMyDfZn2ZHu0dUvLJeT5a4stKjQj\",\r\n                \"Chat_Id\": 0,\r\n                \"NoOfdays\": 1,\r\n                \"Product_Title\": \"pen blue \",\r\n                \"Lender_BillingAddress\": null,\r\n                \"Product_Image\": \"ezPAZU9e8Z3LaNECKB8FQT5a4stKjQj\",\r\n                \"Product_PricePerDay\": \"3\",\r\n                \"BorrowerCusotmerId\": \"\",\r\n                \"RentAmount\": 3,\r\n                \"Discount\": 0,\r\n                \"AmountCharge\": 3,\r\n                \"Status\": \"accepted\",\r\n                \"Booking_ReadId\": 2,\r\n                \"Delivery_Latitude\": \"0\",\r\n                \"Delivery_Longitude\": \"0\",\r\n                \"Delivery_Address\": \"\",\r\n                \"Booking_PickupProduct\": true,\r\n                \"BookingStatus\": [\r\n                    {\r\n                        \"StatusName\": \"requested\",\r\n                        \"CreatedDate\": \"09/04/2018\",\r\n                        \"Status_TrackId\": 1,\r\n                        \"CreatedTime\": \"21:44\"\r\n                    },\r\n                    {\r\n                        \"StatusName\": \"verified\",\r\n                        \"CreatedDate\": \"09/04/2018\",\r\n                        \"Status_TrackId\": 3,\r\n                        \"CreatedTime\": \"21:44\"\r\n                    },\r\n                    {\r\n                        \"StatusName\": \"accepted\",\r\n                        \"CreatedDate\": \"09/04/2018\",\r\n                        \"Status_TrackId\": 7,\r\n                        \"CreatedTime\": \"21:44\"\r\n                    }\r\n                ],\r\n                \"Booking_ReviewStatus\": null,\r\n                \"DeliveryAndPickupDetail\": null\r\n            },\r\n            {\r\n                \"Product_Id\": 11533,\r\n                \"Booking_Id\": 734,\r\n                \"Borrower_Id\": 11735,\r\n                \"Borrower_Name\": \"milalou4\",\r\n                \"Borrower_ReviewScore\": 0,\r\n                \"Borrower_ReviewCount\": 0,\r\n                \"Borrower_QBId\": null,\r\n                \"Lender_Id\": 11736,\r\n                \"Lender_Name\": \"milalou2 milalou2-last\",\r\n                \"Lender_StripeAccount\": \"acct_1CCujsKRD1g5AQ99\",\r\n                \"Lender_ReviewScore\": 0,\r\n                \"Lender_ReviewCount\": 0,\r\n                \"Lender_QBId\": null,\r\n                \"Booking_PaidToLender\": false,\r\n                \"StartDate\": \"4/21/2018\",\r\n                \"EndDate\": \"4/22/2018\",\r\n                \"FullStartDate\": \"2018-04-21T00:00:00Z\",\r\n                \"FullEndDate\": \"2018-04-22T00:00:00Z\",\r\n                \"Lender_Image\": \"JoyyjhIuu7zFjvau4s6HT5a4stKjQj\",\r\n                \"Borrower_Image\": \"NXxMyDfZn2ZHu0dUvLJeT5a4stKjQj\",\r\n                \"Chat_Id\": 0,\r\n                \"NoOfdays\": 2,\r\n                \"Product_Title\": \"pen blue \",\r\n                \"Lender_BillingAddress\": null,\r\n                \"Product_Image\": \"ezPAZU9e8Z3LaNECKB8FQT5a4stKjQj\",\r\n                \"Product_PricePerDay\": \"3\",\r\n                \"BorrowerCusotmerId\": \"\",\r\n                \"RentAmount\": 6,\r\n                \"Discount\": 0,\r\n                \"AmountCharge\": 6,\r\n                \"Status\": \"cancelled\",\r\n                \"Booking_ReadId\": 2,\r\n                \"Delivery_Latitude\": \"0\",\r\n                \"Delivery_Longitude\": \"0\",\r\n                \"Delivery_Address\": \"\",\r\n                \"Booking_PickupProduct\": true,\r\n                \"BookingStatus\": [\r\n                    {\r\n                        \"StatusName\": \"requested\",\r\n                        \"CreatedDate\": \"09/04/2018\",\r\n                        \"Status_TrackId\": 1,\r\n                        \"CreatedTime\": \"20:58\"\r\n                    },\r\n                    {\r\n                        \"StatusName\": \"verified\",\r\n                        \"CreatedDate\": \"09/04/2018\",\r\n                        \"Status_TrackId\": 3,\r\n                        \"CreatedTime\": \"20:58\"\r\n                    },\r\n                    {\r\n                        \"StatusName\": \"cancelled\",\r\n                        \"CreatedDate\": \"09/04/2018\",\r\n                        \"Status_TrackId\": 6,\r\n                        \"CreatedTime\": \"20:59\"\r\n                    }\r\n                ],\r\n                \"Booking_ReviewStatus\": null,\r\n                \"DeliveryAndPickupDetail\": null\r\n            },\r\n            {\r\n                \"Product_Id\": 11533,\r\n                \"Booking_Id\": 733,\r\n                \"Borrower_Id\": 11735,\r\n                \"Borrower_Name\": \"milalou4\",\r\n                \"Borrower_ReviewScore\": 0,\r\n                \"Borrower_ReviewCount\": 0,\r\n                \"Borrower_QBId\": null,\r\n                \"Lender_Id\": 11736,\r\n                \"Lender_Name\": \"milalou2 milalou2-last\",\r\n                \"Lender_StripeAccount\": \"acct_1CCujsKRD1g5AQ99\",\r\n                \"Lender_ReviewScore\": 0,\r\n                \"Lender_ReviewCount\": 0,\r\n                \"Lender_QBId\": null,\r\n                \"Booking_PaidToLender\": false,\r\n                \"StartDate\": \"4/21/2018\",\r\n                \"EndDate\": \"4/22/2018\",\r\n                \"FullStartDate\": \"2018-04-21T00:00:00Z\",\r\n                \"FullEndDate\": \"2018-04-22T00:00:00Z\",\r\n                \"Lender_Image\": \"JoyyjhIuu7zFjvau4s6HT5a4stKjQj\",\r\n                \"Borrower_Image\": \"NXxMyDfZn2ZHu0dUvLJeT5a4stKjQj\",\r\n                \"Chat_Id\": 0,\r\n                \"NoOfdays\": 2,\r\n                \"Product_Title\": \"pen blue \",\r\n                \"Lender_BillingAddress\": null,\r\n                \"Product_Image\": \"ezPAZU9e8Z3LaNECKB8FQT5a4stKjQj\",\r\n                \"Product_PricePerDay\": \"3\",\r\n                \"BorrowerCusotmerId\": \"\",\r\n                \"RentAmount\": 6,\r\n                \"Discount\": 0,\r\n                \"AmountCharge\": 6,\r\n                \"Status\": \"cancelled\",\r\n                \"Booking_ReadId\": 3,\r\n                \"Delivery_Latitude\": \"0\",\r\n                \"Delivery_Longitude\": \"0\",\r\n                \"Delivery_Address\": \"\",\r\n                \"Booking_PickupProduct\": true,\r\n                \"BookingStatus\": [\r\n                    {\r\n                        \"StatusName\": \"requested\",\r\n                        \"CreatedDate\": \"09/04/2018\",\r\n                        \"Status_TrackId\": 1,\r\n                        \"CreatedTime\": \"20:56\"\r\n                    },\r\n                    {\r\n                        \"StatusName\": \"verified\",\r\n                        \"CreatedDate\": \"09/04/2018\",\r\n                        \"Status_TrackId\": 3,\r\n                        \"CreatedTime\": \"20:56\"\r\n                    },\r\n                    {\r\n                        \"StatusName\": \"cancelled\",\r\n                        \"CreatedDate\": \"09/04/2018\",\r\n                        \"Status_TrackId\": 6,\r\n                        \"CreatedTime\": \"20:58\"\r\n                    }\r\n                ],\r\n                \"Booking_ReviewStatus\": null,\r\n                \"DeliveryAndPickupDetail\": null\r\n            },\r\n            {\r\n                \"Product_Id\": 11533,\r\n                \"Booking_Id\": 732,\r\n                \"Borrower_Id\": 11735,\r\n                \"Borrower_Name\": \"milalou4\",\r\n                \"Borrower_ReviewScore\": 0,\r\n                \"Borrower_ReviewCount\": 0,\r\n                \"Borrower_QBId\": null,\r\n                \"Lender_Id\": 11736,\r\n                \"Lender_Name\": \"milalou2 milalou2-last\",\r\n                \"Lender_StripeAccount\": \"acct_1CCujsKRD1g5AQ99\",\r\n                \"Lender_ReviewScore\": 0,\r\n                \"Lender_ReviewCount\": 0,\r\n                \"Lender_QBId\": null,\r\n                \"Booking_PaidToLender\": true,\r\n                \"StartDate\": \"4/11/2018\",\r\n                \"EndDate\": \"4/11/2018\",\r\n                \"FullStartDate\": \"2018-04-11T00:00:00Z\",\r\n                \"FullEndDate\": \"2018-04-11T00:00:00Z\",\r\n                \"Lender_Image\": \"JoyyjhIuu7zFjvau4s6HT5a4stKjQj\",\r\n                \"Borrower_Image\": \"NXxMyDfZn2ZHu0dUvLJeT5a4stKjQj\",\r\n                \"Chat_Id\": 0,\r\n                \"NoOfdays\": 1,\r\n                \"Product_Title\": \"pen blue \",\r\n                \"Lender_BillingAddress\": null,\r\n                \"Product_Image\": \"ezPAZU9e8Z3LaNECKB8FQT5a4stKjQj\",\r\n                \"Product_PricePerDay\": \"3\",\r\n                \"BorrowerCusotmerId\": \"\",\r\n                \"RentAmount\": 3,\r\n                \"Discount\": 0,\r\n                \"AmountCharge\": 3,\r\n                \"Status\": \"ended\",\r\n                \"Booking_ReadId\": 1,\r\n                \"Delivery_Latitude\": \"0\",\r\n                \"Delivery_Longitude\": \"0\",\r\n                \"Delivery_Address\": \"\",\r\n                \"Booking_PickupProduct\": true,\r\n                \"BookingStatus\": [\r\n                    {\r\n                        \"StatusName\": \"requested\",\r\n                        \"CreatedDate\": \"09/04/2018\",\r\n                        \"Status_TrackId\": 1,\r\n                        \"CreatedTime\": \"20:47\"\r\n                    },\r\n                    {\r\n                        \"StatusName\": \"verified\",\r\n                        \"CreatedDate\": \"09/04/2018\",\r\n                        \"Status_TrackId\": 3,\r\n                        \"CreatedTime\": \"20:47\"\r\n                    },\r\n                    {\r\n                        \"StatusName\": \"accepted\",\r\n                        \"CreatedDate\": \"09/04/2018\",\r\n                        \"Status_TrackId\": 7,\r\n                        \"CreatedTime\": \"20:47\"\r\n                    },\r\n                    {\r\n                        \"StatusName\": \"started\",\r\n                        \"CreatedDate\": \"09/04/2018\",\r\n                        \"Status_TrackId\": 8,\r\n                        \"CreatedTime\": \"20:55\"\r\n                    },\r\n                    {\r\n                        \"StatusName\": \"ended\",\r\n                        \"CreatedDate\": \"09/04/2018\",\r\n                        \"Status_TrackId\": 9,\r\n                        \"CreatedTime\": \"20:55\"\r\n                    }\r\n                ],\r\n                \"Booking_ReviewStatus\": null,\r\n                \"DeliveryAndPickupDetail\": null\r\n            },\r\n            {\r\n                \"Product_Id\": 11532,\r\n                \"Booking_Id\": 668,\r\n                \"Borrower_Id\": 11737,\r\n                \"Borrower_Name\": \"milalou5\",\r\n                \"Borrower_ReviewScore\": 0,\r\n                \"Borrower_ReviewCount\": 0,\r\n                \"Borrower_QBId\": null,\r\n                \"Lender_Id\": 11736,\r\n                \"Lender_Name\": \"milalou2 milalou2-last\",\r\n                \"Lender_StripeAccount\": \"acct_1CCujsKRD1g5AQ99\",\r\n                \"Lender_ReviewScore\": 0,\r\n                \"Lender_ReviewCount\": 0,\r\n                \"Lender_QBId\": null,\r\n                \"Booking_PaidToLender\": false,\r\n                \"StartDate\": \"4/19/2018\",\r\n                \"EndDate\": \"4/21/2018\",\r\n                \"FullStartDate\": \"2018-04-19T00:00:00Z\",\r\n                \"FullEndDate\": \"2018-04-21T00:00:00Z\",\r\n                \"Lender_Image\": \"JoyyjhIuu7zFjvau4s6HT5a4stKjQj\",\r\n                \"Borrower_Image\": null,\r\n                \"Chat_Id\": 0,\r\n                \"NoOfdays\": 3,\r\n                \"Product_Title\": \"napkins \",\r\n                \"Lender_BillingAddress\": null,\r\n                \"Product_Image\": \"o8R3Gnu6yT2mVGdKix4Iz5a4stKjQj\",\r\n                \"Product_PricePerDay\": \"6\",\r\n                \"BorrowerCusotmerId\": \"\",\r\n                \"RentAmount\": 3,\r\n                \"Discount\": 0,\r\n                \"AmountCharge\": 3,\r\n                \"Status\": \"card_not_verified_timeout\",\r\n                \"Booking_ReadId\": 1,\r\n                \"Delivery_Latitude\": \"52.4746643\",\r\n                \"Delivery_Longitude\": \"13.4244634\",\r\n                \"Delivery_Address\": \"Weisestraße 26\",\r\n                \"Booking_PickupProduct\": false,\r\n                \"BookingStatus\": [\r\n                    {\r\n                        \"StatusName\": \"requested\",\r\n                        \"CreatedDate\": \"09/04/2018\",\r\n                        \"Status_TrackId\": 1,\r\n                        \"CreatedTime\": \"08:09\"\r\n                    },\r\n                    {\r\n                        \"StatusName\": \"notverified\",\r\n                        \"CreatedDate\": \"09/04/2018\",\r\n                        \"Status_TrackId\": 2,\r\n                        \"CreatedTime\": \"08:09\"\r\n                    },\r\n                    {\r\n                        \"StatusName\": \"card_not_verified_timeout\",\r\n                        \"CreatedDate\": \"09/04/2018\",\r\n                        \"Status_TrackId\": 13,\r\n                        \"CreatedTime\": \"18:35\"\r\n                    }\r\n                ],\r\n                \"Booking_ReviewStatus\": null,\r\n                \"DeliveryAndPickupDetail\": null\r\n            },\r\n            {\r\n                \"Product_Id\": 11533,\r\n                \"Booking_Id\": 555,\r\n                \"Borrower_Id\": 11737,\r\n                \"Borrower_Name\": \"milalou5\",\r\n                \"Borrower_ReviewScore\": 0,\r\n                \"Borrower_ReviewCount\": 0,\r\n                \"Borrower_QBId\": null,\r\n                \"Lender_Id\": 11736,\r\n                \"Lender_Name\": \"milalou2 milalou2-last\",\r\n                \"Lender_StripeAccount\": \"acct_1CCujsKRD1g5AQ99\",\r\n                \"Lender_ReviewScore\": 0,\r\n                \"Lender_ReviewCount\": 0,\r\n                \"Lender_QBId\": null,\r\n                \"Booking_PaidToLender\": true,\r\n                \"StartDate\": \"4/19/2018\",\r\n                \"EndDate\": \"4/21/2018\",\r\n                \"FullStartDate\": \"2018-04-19T00:00:00Z\",\r\n                \"FullEndDate\": \"2018-04-21T00:00:00Z\",\r\n                \"Lender_Image\": \"JoyyjhIuu7zFjvau4s6HT5a4stKjQj\",\r\n                \"Borrower_Image\": null,\r\n                \"Chat_Id\": 0,\r\n                \"NoOfdays\": 3,\r\n                \"Product_Title\": \"pen blue \",\r\n                \"Lender_BillingAddress\": null,\r\n                \"Product_Image\": \"ezPAZU9e8Z3LaNECKB8FQT5a4stKjQj\",\r\n                \"Product_PricePerDay\": \"3\",\r\n                \"BorrowerCusotmerId\": \"\",\r\n                \"RentAmount\": 9,\r\n                \"Discount\": 0,\r\n                \"AmountCharge\": 9,\r\n                \"Status\": \"ended\",\r\n                \"Booking_ReadId\": 2,\r\n                \"Delivery_Latitude\": \"0\",\r\n                \"Delivery_Longitude\": \"0\",\r\n                \"Delivery_Address\": \"\",\r\n                \"Booking_PickupProduct\": true,\r\n                \"BookingStatus\": [\r\n                    {\r\n                        \"StatusName\": \"requested\",\r\n                        \"CreatedDate\": \"03/04/2018\",\r\n                        \"Status_TrackId\": 1,\r\n                        \"CreatedTime\": \"18:25\"\r\n                    },\r\n                    {\r\n                        \"StatusName\": \"verified\",\r\n                        \"CreatedDate\": \"03/04/2018\",\r\n                        \"Status_TrackId\": 3,\r\n                        \"CreatedTime\": \"18:25\"\r\n                    },\r\n                    {\r\n                        \"StatusName\": \"accepted\",\r\n                        \"CreatedDate\": \"03/04/2018\",\r\n                        \"Status_TrackId\": 7,\r\n                        \"CreatedTime\": \"18:26\"\r\n                    },\r\n                    {\r\n                        \"StatusName\": \"started\",\r\n                        \"CreatedDate\": \"03/04/2018\",\r\n                        \"Status_TrackId\": 8,\r\n                        \"CreatedTime\": \"18:28\"\r\n                    },\r\n                    {\r\n                        \"StatusName\": \"ended\",\r\n                        \"CreatedDate\": \"03/04/2018\",\r\n                        \"Status_TrackId\": 9,\r\n                        \"CreatedTime\": \"18:29\"\r\n                    }\r\n                ],\r\n                \"Booking_ReviewStatus\": null,\r\n                \"DeliveryAndPickupDetail\": null\r\n            },\r\n            {\r\n                \"Product_Id\": 11533,\r\n                \"Booking_Id\": 525,\r\n                \"Borrower_Id\": 11735,\r\n                \"Borrower_Name\": \"milalou4\",\r\n                \"Borrower_ReviewScore\": 0,\r\n                \"Borrower_ReviewCount\": 0,\r\n                \"Borrower_QBId\": null,\r\n                \"Lender_Id\": 11736,\r\n                \"Lender_Name\": \"milalou2 milalou2-last\",\r\n                \"Lender_StripeAccount\": \"acct_1CCujsKRD1g5AQ99\",\r\n                \"Lender_ReviewScore\": 0,\r\n                \"Lender_ReviewCount\": 0,\r\n                \"Lender_QBId\": null,\r\n                \"Booking_PaidToLender\": false,\r\n                \"StartDate\": \"4/3/2018\",\r\n                \"EndDate\": \"4/3/2018\",\r\n                \"FullStartDate\": \"2018-04-03T00:00:00Z\",\r\n                \"FullEndDate\": \"2018-04-03T00:00:00Z\",\r\n                \"Lender_Image\": \"JoyyjhIuu7zFjvau4s6HT5a4stKjQj\",\r\n                \"Borrower_Image\": \"NXxMyDfZn2ZHu0dUvLJeT5a4stKjQj\",\r\n                \"Chat_Id\": 0,\r\n                \"NoOfdays\": 1,\r\n                \"Product_Title\": \"pen blue \",\r\n                \"Lender_BillingAddress\": null,\r\n                \"Product_Image\": \"ezPAZU9e8Z3LaNECKB8FQT5a4stKjQj\",\r\n                \"Product_PricePerDay\": \"3\",\r\n                \"BorrowerCusotmerId\": \"\",\r\n                \"RentAmount\": 3,\r\n                \"Discount\": 0,\r\n                \"AmountCharge\": 3,\r\n                \"Status\": \"timeout\",\r\n                \"Booking_ReadId\": 3,\r\n                \"Delivery_Latitude\": \"0\",\r\n                \"Delivery_Longitude\": \"0\",\r\n                \"Delivery_Address\": \"\",\r\n                \"Booking_PickupProduct\": true,\r\n                \"BookingStatus\": [\r\n                    {\r\n                        \"StatusName\": \"requested\",\r\n                        \"CreatedDate\": \"03/04/2018\",\r\n                        \"Status_TrackId\": 1,\r\n                        \"CreatedTime\": \"08:09\"\r\n                    },\r\n                    {\r\n                        \"StatusName\": \"verified\",\r\n                        \"CreatedDate\": \"03/04/2018\",\r\n                        \"Status_TrackId\": 3,\r\n                        \"CreatedTime\": \"08:09\"\r\n                    },\r\n                    {\r\n                        \"StatusName\": \"timeout\",\r\n                        \"CreatedDate\": \"03/04/2018\",\r\n                        \"Status_TrackId\": 4,\r\n                        \"CreatedTime\": \"08:15\"\r\n                    }\r\n                ],\r\n                \"Booking_ReviewStatus\": null,\r\n                \"DeliveryAndPickupDetail\": null\r\n            }\r\n        ],\r\n        \"User_ReviewScore\": [\r\n            {\r\n                \"User_ReviewScore\": 8,\r\n                \"User_TotalReviews\": 1,\r\n                \"User_ReviewAsLender\": 8,\r\n                \"User_ReviewAsBorrower\": 7,\r\n                \"User_ReviewCountAsLender\": 1,\r\n                \"User_ReviewCountAsBorrower\": 1\r\n            }\r\n        ]\r\n    },\r\n    \"Message\": \"User Bookings\"\r\n};\r\n\r\nangular.module('paladinApp')\r\n    .controller('userBookingsController',[\r\n        '$rootScope',\r\n        '$scope',\r\n        'apiService',\r\n        'enums',\r\n        'appStateManager',\r\n        'ptLog',\r\n        '$mdMedia',\r\n        'ptUtils',\r\n        'moment',\r\n        function ($rootScope,\r\n                  $scope,\r\n                  apiService,\r\n                  enums,\r\n                  appStateManager,\r\n                  ptLog,\r\n                  $mdMedia,\r\n                  ptUtils,\r\n                  moment) {\r\n            $scope.isLoading = false;\r\n\r\n            $scope.tabs = [\r\n                {\r\n                    title: 'BORROWED',\r\n                    content: 'I am tab borrowed content',\r\n                    bookings: []\r\n                },\r\n                {\r\n                    title: 'LENT',\r\n                    content: 'I am tab lent content',\r\n                    bookings: []\r\n                }\r\n            ];\r\n\r\n            $scope.fetchUserBookings = () => {\r\n                $scope.isLoading = true;\r\n                apiService.bookings.getUserBookings(appStateManager.getUserId())\r\n                    .then((res) => {\r\n                        $scope.tabs[0].bookings = res.Data.User_Booking_Borrower\r\n                            .map((item) => {\r\n                                item.lastModified = new Date(item.Last_Modified * 1000);\r\n                                return item\r\n                            })\r\n                            .sort(ptUtils.sorters.bookingLastModifiedEpoch);\r\n\r\n                        $scope.tabs[1].bookings = res.Data.User_Booking_Lender\r\n                            .map((item) => {\r\n                                item.lastModified = new Date(item.Last_Modified * 1000);\r\n                                return item\r\n                            })\r\n                            .sort(ptUtils.sorters.bookingLastModifiedEpoch);\r\n                            $scope.isLoading = false;\r\n\r\n                    })\r\n                    .catch((err) => {\r\n                        $scope.isLoading = false;\r\n                        ptLog.error(err);\r\n                    })\r\n            };\r\n\r\n            $scope.fetchUserBookings();\r\n\r\n            $scope.bookingListItemClick = (booking) => {\r\n                $rootScope.$emit(enums.busNavigation.transactionDetailed,{bookingId: booking.Booking_Id})\r\n            };\r\n\r\n            $scope.addNewItem = () => {\r\n                $rootScope.$emit(enums.busNavigation.newProduct);\r\n            };\r\n\r\n            $scope.isGtMd = $mdMedia('gt-md');\r\n\r\n            let deregs = [];\r\n\r\n            deregs.push(\r\n                $scope.$watch(function () {return $mdMedia('gt-md') },function (mgMd) {\r\n                    $scope.isGtMd = mgMd;\r\n                })\r\n            );\r\n\r\n            $scope.$on('$destroy',() => {\r\n                while (deregs.length)\r\n                    deregs.pop()()\r\n            })\r\n        }\r\n    ]);","angular.module('paladinApp')\r\n    .controller('userProfileController',[\r\n        '$rootScope',\r\n        '$scope',\r\n        'appStateManager',\r\n        'apiService',\r\n        '$stateParams',\r\n        '$state',\r\n        'toastService',\r\n        'enums',\r\n        'popupService',\r\n        '$translate',\r\n        'ptLog',\r\n        'ptUtils',\r\n        function ($rootScope,\r\n            $scope,\r\n            appStateManager,\r\n            apiService,\r\n            $stateParams,\r\n            $state,\r\n            toastService,\r\n            enums,\r\n            popupService,\r\n            $translate,\r\n            ptLog,\r\n            ptUtils) {\r\n\r\n            console.log('userProfileController $scope ', $scope);\r\n\r\n            $scope.isLoading = false;\r\n            $scope.isMyProfile = false;\r\n            $scope.isEditing = false;\r\n            $scope.isUpdating = false;\r\n            $scope.userId = $stateParams.userId;\r\n            $scope.editableProfile = null;\r\n            $scope.tempBas64Image = null;\r\n\r\n            if ($state.includes('app.profiles.myProfile')) {\r\n                $scope.isMyProfile = true;\r\n                if (!$scope.userId) {\r\n                    if (appStateManager.getUserId())\r\n                        $scope.userId = appStateManager.getUserId();\r\n                    else\r\n                        $state.go('app.home');\r\n                }\r\n            } else if ($scope.userId == appStateManager.getUserId())\r\n            $state.go('app.profiles.myProfile',{userId: $scope.userId});\r\n\r\n            $scope.fetchUserProfile = () => {\r\n                $scope.profile = null;\r\n                $scope.isLoading = true;\r\n                let {\r\n                    userId\r\n                } = $scope;\r\n                apiService.users.getUserProfile({userId})\r\n                    .then((response) => {\r\n                        $scope.profile = response.Data;\r\n\r\n                        getUserCredit();\r\n\r\n                        ptUtils.extractAndGeoLocateAddressFromObjectForFieldNames({\r\n                            object: $scope.profile,\r\n                            addressFieldName: 'User_Address',\r\n                            latFieldName: 'User_Latitude',\r\n                            lngFieldName: 'User_Longitude'\r\n                        })\r\n                            .then((location) => {\r\n                                $scope.profile.User_Address = location.address;\r\n                            });\r\n                        $scope.isLoading = false;\r\n                    })\r\n                    .catch((err) => {\r\n                        $scope.isLoading = false;\r\n                        toastService.simpleToast(err.data.Message || $translate.instant('DEFAULT_ERROR'));\r\n                    })\r\n            };\r\n\r\n            $scope.editProfile = () => {\r\n                let {\r\n                    User_Address,\r\n                    User_FullName\r\n                } = $scope.profile;\r\n                $scope.editableProfile = angular.copy($scope.profile);\r\n                const fullName = User_FullName.split(' ');\r\n                $scope.editableProfile.userFirstName = fullName[0];\r\n                $scope.editableProfile.userLastName = fullName.length > 1 ? fullName[1] : '';\r\n                $scope.isEditing = true;\r\n            };\r\n\r\n            $scope.submitProfileEdit = () => {\r\n                $scope.editableProfile.User_FullName = $scope.editableProfile.userFirstName + ' ' + ($scope.editableProfile.userLastName || '');\r\n                const objToSend = angular.copy($scope.editableProfile);\r\n                delete objToSend.userFirstName;\r\n                delete objToSend.userLastName;\r\n                $scope.isUpdating = true;\r\n                apiService.users.editProfile(objToSend)\r\n                    .then(() => {\r\n                        apiService.users.updateNotificaton({\r\n                            userId: $scope.userId,\r\n                            emailNotif: objToSend.Notification_Email || false,\r\n                            chatNotif: objToSend.Notification_Chat || false,\r\n                        })\r\n                            .then((res) => {\r\n                                location.reload();\r\n                            })\r\n                            .catch((err) => {\r\n                                $scope.isUpdating = false;\r\n                                toastService.simpleToast(err.data.Message);\r\n                                console.error(err);\r\n                            })\r\n                    })\r\n                    .catch((err) => {\r\n                        $scope.isUpdating = false;\r\n                        toastService.simpleToast(err.data.Message);\r\n                    })\r\n            };\r\n\r\n\r\n            $scope.uploadImage = () => {\r\n                angular.element(document.getElementById('uploadImageBtn'))[0].click();\r\n            };\r\n\r\n            $scope.onUploaded = (inputElement) => {\r\n                toastService.simpleToast($translate.instant('UPLOADING_IMAGE'));\r\n                if (inputElement && inputElement.files && inputElement.files.length > 0) {\r\n                    canvasResize(inputElement.files[0], {\r\n                        quality: 75,\r\n                        isPreprocessing: true,\r\n                        cardType: '',\r\n                        maxW: 2048,\r\n                        maxH: 2008,\r\n                        isiOS: ptUtils.isMobile.iOS(),\r\n                        callback: function (data, width, height) {\r\n                            $scope.$evalAsync(() => {\r\n                                $scope.editableProfile.User_DisplayPicture = data.split(',')[1];\r\n                                $scope.tempBas64Image = data;\r\n                                toastService.simpleToast($translate.instant('IMAGE_UPLOADED'));\r\n                            })\r\n                        }\r\n                    });\r\n                } else {\r\n                    // No file uploaded\r\n                }\r\n            };\r\n\r\n\r\n            $scope.changePassword = () =>  {\r\n                popupService.showChangePassword()\r\n                    .then(() => toastService.simpleToast($translate.instant('PASSWORD_SUCCESSFULLY_CHANGED')))\r\n                    .catch(() => ptLog.log('pass change Canceled'))\r\n            };\r\n\r\n            $scope.logout = () => {\r\n                $rootScope.$emit(enums.busEvents.userLogout);\r\n            };\r\n\r\n\r\n            $scope.deleteAccount = () => {\r\n                popupService.showConfirm(\r\n                    $translate.instant('WARN'),\r\n                    $translate.instant('DEL_ACCOUNT_CONFIRM_MESSAGE'))\r\n                    .then(() => {\r\n                        //TODO: - delete account\r\n                        $scope.isLoading = true;\r\n                        apiService.users.deleteAccount($scope.userId)\r\n                            .then(() => {\r\n                                $scope.isLoading = false;\r\n                                popupService.showAlert($translate.instant('DEL_ACCOUNT'),\r\n                                    $translate.instant('DEL_ACCOUNT_SUCCESS'))\r\n                                    .finally(() => {\r\n                                        $rootScope.$emit(enums.busEvents.userLogout);\r\n                                    })\r\n                            })\r\n                            .catch((err) => {\r\n                                $scope.isLoading = false;\r\n                                popupService.showAlert(\r\n                                    $translate.instant('DEL_ACCOUNT'),\r\n                                    err.data.Message || $translate.instant('DEFAULT_ERROR'))\r\n                                    .finally(() => {\r\n                                    })\r\n                            })\r\n                    })\r\n                    .catch(() => {\r\n                        // Delete account canceled\r\n                    })\r\n            };\r\n\r\n            let copyReferralLink = (containerid) => {\r\n                // TODO: make this a directive or utility\r\n\r\n                if (document.selection) {\r\n                    var range = document.body.createTextRange();\r\n                    range.moveToElementText(document.getElementById(containerid));\r\n                    range.select().createTextRange();\r\n                    document.execCommand(\"copy\");\r\n\r\n                } else if (window.getSelection) {\r\n                    var range = document.createRange();\r\n                    range.selectNode(document.getElementById(containerid));\r\n                    window.getSelection().addRange(range);\r\n                    document.execCommand(\"copy\");\r\n                    console.info(\"text copied\")\r\n                }\r\n            }\r\n\r\n\r\n            let shareReferralLink = () => {\r\n                // open popup with social media buttons\r\n                console.log('open share referral link popup ', popupService, ' .. ', $scope.referralLink);\r\n\r\n                popupService.showShareReferralLink($scope.credit.ReferralCode);\r\n\r\n            };\r\n\r\n            let getUserCredit = () => {\r\n                let {\r\n                    userId\r\n                } = $scope;\r\n\r\n                apiService.users.getUserCredit({userId})\r\n                    .then(\r\n                        (result) => {\r\n                            console.log('user.credit ', result)\r\n\r\n                            $scope.credit = result.Data;\r\n\r\n                            $scope.credit.shareReferralLink = shareReferralLink;\r\n                        },\r\n                        (reason) => {\r\n                            console.log('getUserCredit failed because: ', reason);\r\n\r\n                        });\r\n\r\n            };\r\n\r\n           $scope.fetchUserProfile();\r\n\r\n\r\n            let deregs = [];\r\n\r\n            deregs.push($rootScope.$on(enums.busEvents.googlePlacesAutocompletePlaceChanged,(event,data) => {\r\n                if (data.elementId == 'editProfileAddressField') {\r\n                    let { place } = data, { geometry } = place;\r\n\r\n                    $scope.editableProfile.User_Latitude = geometry.location.lat();\r\n                    $scope.editableProfile.User_Longitude = geometry.location.lng();\r\n                    $scope.editableProfile.User_LocationId = place.id;\r\n                }\r\n            }));\r\n\r\n            $scope.$on('$destroy',() => {\r\n                while (deregs.length)\r\n                    deregs.pop()()\r\n            });\r\n        }\r\n    ]);\r\n","'use strict';\r\nangular.module('paladinApp')\r\n    .controller('userVerificationController',[\r\n        '$rootScope',\r\n        '$scope',\r\n        'enums',\r\n        'apiService',\r\n        'appStateManager',\r\n        'toastService',\r\n        'uploadHandler',\r\n        '$timeout',\r\n        'ptUtils',\r\n        'acuantService',\r\n        'dataService',\r\n        '$stateParams',\r\n        'popupService',\r\n        '$base64',\r\n        '$translate',\r\n        'gtmService',\r\n        function (\r\n            $rootScope,\r\n            $scope,\r\n            enums,\r\n            apiService,\r\n            appStateManager,\r\n            toastService,\r\n            uploadHandler,\r\n            $timeout,\r\n            ptUtils,\r\n            acuantService,\r\n            dataService,\r\n            $stateParams,\r\n            popupService,\r\n            $base64,\r\n            $translate,\r\n            gtmService) {\r\n\r\n            if ($stateParams.bookingId) {\r\n                $scope.bookingId = $stateParams.bookingId\r\n            }\r\n            $scope.isLoading = false;\r\n            $scope.statusError = null;\r\n            $scope.selectedUploadMethod = enums.idVerificationMethod.passport;\r\n\r\n            $scope.uploadMethods = [\r\n                {\r\n                    title: 'UPLOAD_METHOD_PASS',\r\n                    value: enums.idVerificationMethod.passport,\r\n                },\r\n                {\r\n                    title: 'UPLOAD_METHOD_DL',\r\n                    value: enums.idVerificationMethod.driverLicense,\r\n                },\r\n                {\r\n                    title: 'UPLOAD_METHOD_NATIONAL_ID',\r\n                    value: enums.idVerificationMethod.id,\r\n                }\r\n            ];\r\n\r\n            $scope.uploadData = {};\r\n\r\n            let idVerificationMethodPassportTmpl =  [\r\n                {\r\n                    elementId: 'passportUpload',\r\n                    title: 'TAP_TO_UPLOAD_PASS',\r\n                    imgData: null,\r\n                    isProcessingImg: false,\r\n                    cardType:'Passport',\r\n                },\r\n                {\r\n                    elementId: 'idSelfie',\r\n                    title: 'TAKE_SELFIE',\r\n                    imgData: null,\r\n                    isProcessingImg: false,\r\n                    cardType:''\r\n                }\r\n            ];\r\n\r\n            let idVerificationMethodDriverLicenceTmpl = [\r\n                {\r\n                    elementId: 'driverLicenseFront',\r\n                    title: 'DL_FRONT',\r\n                    imgData: null,\r\n                    isProcessingImg: false,\r\n                    cardType:'DriversLicenseDuplex'\r\n                },\r\n                {\r\n                    elementId: 'driverLicenseBack',\r\n                    title: 'DL_BACK',\r\n                    imgData: null,\r\n                    isProcessingImg: false,\r\n                    cardType:'DriversLicenseDuplex'\r\n                },\r\n                {\r\n                    elementId: 'driverLicenseSelfie',\r\n                    title: 'TAKE_SELFIE',\r\n                    imgData: null,\r\n                    isProcessingImg: false,\r\n                    cardType:''\r\n                }\r\n            ];\r\n\r\n            let idVerificationMethodIdTmpl =  [\r\n                {\r\n                    elementId: 'idFront',\r\n                    title: 'NATIONAL_ID_FRONT',\r\n                    imgData: null,\r\n                    isProcessingImg: false,\r\n                    cardType:'DriversLicenseDuplex'\r\n                },\r\n                {\r\n                    elementId: 'idBack',\r\n                    title: 'NATIONAL_ID_BACK',\r\n                    imgData: null,\r\n                    isProcessingImg: false,\r\n                    cardType:'DriversLicenseDuplex'\r\n                },\r\n                {\r\n                    elementId: 'idSelfie',\r\n                    title: 'TAKE_SELFIE',\r\n                    imgData: null,\r\n                    isProcessingImg: false,\r\n                    cardType:''\r\n                }\r\n            ];\r\n\r\n            $scope.selectUploadMethod = (method) => {\r\n                $scope.selectedUploadMethod  = method;\r\n            };\r\n\r\n            $scope.clickToUpload = (elementId) => {\r\n                $scope.$$postDigest(() => {\r\n                    angular.element(document.getElementById(elementId))[0].click();\r\n                })\r\n            };\r\n\r\n            const setFreshForm = () => {\r\n                // remove selected images\r\n                $scope.uploadData[enums.idVerificationMethod.passport] = angular.copy(idVerificationMethodPassportTmpl);\r\n                $scope.uploadData[enums.idVerificationMethod.driverLicense] = angular.copy(idVerificationMethodDriverLicenceTmpl);\r\n                $scope.uploadData[enums.idVerificationMethod.id] = angular.copy(idVerificationMethodIdTmpl);\r\n            };\r\n            setFreshForm();\r\n\r\n            $scope.verifyId = async () => {\r\n                const {\r\n                    uploadData,\r\n                    selectedUploadMethod,\r\n                } = $scope;\r\n\r\n                let isValid = true;\r\n                uploadData[selectedUploadMethod].forEach((item) => {\r\n                    isValid = isValid && (item.imgData != undefined && item.imgBlob != undefined)\r\n                });\r\n\r\n                if (!isValid) {\r\n                    toastService.simpleToast($translate.instant('UPLOAD_MISSING_DOCS'));\r\n                    return\r\n                }\r\n                $scope.isLoading = true;\r\n                $scope.statusError = null;\r\n                try {\r\n                    if (selectedUploadMethod === enums.idVerificationMethod.passport) {\r\n                        const selfie = uploadData[selectedUploadMethod][1].imgBlob;\r\n                        const acuantPassUploadRes = await acuantService.processPassportImage({\r\n                            imageToProcess: uploadData[selectedUploadMethod][0].imgBlob,\r\n                            imageSource: enums.acuantImageSource.Other,\r\n                            usePreprocessing: true\r\n                        });\r\n\r\n                        if (acuantPassUploadRes && acuantPassUploadRes.data) {\r\n                            const { WebResponseCode , WebResponseDescription,FaceImage} = acuantPassUploadRes.data;\r\n                            if (WebResponseCode == 1) {\r\n                                if (FaceImage == null || FaceImage == '') {\r\n                                    throw new Error('COULD_NOT_EXTRACT_IMAGE_FROM_DATA');\r\n                                } else {\r\n                                    const base64FaceImage = goog.crypt.base64.encodeByteArray(FaceImage);\r\n                                    const faceImgBlob = ptUtils.dataUrlToBlob(`data:image/jpg;base64,${base64FaceImage}`);\r\n                                    const facialMatchRes = await acuantService.processFacialMatch({\r\n                                        idFaceImage: faceImgBlob,\r\n                                        selfie,\r\n                                    });\r\n\r\n                                    const {\r\n                                        ResponseCodeAuthorization,\r\n                                        ResponseMessageAuthorization,\r\n                                        WebResponseCode,\r\n                                        WebResponseDescription\r\n                                    } = facialMatchRes.data;\r\n\r\n                                    if (ResponseCodeAuthorization < 0)\r\n                                        throw new Error(ResponseMessageAuthorization);\r\n                                    else if (WebResponseCode < 0)\r\n                                        throw new Error(WebResponseDescription);\r\n                                    else {\r\n                                        $scope.uploadVerifiedImageToPaladinServers();\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                throw new Error(WebResponseDescription);\r\n                            }\r\n                        } else {\r\n                            throw new Error('DEFAULT_ERROR')\r\n                        }\r\n\r\n                    } else if (selectedUploadMethod === enums.idVerificationMethod.driverLicense ||\r\n                        selectedUploadMethod === enums.idVerificationMethod.id) {\r\n\r\n                        const frontImage = uploadData[selectedUploadMethod][0].imgBlob;\r\n                        const backImage = uploadData[selectedUploadMethod][1].imgBlob;\r\n                        const selfie = uploadData[selectedUploadMethod][2].imgBlob;\r\n\r\n                        const acuantDuplexUpload = await acuantService.processNICDLDuplexImage({\r\n                            frontImage,\r\n                            backImage,\r\n                            selectedRegion: enums.acuantRegions.Europe,\r\n                            imageSource: enums.acuantImageSource.Other,\r\n                            usePreprocessing: true,\r\n                        });\r\n\r\n                        // const acuantDuplexUpload = await acuantService.processDriversLicense({\r\n                        //     imageToProcess: frontImage,\r\n                        //     selectedRegion: enums.acuantRegions.Europe,\r\n                        //     imageSource: enums.acuantImageSource.Other,\r\n                        //     usePreprocessing: true,\r\n                        // });\r\n\r\n                        const {\r\n                            ResponseCodeAuthorization,\r\n                            ResponseMessageAuthorization,\r\n                            ResponseCodeAutoDetectState,\r\n                            ResponseCodeAutoDetectStateDesc,\r\n                            ResponseCodeProcState,\r\n                            ResponseCodeProcessStateDesc,\r\n                            WebResponseCode,\r\n                            WebResponseDescription,\r\n                            FaceImage\r\n                        } = acuantDuplexUpload.data;\r\n\r\n                        if (ResponseCodeAuthorization < 0)\r\n                            throw new Error(ResponseMessageAuthorization);\r\n                        else if (ResponseCodeAutoDetectState < 0)\r\n                            throw new Error(ResponseCodeAutoDetectStateDesc);\r\n                        else if (ResponseCodeProcState < 0)\r\n                            throw new Error(ResponseCodeProcessStateDesc);\r\n                        else if (WebResponseCode < 0)\r\n                            throw new Error(WebResponseDescription);\r\n                        else if (FaceImage == null || FaceImage == '') {\r\n                            throw new Error('COULD_NOT_EXTRACT_IMAGE_FROM_DATA');\r\n                        } else {\r\n                            const base64FaceImage = goog.crypt.base64.encodeByteArray(FaceImage);\r\n                            const faceImgBlob = ptUtils.dataUrlToBlob(`data:image/jpg;base64,${base64FaceImage}`);\r\n                            const facialMatchRes = await acuantService.processFacialMatch({\r\n                                idFaceImage: faceImgBlob,\r\n                                selfie,\r\n                            });\r\n\r\n                            const {\r\n                                ResponseCodeAuthorization,\r\n                                ResponseMessageAuthorization,\r\n                                WebResponseCode,\r\n                                WebResponseDescription\r\n                            } = facialMatchRes.data;\r\n\r\n                            if (ResponseCodeAuthorization < 0)\r\n                                throw new Error(ResponseMessageAuthorization);\r\n                            else if (WebResponseCode < 0)\r\n                                throw new Error(WebResponseDescription);\r\n                            else {\r\n                                $scope.uploadVerifiedImageToPaladinServers();\r\n                                gtmService.trackEvent('id-verification', 'id-verification-successful');\r\n                            }\r\n                        }\r\n\r\n                    } else {\r\n                        // toastService.simpleToast('upload shit');\r\n                        new Error('Operation not supported') // will never happen\r\n                    }\r\n                } catch (err) {\r\n                    $scope.isLoading = false;\r\n                    gtmService.trackEvent('id-verification', 'id-verification-failed');\r\n\r\n                    // let requestManualVerification = () => {\r\n                        // make api call with same documents\r\n                        console.log('requestManualVerification ', $scope)\r\n                        if (selectedUploadMethod === enums.idVerificationMethod.passport) {\r\n                            apiService.verification.sendToManualVerification({\r\n                                passportImage: uploadData[selectedUploadMethod][0].imgData.split(',')[1],\r\n                                selfie: uploadData[selectedUploadMethod][1].imgData.split(',')[1],\r\n                                userId: appStateManager.getUserId(),\r\n                                bookingId: $scope.bookingId\r\n                            }).then((result)=>{\r\n                                    // redirect to rental status page\r\n                                    $scope.finishVerificationManual();\r\n                                    toastService.simpleToast($translate.instant('ID_VERIFY_FAIL_POPUP_ON_SUCCESS'))\r\n                                },\r\n                                (err)=>{\r\n                                    console.log('sendToManualVerification error', err)\r\n                                    setFreshForm();\r\n                                    toastService.simpleToast($translate.instant('ID_VERIFY_FAIL_POPUP_ON_FAIL'))\r\n                                });\r\n                        } else if (selectedUploadMethod === enums.idVerificationMethod.driverLicense ||\r\n                            selectedUploadMethod === enums.idVerificationMethod.id){\r\n\r\n                            apiService.verification.sendToManualVerification({\r\n                                NICDLFront: uploadData[selectedUploadMethod][0].imgData.split(',')[1],\r\n                                NICDLBack: uploadData[selectedUploadMethod][1].imgData.split(',')[1],\r\n                                selfie: uploadData[selectedUploadMethod][2].imgData.split(',')[1],\r\n                                userId: appStateManager.getUserId(),\r\n                                bookingId: $scope.bookingId\r\n                            }).then((result)=>{\r\n                                    // redirect to rental status page\r\n                                    $scope.finishVerificationManual();\r\n                                    toastService.simpleToast($translate.instant('ID_VERIFY_FAIL_POPUP_ON_SUCCESS'))\r\n                                },\r\n                                (err)=>{\r\n                                    console.log('sendToManualVerification err', err)\r\n                                    setFreshForm();\r\n                                    toastService.simpleToast($translate.instant('ID_VERIFY_FAIL_POPUP_ON_FAIL'))\r\n                                });\r\n                        }\r\n                    // };\r\n\r\n                    // console.log('??????????? ', err.data, ' ... ', err.message, ' ... ', 'DEFAULT_ERROR')\r\n                    // $scope.statusError = (err.data || {}).Message || err.message || $translate.instant('DEFAULT_ERROR');\r\n                    // popupService.showIdVerificationFailureHandler({\r\n                    //     message: $scope.statusError,\r\n                    //     retryClb: () => {\r\n                    //         setFreshForm();\r\n                    //     },\r\n                    //     sendToManualClb: requestManualVerification\r\n                    // });\r\n                    // $rootScope.$emit(enums.busNavigation.transactionDetailed,{ bookingId: $scope.bookingId, replace: true  });\r\n                    $scope.$apply();\r\n                }\r\n            };\r\n\r\n            $scope.uploadVerifiedImageToPaladinServers = async () => {\r\n                const {\r\n                    uploadData,\r\n                    selectedUploadMethod\r\n                } = $scope;\r\n\r\n                if (selectedUploadMethod === enums.idVerificationMethod.passport) {\r\n\r\n                    const passportImage = uploadData[selectedUploadMethod][0].imgData.split(',')[1];\r\n                    const selfie = uploadData[selectedUploadMethod][1].imgData.split(',')[1];\r\n                    const passUploadRes = await apiService.verification.uploadPassport({\r\n                        passportImage,\r\n                        selfie,\r\n                        userId: appStateManager.getUserId()\r\n                    });\r\n\r\n                    if (passUploadRes && passUploadRes.Status === 'success') {\r\n                        $scope.finishVerification()\r\n                    } else {\r\n                        throw new Error(passUploadRes.Message || 'DEFAULT_ERROR');\r\n                    }\r\n                } else if (selectedUploadMethod === enums.idVerificationMethod.driverLicense ||\r\n                    selectedUploadMethod === enums.idVerificationMethod.id) {\r\n\r\n                    const NICDLFront = uploadData[selectedUploadMethod][0].imgData.split(',')[1];\r\n                    const NICDLBack = uploadData[selectedUploadMethod][1].imgData.split(',')[1];\r\n                    const selfie = uploadData[selectedUploadMethod][2].imgData.split(',')[1];\r\n\r\n                    const NICDLUploadRes = await  apiService.verification.uploadNICDL({\r\n                        NICDLFront,\r\n                        NICDLBack,\r\n                        selfie,\r\n                        userId: appStateManager.getUserId()\r\n                    });\r\n\r\n                    if (NICDLUploadRes && NICDLUploadRes.Status === 'success') {\r\n                        $scope.finishVerification()\r\n                    } else {\r\n                        throw new Error(NICDLUploadRes.Message || 'DEFAULT_ERROR');\r\n                    }\r\n                }\r\n            };\r\n\r\n            $scope.finishVerification = () => {\r\n                $scope.isLoading = false;\r\n                $scope.statusError = null;\r\n\r\n                popupService.showAlert('SUCCESS','ID_SUCCESSFULLY_VERIFIED')\r\n                    .finally(() => {\r\n                        if ($scope.bookingId)\r\n                            $rootScope.$emit(enums.busNavigation.transactionDetailed,{ bookingId: $scope.bookingId, replace: true  });\r\n                        else\r\n                            $rootScope.$emit(enums.busNavigation.userProfile,{ userId: appStateManager.getUserId() });\r\n                    })\r\n            };\r\n\r\n            $scope.finishVerificationManual = () => {\r\n                $scope.isLoading = false;\r\n                $scope.statusError = null;\r\n                //show popup only for Desktop\r\n                if (ptUtils.isMobile.any()) {\r\n                    if ($scope.bookingId)\r\n                        $rootScope.$emit(enums.busNavigation.transactionDetailed,{ bookingId: $scope.bookingId, replace: true  });\r\n                    else\r\n                        $rootScope.$emit(enums.busNavigation.userProfile,{ userId: appStateManager.getUserId() });\r\n                } else {\r\n                popupService.showAlert('ID_VER_MANUAL_POPUP','ID_VER_MANUAL_POPUP_TEXT')\r\n                    .finally(() => {\r\n                        if ($scope.bookingId)\r\n                            $rootScope.$emit(enums.busNavigation.transactionDetailed,{ bookingId: $scope.bookingId, replace: true  });\r\n                        else\r\n                            $rootScope.$emit(enums.busNavigation.userProfile,{ userId: appStateManager.getUserId() });\r\n                    })\r\n                }\r\n                \r\n            };\r\n\r\n            $scope.skipVerification = () => {\r\n                $rootScope.$emit(enums.busNavigation.transactionDetailed,{ bookingId: $scope.bookingId, replace: true });\r\n            };\r\n\r\n            $scope.onUploaded = (inputElement) => {\r\n                if (inputElement.files && inputElement.files.length > 0) {\r\n                    const {\r\n                        uploadData,\r\n                        selectedUploadMethod\r\n                    } = $scope;\r\n                    const photoIndex = uploadData[selectedUploadMethod].findIndex((item) => item.elementId === inputElement.id);\r\n                    if (photoIndex != undefined) {\r\n                        $scope.$evalAsync(() => {\r\n                            uploadData[selectedUploadMethod][photoIndex].isProcessingImg = true;\r\n                            // Resize\r\n                            canvasResize(inputElement.files[0], {\r\n                                quality: 75,\r\n                                isPreprocessing: true,\r\n                                cardType: uploadData[selectedUploadMethod][photoIndex].cardType,\r\n                                maxW: 2048,\r\n                                maxH: 2008,\r\n                                isiOS: ptUtils.isMobile.iOS(),\r\n                                callback: function (data, width, height) {\r\n                                    $scope.$evalAsync(() => {\r\n                                        uploadData[selectedUploadMethod][photoIndex].imgData = data;\r\n                                        uploadData[selectedUploadMethod][photoIndex].imgBlob = ptUtils.dataUrlToBlob(data);\r\n                                        uploadData[selectedUploadMethod][photoIndex].isProcessingImg = false;\r\n                                    })\r\n                                }\r\n                            });\r\n                            // uploadHandler.convertInputElementToBas64(inputElement)\r\n                            //     .then((data) => {\r\n                            //         $scope.$evalAsync(() => {\r\n                            //             uploadData[selectedUploadMethod][photoIndex].imgData = data.original64;\r\n                            //             uploadData[selectedUploadMethod][photoIndex].imgBlob = ptUtils.dataUrlToBlob(data.original64);\r\n                            //             uploadData[selectedUploadMethod][photoIndex].isProcessingImg = false;\r\n                            //         })\r\n                            //     })\r\n                            //     .catch((err) => {\r\n                            //         toastService.simpleToast(JSON.stringify(err));\r\n                            //         console.error(err);\r\n                            //     })\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n\r\n            $scope.showToast = (message, delay = 3000) => {\r\n                $mdToast.show(\r\n                    $mdToast.simple()\r\n                        .textContent(message)\r\n                        .hideDelay(delay)\r\n                );\r\n            };\r\n\r\n\r\n        }\r\n    ]);","'use strict';\r\nangular.module('paladinApp')\r\n    .directive('authedAction',[\r\n        '$rootScope',\r\n        'enums',\r\n        'appStateManager',\r\n        'popupService',\r\n        function ($rootScope,\r\n                  enums,\r\n                  appStateManager,\r\n                  popupService) {\r\n\r\n                return {\r\n                    restrict: 'A',\r\n                    link: function ($scope, elem, attr) {\r\n\r\n\r\n                        const deAuthedLoginDiv = document.createElement('div');\r\n                        deAuthedLoginDiv.style.position = 'absolute';\r\n                        deAuthedLoginDiv.style.top = '0';\r\n                        deAuthedLoginDiv.style.left = '0';\r\n                        deAuthedLoginDiv.style.height = '100%';\r\n                        deAuthedLoginDiv.style.width = '100%';\r\n                        // deAuthedLoginDiv.style.backgroundColor = 'red';\r\n                        // deAuthedLoginDiv.style.opacity = '0.5';\r\n                        deAuthedLoginDiv.style.cursor = 'pointer';\r\n\r\n                        // deAuthedLoginDiv.style.zIndex = '200';\r\n                        deAuthedLoginDiv.onclick = () => {\r\n                            // deAuthedLoginDiv.style.zIndex = 'auto';\r\n                            popupService.showLoginSignupPopup(false)\r\n                                .finally(() => {\r\n                                });\r\n                            isReloadPage = true;\r\n                        };\r\n\r\n                        elem[0].classList.add('forceRelativePosition');\r\n                        let isAdded = false;\r\n                        let isReloadPage = false;\r\n\r\n                        const validateAuth = () => {\r\n                            if (appStateManager.getUserId()) {\r\n                                if (isAdded) {\r\n                                    isAdded = false;\r\n                                    elem[0].removeChild(deAuthedLoginDiv);\r\n                                    if (isReloadPage) {\r\n                                        location.reload();\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                if (!isAdded) {\r\n                                    isAdded = true;\r\n                                    elem[0].appendChild(deAuthedLoginDiv)\r\n                                }\r\n                            }\r\n                        };\r\n\r\n\r\n                        validateAuth();\r\n\r\n\r\n                        let deregs = [];\r\n\r\n                        deregs.push($rootScope.$on(enums.busEvents.updatedUser, (event, data) => {\r\n                            validateAuth()\r\n                        }));\r\n\r\n                        $scope.$on('$destroy', () => {\r\n                            while (deregs.length)\r\n                                deregs.pop()();\r\n                        });\r\n\r\n                    }\r\n                }\r\n        }]);","'use strict';\r\nangular.module('paladinApp')\r\n    .directive('bookingCoupon',[\r\n        '$rootScope',\r\n        'enums',\r\n        'apiService',\r\n        'appStateManager',\r\n        'ptUtils',\r\n        function (\r\n            $rootScope,\r\n            enums,\r\n            apiService,\r\n            appStateManager,\r\n            ptUtils\r\n            ) {\r\n\r\n                return {\r\n                    restrict: 'E',\r\n                    templateUrl: './views/templates/bookingCoupon.tpl.html',\r\n                    scope: {\r\n                        onCouponValidation: '&',\r\n                    },\r\n                    link: function ($scope, elem, attr) {\r\n                        $scope.isAddingCoupon = false;\r\n                        $scope.isLoading = false;\r\n                        $scope.error = null;\r\n                        $scope.coupon = { code:'' };\r\n                        $scope.addCoupon = () => {\r\n                            $scope.isAddingCoupon = true;\r\n                        };\r\n                        $scope.cancel = () => {\r\n                            $scope.isAddingCoupon = false;\r\n                        };\r\n\r\n                        $scope.validateCoupon = () => {\r\n                            // if (!ptUtils.regexPatterns.numbersOnly.test($scope.coupon.code)) {\r\n                            //     return $scope.error = 'Please insert a valid coupon'\r\n                            // }\r\n                            $scope.isLoading = true;\r\n                            const userId = appStateManager.getUserId();\r\n                            const coupon = $scope.coupon.code;\r\n                            apiService.payments.verifyCoupon({\r\n                                userId,\r\n                                coupon\r\n                            })\r\n                                .then((res) => {\r\n                                    $scope.isLoading = false;\r\n                                    $scope.onCouponValidation()(res.Data);\r\n                                    $scope.isAddingCoupon = false;\r\n                                    $scope.coupon.code = '';\r\n\r\n                                })\r\n                                .catch((err) => {\r\n                                    $scope.isLoading = false;\r\n                                    $scope.error = err.data.Message || 'PLEASE_INSERT_VALID_COUPON';\r\n                                    // console.error(JSON.stringify(err))\r\n                                })\r\n                        }\r\n\r\n                    }\r\n                }\r\n        }]);\r\n","angular.module('paladinApp')\r\n    .directive('bookingDatePicker',[\r\n        '$rootScope',\r\n        'moment',\r\n        'popupService',\r\n        'ptUtils',\r\n        '$mdMedia',\r\n        function ($rootScope,moment,popupService,ptUtils,$mdMedia) {\r\n            return {\r\n                restrict: 'E',\r\n                templateUrl: './views/templates/bookingDatePicker.tpl.html',\r\n                scope: {\r\n                    resultCallback: '&',\r\n                    defaultValue: '=?',\r\n                    startDate: '=?',\r\n                    endDate:'=?',\r\n                    dateRange: '=?',\r\n                    productBookingDetails: '=?',\r\n                    product:'=?'\r\n                },\r\n                link: function ($scope, elem, attr) {\r\n                    // const dates = ptUtils.getProductFirstAvailableDatesToRent($scope.productBookingDetails);\r\n                    \r\n                    const updateDateRanges = () => {\r\n                        if ($scope.productBookingDetails != null) {\r\n                            dateRanges = ptUtils.getBookedDateRanges($scope.productBookingDetails);\r\n                        } \r\n                    }\r\n                    \r\n                    let dateRanges = []; \r\n                    updateDateRanges();\r\n\r\n                    $scope.isDateAvailable = ($date) => {\r\n                        const momentDate = moment($date);\r\n                        for (let i = 0; i < dateRanges.length ; i++)\r\n                            if (momentDate.isBetween(dateRanges[i].startDate,dateRanges[i].endDate) ||\r\n                                momentDate.isSame(dateRanges[i].startDate) ||\r\n                                momentDate.isSame(dateRanges[i].endDate))\r\n                                return true;\r\n\r\n                        if (moment().isBefore($date)) return false; // TODO: - Check if product available for rent at dates\r\n\r\n                        return true;\r\n                    };\r\n                    $scope.startDate = $scope.startDate || undefined;\r\n                    $scope.endDate = $scope.endDate || undefined;\r\n                    $scope.dateRange = {};\r\n\r\n                    $scope.advancedModel = { selectedTemplate: 'Last 3 Days' };\r\n                    $scope.pickerModel = {\r\n                        selectedTemplate:\tfalse,\r\n                        dateStart: $scope.startDate,\r\n                        dateEnd: undefined,\r\n                    };\r\n\r\n                    $scope.pickerTranslations = ptUtils.getTranslationDictForDatePicker();\r\n\r\n                    $scope.selectDate = () => {\r\n                        if (!$mdMedia('gt-sm')) {\r\n                            popupService.showDateRangePicker($scope.productBookingDetails, $scope.product)\r\n                                .then((data) => {\r\n                                    if ($scope.resultCallback) {\r\n                                        $scope.resultCallback()({\r\n                                            startDate: moment(data.dateStart),\r\n                                            endDate: moment(data.dateEnd),\r\n                                        });\r\n                                    }\r\n                                })\r\n                                .catch(() => console.log('canceled date picking'))\r\n                        } else {\r\n                            $scope.$$postDigest(() => {\r\n                                angular.element(document.querySelector(`#${elem[0].id} #desktopPicker span.md-select-value`))[0].click();\r\n                            })\r\n                        }\r\n                    };\r\n                    $scope.onDesktopSelect = ($dates) => {\r\n                        if ($dates && $dates.length > 0) {\r\n                            const dateStart = moment($dates[0]);\r\n                            const dateEnd = moment($dates[$dates.length - 1]);\r\n                            $scope.pickerModel.dateStart = undefined;\r\n                            $scope.pickerModel.dateEnd = undefined;\r\n                            if ($scope.resultCallback) {\r\n                                $scope.resultCallback()({\r\n                                    startDate:moment(dateStart),\r\n                                    endDate: moment(dateEnd),\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n\r\n\r\n                    // deregs.push($scope.$watchGroup([\r\n                    //     'startDate',\r\n                    //     'endDate'\r\n                    // ],function () {\r\n                    //     // $scope.pickerModel.dateStart = undefined;\r\n                    //     // $scope.pickerModel.dateEnd = undefined;\r\n                    // }));\r\n                    let deregs = [];\r\n\r\n                    deregs.push($scope.$watch('productBookingDetails',() => {\r\n                        updateDateRanges();\r\n                    }));\r\n\r\n                    $scope.$on('$destroy', () => {\r\n                        while (deregs.length)\r\n                            deregs.pop()();\r\n                    })\r\n                }\r\n            }\r\n        }]);","'use strict';\r\nangular.module('paladinApp')\r\n    .directive('bookingDetailedCtaButton',[\r\n        '$rootScope',\r\n        'enums',\r\n        'appStateManager',\r\n        'apiService',\r\n        'ptUtils',\r\n        'toastService',\r\n        'ptLog',\r\n        'transactionService',\r\n        'productReviewService',\r\n        function ($rootScope,\r\n                  enums,\r\n                  appStateManager,\r\n                  apiService,\r\n                  ptUtils,\r\n                  toastService,\r\n                  ptLog,\r\n                  transactionService,\r\n                  productReviewService) {\r\n            return {\r\n                restrict: 'E',\r\n                templateUrl:'./views/templates/bookingDetailedCTAButton.tpl.html',\r\n                scope: {\r\n                    booking: '='\r\n                },\r\n                link: function ($scope, elem, attr) {\r\n                    $scope.btns = [];\r\n\r\n                    const getTextAndCTAforTransactionStatus = (status,isLender,booking,isTryAndBuy) => {\r\n                        $scope.btns = [];\r\n                        switch (status) {\r\n                            case enums.productRentalStatus.notVerified: {\r\n                                if (!isLender) {\r\n                                    $scope.btns.push({ // Verify ID\r\n                                        text: 'VERIFY_ID',\r\n                                        BL: (booking) => {\r\n                                            $rootScope.$emit(enums.busNavigation.idVerification,{bookingId:booking.Booking_Id});\r\n                                        },\r\n                                        isEnabled: true,\r\n                                    })\r\n                                }\r\n                                break;\r\n                            }\r\n                            case enums.productRentalStatus.requested: {\r\n                                if (!isLender) {\r\n                                    $scope.btns.push({ // Cancel Request\r\n                                        text: 'CANCEL_REQUEST',\r\n                                        BL: (booking) => transactionService.rejectRental(booking,false) ,\r\n                                        isEnabled: true,\r\n                                        isDestructive: true,\r\n                                    })\r\n                                } else {\r\n                                    $scope.btns.push({\r\n                                        text: 'DECLINE_REQUEST',\r\n                                        BL: (booking) => transactionService.rejectRental(booking,true),\r\n                                        isEnabled: true,\r\n                                        isDestructive: true,\r\n                                    });\r\n                                    $scope.btns.push({\r\n                                        text: 'ACCEPT_REQUEST',\r\n                                        BL: (booking) => transactionService.acceptRental(booking),\r\n                                        isEnabled: true,\r\n                                    });\r\n\r\n                                }\r\n                                break;\r\n                            }\r\n\r\n                            case enums.productRentalStatus.canceled: {\r\n                                if (!isLender) {\r\n                                    $scope.btns.push({\r\n                                        text: 'REQUEST_AGAIN',\r\n                                        BL: (booking) => $rootScope.$emit(enums.busNavigation.productDetailed,{product: booking}),\r\n                                        isEnabled: true,\r\n                                    })\r\n                                }\r\n                                break;\r\n                            }\r\n                            case enums.productRentalStatus.accepted: {\r\n                                if (!isLender) {\r\n                                    $scope.btns.push({\r\n                                        text: 'CANCEL_BOOKING',\r\n                                        BL:(booking) => transactionService.cancelRental(booking,false),\r\n                                        isEnabled: true,\r\n                                        isDestructive: true,\r\n                                    });\r\n                                    $scope.btns.push({\r\n                                        text: 'START_RENTAL',\r\n                                        BL:(booking) => transactionService.startRental(booking),\r\n                                        isEnabled: true,\r\n                                    });\r\n                                } else {\r\n                                    $scope.btns.push({\r\n                                        text: 'CANCEL_BOOKING',\r\n                                        BL:(booking) => transactionService.cancelRental(booking,true),\r\n                                        isEnabled: true,\r\n                                        isDestructive: true,\r\n                                    });\r\n                                }\r\n                                break;\r\n                            }\r\n\r\n                            case enums.productRentalStatus.timeout: {\r\n                                if (!isLender) {\r\n                                    if (booking.Booking_ReviewStatus != enums.bookingReviewStatus.reviewByBorrower &&\r\n                                        booking.Booking_ReviewStatus != enums.bookingReviewStatus.reviewByBoth) {\r\n                                        $scope.btns.push({\r\n                                            text: 'REVIEW_LENDER',\r\n                                            BL: (booking) => productReviewService.startReviewFlow(booking, true),\r\n                                            isEnabled: true,\r\n                                        });\r\n                                    } else {\r\n\r\n                                        $scope.btns.push({\r\n                                            text: 'REQUEST_AGAIN',\r\n                                            BL: (booking) => $rootScope.$emit(enums.busNavigation.productDetailed,{product: booking}),\r\n                                            isEnabled: true,\r\n                                        });\r\n                                    }   \r\n                                }\r\n                                break;\r\n                            }\r\n\r\n                            case enums.productRentalStatus.denied: {\r\n                                $scope.btns.push({\r\n                                    text: 'REQUEST_AGAIN',\r\n                                    BL: (booking) => $rootScope.$emit(enums.busNavigation.productDetailed,{product: booking}),\r\n                                    isEnabled: true,\r\n                                });\r\n                             \r\n                                break;\r\n                            }\r\n                            case enums.productRentalStatus.canceledByLender: {\r\n                                if (!isLender && !isTryAndBuy) {\r\n                                    $scope.btns.push({\r\n                                        text: 'REVIEW_LENDER',\r\n                                        BL: (booking) => productReviewService.startReviewFlow(booking, true),\r\n                                        isEnabled: true,\r\n                                    });\r\n                                }\r\n                                break;\r\n                            }\r\n                            case enums.productRentalStatus.criticalCancel:\r\n                            case enums.productRentalStatus.moderateCancel: {\r\n                                if (isLender) {\r\n                                    $scope.btns.push({\r\n                                        text: 'REVIEW_BORROWER',\r\n                                        BL: (booking) => productReviewService.startReviewFlow(booking, false),\r\n                                        isEnabled: true,\r\n                                    });\r\n                                }\r\n                                break;\r\n                            }\r\n                            case enums.productRentalStatus.started: {\r\n                                if (isLender) {\r\n                                    $scope.btns.push({\r\n                                        text: 'END_RENTAL',\r\n                                        BL: (booking) => transactionService.endRental(booking),\r\n                                        isEnabled: true,\r\n                                    })\r\n                                } else if (isTryAndBuy) {\r\n                                    $scope.btns.push({\r\n                                        text: 'BUY_NOW',\r\n                                        BL: (booking) => $rootScope.$emit(enums.busNavigation.paymentDetailed,{productId: booking.Product_Id,  purchase: true, bookingId: booking.Booking_Id}),\r\n                                        isEnabled: true,\r\n                                    })\r\n                                }\r\n                                break;\r\n                            }\r\n                            case enums.productRentalStatus.ended: {\r\n                                    if (!isLender) {\r\n                                        if (booking.Booking_ReviewStatus != enums.bookingReviewStatus.reviewByBorrower &&\r\n                                            booking.Booking_ReviewStatus != enums.bookingReviewStatus.reviewByBoth) {\r\n                                                $scope.btns.push({\r\n                                                    text: 'REVIEW_LENDER',\r\n                                                    BL: (booking) => productReviewService.startReviewFlow(booking, true),\r\n                                                    isEnabled: true,\r\n                                                });\r\n                                        } else {     \r\n                                            $scope.btns.push({\r\n                                                text: 'REQUEST_AGAIN',\r\n                                                BL: (booking) => $rootScope.$emit(enums.busNavigation.productDetailed,{product: booking}),\r\n                                                isEnabled: true,\r\n                                            });\r\n                                        }\r\n                                        if (isTryAndBuy) {\r\n                                            $scope.btns.push({\r\n                                                text: 'BUY_NOW',\r\n                                                BL: (booking) => $rootScope.$emit(enums.busNavigation.paymentDetailed,{ productId: booking.Product_Id, purchase: true, bookingId: booking.Booking_Id}),\r\n                                                isEnabled: true,\r\n                                            })\r\n                                        }\r\n                                    } else {\r\n                                        if (booking.Booking_ReviewStatus != enums.bookingReviewStatus.reviewByLender &&\r\n                                            booking.Booking_ReviewStatus != enums.bookingReviewStatus.reviewByBoth) {\r\n                                                $scope.btns.push({\r\n                                                    text: 'REVIEW_BORROWER',\r\n                                                    BL: (booking) => productReviewService.startReviewFlow(booking, false),\r\n                                                    isEnabled: true,\r\n                                                });\r\n                                        }\r\n\r\n                                        if (!booking.Lender_StripeAccount) {\r\n                                            $scope.btns.push({\r\n                                                text:'CREATE_STRIPE_ACCOUNT',\r\n                                                BL:(booking) => transactionService.endRentalForStripeAccountOnly(booking),\r\n                                                isEnabled: true,\r\n                                            })\r\n                                        }\r\n                                    }\r\n                                break;\r\n                            }\r\n                            case enums.productRentalStatus.timeoutByBorrower: {\r\n                                if (isLender) {\r\n                                        $scope.btns.push({\r\n                                            text: 'REVIEW_BORROWER',\r\n                                            BL: () => productReviewService.startReviewFlow(booking, false),\r\n                                            isEnabled: true,\r\n                                        })\r\n                                }\r\n                                break;\r\n                            }\r\n                        }\r\n                    };\r\n                    $scope.init = () => {\r\n                        const userId = appStateManager.getUserId();\r\n                        const isUserLender = $scope.booking.Lender_Id == userId;\r\n                        const bookingStatus = $scope.booking.BookingStatus[$scope.booking.BookingStatus.length - 1].Status_TrackId;\r\n                        let { color, text } = ptUtils.getDisplayDataForTransactionStatus(bookingStatus);\r\n                        $scope.mainColor = color;\r\n                        getTextAndCTAforTransactionStatus(bookingStatus,isUserLender,$scope.booking, $scope.booking.IsTryAndBuy);\r\n                    };\r\n                    $scope.ctaClicked = () => {\r\n\r\n                    };\r\n\r\n                    $scope.init()\r\n                }\r\n            }}]);","'use strict';\r\nangular.module('paladinApp')\r\n    .directive('bookingDetailedStatus',[\r\n        '$rootScope',\r\n        'enums',\r\n        'appStateManager',\r\n        'apiService',\r\n        'ptUtils',\r\n        function ($rootScope,\r\n                  enums,\r\n                  appStateManager,\r\n                  apiService,\r\n                  ptUtils) {\r\n            return {\r\n                restrict: 'E',\r\n                templateUrl:'./views/templates/bookingDetailedStatus.tpl.html',\r\n                scope: {\r\n                    booking: '=',\r\n                    // productBookingDetails: '=',\r\n                    // product: '='\r\n                },\r\n                link: function ($scope, elem, attr) {\r\n                    $scope.prices = [];\r\n                    $scope.youWontBeChargedText = undefined;\r\n\r\n                    const init = () => {\r\n\r\n                        if ($scope.booking && $scope.booking.BookingStatus && $scope.booking.BookingStatus.length > 0)\r\n                            $scope.youWontBeChargedText =\r\n                                $scope.booking.BookingStatus[$scope.booking.BookingStatus.length - 1].Status_TrackId == enums.productRentalStatus.requested ?\r\n                                'YOU_WONT_BE_CHARGED_MSG':\r\n                                undefined;\r\n\r\n                        // Booking_PickupProduct\r\n                        // FullEndDate\r\n                        // FullStartDate\r\n                        // Discount\r\n                        // ptUtils.calculatePricingListForProduct($scop)\r\n\r\n                        ptUtils.calculatePriceingListForBooking($scope.booking)\r\n                            .then((prices) => {\r\n                                $scope.$evalAsync(() => {\r\n                                    $scope.prices = prices;\r\n                                })\r\n                            })\r\n                    };\r\n\r\n                    init();\r\n                }\r\n            }\r\n        }\r\n    ])","'use strict';\r\nangular.module('paladinApp')\r\n    .directive('bookingListItem',[\r\n        '$rootScope',\r\n        'enums',\r\n        'appStateManager',\r\n        function ($rootScope,\r\n                  enums,\r\n                  appStateManager) {\r\n            return {\r\n                restrict: 'E',\r\n                templateUrl: './views/templates/bookingsListItem.tpl.html',\r\n                scope: {\r\n                    booking: '=',\r\n                    isLent: '=?',\r\n                },\r\n                link: function ($scope, elem, attr) {\r\n                    $scope.isLent = appStateManager.getUserId() == $scope.booking.Lender_Id;\r\n                }\r\n            }\r\n    }]);","'use strict';\r\nangular.module('paladinApp')\r\n    .directive('bookingTrackerInfo',[\r\n        '$rootScope',\r\n        'enums',\r\n        'appStateManager',\r\n        'apiService',\r\n        'ptUtils',\r\n        '$sce',\r\n        '$translate',\r\n        'productReviewService',\r\n        function (\r\n            $rootScope,\r\n            enums,\r\n            appStateManager,\r\n            apiService,\r\n            ptUtils,\r\n            $sce,\r\n            $translate,\r\n            productReviewService) {\r\n            return {\r\n                restrict: 'E',\r\n                templateUrl:'./views/templates/bookingTrackerInfo.tpl.html',\r\n                scope: {\r\n                    booking:'=',\r\n                },\r\n                link: function ($scope, elem, attr) {\r\n\r\n                    const getTutorialHTMLTemplate = (translationId) => {\r\n                        return ptUtils.parseBookingStepTutorialHTMLTemplateForTranslationId(translationId);\r\n                    };\r\n\r\n                    $scope.getStaticBookingStepsP2P = (isLender) => {\r\n\r\n                        if (isLender) {\r\n                            return [\r\n                                {\r\n                                    label:'BOOKING_TRACK_INFO_REQUEST_RECEIVED',\r\n                                    status: enums.trackingStep.pending,\r\n                                    description: getTutorialHTMLTemplate('BookingStatusRequested_Lender'),\r\n                                    date: undefined,\r\n                                    isCurrent: false,\r\n                                    rentalStatus: [enums.productRentalStatus.requested]\r\n                                },\r\n                                {\r\n                                    label : 'BOOKING_TRACK_INFO_REQUEST_ACCEPTED',\r\n                                    status: enums.trackingStep.pending,\r\n                                    description: getTutorialHTMLTemplate('BookingStatusAccepted_Lender'),\r\n                                    date: undefined,\r\n                                    isCurrent: false,\r\n                                    rentalStatus: [enums.productRentalStatus.accepted]\r\n                                },\r\n                                {\r\n                                    label: 'BOOKING_TRACK_INFO_START',\r\n                                    status: enums.trackingStep.pending,\r\n                                    description: getTutorialHTMLTemplate('BookingStatusStarted_Lender'),\r\n                                    date: undefined,\r\n                                    isCurrent: false,\r\n                                    rentalStatus: [enums.productRentalStatus.started]\r\n                                },\r\n                                {\r\n                                    label: 'BOOKING_TRACK_INFO_END',\r\n                                    status: enums.trackingStep.pending,\r\n                                    description: getTutorialHTMLTemplate('BookingStatusEnded_Lender'),\r\n                                    date: undefined,\r\n                                    isCurrent: false,\r\n                                    rentalStatus: [enums.productRentalStatus.ended]\r\n                                }\r\n                            ]\r\n                        } else {\r\n\r\n                          return [\r\n                              {\r\n                                  label:'BOOKING_TRACK_INFO_CARD_VERIFICATION',\r\n                                  status: enums.trackingStep.failure,\r\n                                  description: getTutorialHTMLTemplate('BookingStatusNotVerified_Borrower'),\r\n                                  date: undefined,\r\n                                  isCurrent: true,\r\n                                  rentalStatus: [enums.productRentalStatus.verified, enums.productRentalStatus.verifying]\r\n                              },\r\n                              {\r\n                                  label:'BOOKING_TRACK_INFO_REQUEST_SENT',\r\n                                  status: enums.trackingStep.pending,\r\n                                  description: getTutorialHTMLTemplate('BookingStatusRequested_Borrower'),\r\n                                  date: undefined,\r\n                                  isCurrent: false,\r\n                                  rentalStatus: [enums.productRentalStatus.requested]\r\n                              },\r\n                              {\r\n                                  label:'BOOKING_TRACK_INFO_AWAIT_ACCEPT',\r\n                                  status: enums.trackingStep.pending,\r\n                                  description: getTutorialHTMLTemplate('BookingStatusAccepted_Borrower'),\r\n                                  date: undefined,\r\n                                  isCurrent: false,\r\n                                  rentalStatus: [enums.productRentalStatus.accepted]\r\n                              },\r\n                              {\r\n                                  label: 'BOOKING_TRACK_INFO_START',\r\n                                  status: enums.trackingStep.pending,\r\n                                  description: getTutorialHTMLTemplate('BookingStatusStarted_Borrower'),\r\n                                  date: undefined,\r\n                                  isCurrent: false,\r\n                                  rentalStatus: [enums.productRentalStatus.started]\r\n                              },\r\n                              {\r\n                                  label: 'BOOKING_TRACK_INFO_END',\r\n                                  status: enums.trackingStep.pending,\r\n                                  description: getTutorialHTMLTemplate('BookingStatusEnded_Borrower'),\r\n                                  date: undefined,\r\n                                  isCurrent: false,\r\n                                  rentalStatus: [enums.productRentalStatus.ended]\r\n                              }\r\n                          ]\r\n                        }\r\n                    };\r\n\r\n                    $scope.getStaticBookingStepsTnB = (isLender) => {\r\n                        //lender steps\r\n                        if (isLender) {\r\n                            return [\r\n                                {\r\n                                    label:'BOOKING_TRACK_INFO_BOOKED',\r\n                                    status: enums.trackingStep.pending,\r\n                                    description: getTutorialHTMLTemplate('BookingStatusBooked_Borrower'),\r\n                                    date: undefined,\r\n                                    isCurrent: false,\r\n                                    rentalStatus: [enums.productRentalStatus.booked]\r\n                                },\r\n                                {\r\n                                    label: 'BOOKING_TRACK_INFO_START',\r\n                                    status: enums.trackingStep.pending,\r\n                                    description: getTutorialHTMLTemplate('BookingStatusStarted_Lender'),\r\n                                    date: undefined,\r\n                                    isCurrent: false,\r\n                                    rentalStatus: [enums.productRentalStatus.started]\r\n                                },\r\n                                {\r\n                                    label: 'BOOKING_TRACK_INFO_END',\r\n                                    status: enums.trackingStep.pending,\r\n                                    description: getTutorialHTMLTemplate('BookingStatusEnded_Lender'),\r\n                                    date: undefined,\r\n                                    isCurrent: false,\r\n                                    rentalStatus: [enums.productRentalStatus.ended]\r\n                                }\r\n                            ]\r\n                        //borrower steps    \r\n                        } else {\r\n\r\n                          return [\r\n                              {\r\n                                  label:'BOOKING_TRACK_INFO_CARD_VERIFICATION',\r\n                                  status: enums.trackingStep.failure,\r\n                                  description: getTutorialHTMLTemplate('BookingStatusNotVerified_Borrower_TnB'),\r\n                                  date: undefined,\r\n                                  isCurrent: true,\r\n                                  rentalStatus: [enums.productRentalStatus.verified, enums.productRentalStatus.verifying]\r\n                              },\r\n                              {\r\n                                label:'BOOKING_TRACK_INFO_BOOKED',\r\n                                status: enums.trackingStep.pending,\r\n                                description: getTutorialHTMLTemplate('BookingStatusBooked_Borrower'),\r\n                                date: undefined,\r\n                                isCurrent: false,\r\n                                rentalStatus: [enums.productRentalStatus.booked]\r\n                              },\r\n                              {\r\n                                  label: 'BOOKING_TRACK_INFO_START',\r\n                                  status: enums.trackingStep.pending,\r\n                                  description: getTutorialHTMLTemplate('BookingStatusStarted_Borrower_TnB'),\r\n                                  date: undefined,\r\n                                  isCurrent: false,\r\n                                  rentalStatus: [enums.productRentalStatus.started]\r\n                              },\r\n                              {\r\n                                  label: 'BOOKING_TRACK_INFO_END',\r\n                                  status: enums.trackingStep.pending,\r\n                                  description: getTutorialHTMLTemplate('BookingStatusEnded_Borrower_TnB'),\r\n                                  date: undefined,\r\n                                  isCurrent: false,\r\n                                  rentalStatus: [enums.productRentalStatus.ended]\r\n                              }\r\n                          ]\r\n                        }\r\n                    };\r\n                    // Lender steps\r\n                    // Request received\r\n                    // Request Accepted\r\n                    // Start Rental (chat)\r\n                    // End Rental (chat)\r\n\r\n\r\n                    // Borrower steps\r\n                    // Card Verification\r\n                    // ID Verification\r\n                    // Request sent\r\n                    // await accept\r\n                    // Start Rental (chat)\r\n                    // End Rental (chat)\r\n\r\n                    let trackId = null;\r\n                    let cases = [\r\n                        enums.productRentalStatus.timeout,\r\n                        enums.productRentalStatus.denied,\r\n                        enums.productRentalStatus.canceled,\r\n                        enums.productRentalStatus.criticalCancel,\r\n                        enums.productRentalStatus.moderateCancel\r\n                    ];\r\n\r\n                    $scope.setStaticStepAtIndexAsCurrent = (staticSteps,atIndex) => {\r\n                        staticSteps.forEach((step,index) => {\r\n                            step.isCurrent = index === atIndex;\r\n                        })\r\n                    };\r\n                    $scope.getCurrentStep = () => {\r\n                        return $scope.steps.find((item) => item.isCurrent == true)\r\n                    };\r\n                    $scope.updateSteps = (staticSteps) => {\r\n                        let statuses = $scope.booking.BookingStatus;\r\n                        //special handling for Verifying status\r\n                        if (statuses[statuses.length-1].Status_TrackId == enums.productRentalStatus.verifying) {\r\n                            let currentStatus = statuses[statuses.length-1];\r\n                            staticSteps[0].status = enums.trackingStep.pending;\r\n                            staticSteps[0].date = ptUtils.stringToDate(`${currentStatus.CreatedDate} ${currentStatus.CreatedTime}`);\r\n                            staticSteps[0].label = 'BOOKING_TRACK_INFO_ID_VERIFICATION';\r\n                            staticSteps[0].description = getTutorialHTMLTemplate('BookingStatusVerifying_Borrower');\r\n                            $scope.setStaticStepAtIndexAsCurrent(staticSteps,0);\r\n                            return staticSteps;\r\n                        }\r\n                        for (let i = 0; i < statuses.length; i++) {\r\n                            let currentStatus = statuses[i];\r\n                            //lookup static step matching the status and update date and status\r\n                            for (let j = 0; j < staticSteps.length; j++) {\r\n                                if (staticSteps[j].rentalStatus.includes(currentStatus.Status_TrackId)) {\r\n                                    staticSteps[j].status = enums.trackingStep.success;\r\n                                    staticSteps[j].date = ptUtils.stringToDate(`${currentStatus.CreatedDate} ${currentStatus.CreatedTime}`);\r\n                                    //if its the last status, show description\r\n                                    if (i == statuses.length-1) {\r\n                                        $scope.setStaticStepAtIndexAsCurrent(staticSteps, j);\r\n                                    }\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        return staticSteps\r\n                    };\r\n\r\n                    $scope.init = () => {\r\n                        $scope.userId = appStateManager.getUserId();\r\n                        $scope.isLender = $scope.userId == $scope.booking.Lender_Id;\r\n                        $scope.isTryAndBuy = $scope.booking.IsTryAndBuy;\r\n                        let steps = angular.copy($scope.booking.IsTryAndBuy \r\n                            ? $scope.getStaticBookingStepsTnB($scope.isLender)\r\n                            : $scope.getStaticBookingStepsP2P($scope.isLender) \r\n                        );\r\n                        $scope.steps = $scope.updateSteps(steps);\r\n                    };\r\n\r\n                    $scope.init();\r\n                }\r\n            }\r\n        }\r\n    ]);\r\n","'use strict';\r\nangular.module('paladinApp')\r\n    .directive('chatCtaButton',[\r\n        '$rootScope',\r\n        'enums',\r\n        'apiService',\r\n        'appStateManager',\r\n        'toastService',\r\n        'chatService',\r\n        '$translate',\r\n        function (\r\n            $rootScope,\r\n            enums,\r\n            apiService,\r\n            appStateManager,\r\n            toastService,\r\n            chatService,\r\n            $translate) {\r\n\r\n            return {\r\n                restrict: 'E',\r\n                templateUrl:'./views/templates/chatCTAButton.tpl.html',\r\n                scope: {\r\n                    product:'=',\r\n                    productBookingDetails: '=',\r\n                    booking: '=?',\r\n                },\r\n                link: function ($scope, elem, attr) {\r\n                    $scope.userId = appStateManager.getUserId();\r\n                    $scope.startChat = () => {\r\n                        $scope.isLoading = true;\r\n                        const  {\r\n                            Chat_QBRoomId,\r\n                            Lender_UserId,\r\n                            Product_Id,\r\n                            Product_Title,\r\n                        } = $scope.product;\r\n                        // toastService.simpleToast(`Start Chat between lenderID: ${$scope.lenderQbId} and borrowerId: ${$scope.borrowerQbId} for productId: ${$scope.productId}`);\r\n                        const {\r\n                            Borrower_QBId,\r\n                            Lender_QBId\r\n                        } = $scope.productBookingDetails;\r\n\r\n                        let borrowerId = $scope.userId;\r\n                        let bookingId = undefined;\r\n                        if ($scope.booking) {\r\n                            bookingId = $scope.booking.Booking_Id;\r\n                            borrowerId = $scope.booking.Borrower_Id;\r\n                        }\r\n\r\n                        chatService.createOrStartChat({\r\n                            lenderId: Lender_UserId,\r\n                            borrowerId: borrowerId,\r\n                            lenderQBId: Lender_QBId,\r\n                            borrowerQBId: Borrower_QBId,\r\n                            chatRoomId: Chat_QBRoomId,\r\n                            bookingId: bookingId,\r\n                            productId: Product_Id,\r\n                            productName: Product_Title,\r\n                        })\r\n                            .then((res) => {\r\n                                $scope.isLoading = false;\r\n                            //     nav to chat\r\n                                console.log(res);\r\n                                $rootScope.$emit(enums.busNavigation.chat,{chatId: res.Chat_QBRoomId})\r\n                            })\r\n                            .catch((err) => {\r\n                                $scope.isLoading = false;\r\n                                 console.error(err);\r\n                                toastService.simpleToast($translate.instant('DEFAULT_ERROR'))\r\n                            });\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n    }]);","'use strict';\r\nangular.module('paladinApp')\r\n    .directive('chatDetailed',[\r\n        '$rootScope',\r\n        'apiService',\r\n        'appStateManager',\r\n        'enums',\r\n        'chatService',\r\n        '$mdSidenav',\r\n        'toastService',\r\n        'ptUtils',\r\n        function (\r\n            $rootScope,\r\n            apiService,\r\n            appStateManager,\r\n            enums,\r\n            chatService,\r\n            $mdSidenav,\r\n            toastService,\r\n            ptUtils) {\r\n\r\n            return {\r\n                restrict:'E',\r\n                templateUrl:'./views/templates/chatDetailed.tpl.html',\r\n                scope: {\r\n                    chatId: '=?'\r\n                },\r\n                link: function ($scope, elem, attr) {\r\n                    // if ($stateParams.chatId) {\r\n                    //     $scope.chatId = $stateParams.chatId;\r\n                    // }\r\n                    $scope.chat = null;\r\n                    $scope.bookingId = null;\r\n                    $scope.messages = [];\r\n                    $scope.compose = {text:'',img:null};\r\n                    $scope.isUploadingMedia = false;\r\n                    $scope.userImages = {\r\n                        me: undefined,\r\n                        recipient: undefined,\r\n                    };\r\n                    $scope.canLoadMoreMsgs = true;\r\n                    let deregs = [];\r\n\r\n                    $scope.setSelectedChat = (chatId, force = false) => {\r\n                        if (chatId) {\r\n                            if (chatId != $scope.chatId || force) {\r\n                                $scope.chatId = chatId;\r\n                                if ($scope.chat && $scope.chat.Chat_QBRoomId)\r\n                                    chatService.leaveChat($scope.chat.Chat_QBRoomId);\r\n                                $scope.getDetailedChat()\r\n                            }\r\n                        } else {\r\n                            // deselect chat\r\n                            if ($scope.chat && $scope.chat.Chat_QBRoomId)\r\n                                chatService.leaveChat($scope.chat.Chat_QBRoomId)\r\n                        }\r\n                    };\r\n                    $scope.goToProduct = () => {\r\n                        $rootScope.$emit(enums.busNavigation.productDetailed,{product: $scope.product})\r\n                    };\r\n                    $scope.goToRental = () => {\r\n                        $rootScope.$emit(enums.busNavigation.transactionDetailed,{bookingId: $scope.bookingId})\r\n                    };\r\n\r\n                    $scope.getDetailedChat = () => {\r\n                        $scope.bookingId = null;\r\n                        $scope.isLoading = true;\r\n                        chatService.getChatDetailed($scope.chatId)\r\n                            .then((chat) => {\r\n                                $scope.chat = chat;\r\n                                if (chat.BookingList && chat.BookingList.length>0 && chat.BookingList[0].BookingId) {\r\n                                    $scope.bookingId = chat.BookingList[0].BookingId\r\n                                }\r\n                                $scope.userImages.me = appStateManager.user.User_DisplayPicturePath;\r\n                                $scope.userImages.recipient = chat.Lender_UserId == appStateManager.user.User_Id ?  chat.Borrower_ProfileImage : chat.Lender_ProfileImage;\r\n                                chatService.joinChat($scope.chat.Chat_QBRoomId)\r\n                                    .then(() => {\r\n                                        $scope.getDetailedProduct();\r\n                                    })\r\n                                    .catch((err) => {\r\n                                        console.log('Failed to join chat', err);\r\n                                        $scope.chat = null;\r\n                                        $scope.chatId = null;\r\n                                        $scope.isLoading = false;\r\n                                        toastService.simpleToast($translate.instant('FAILED_JOIN_CHAT'));\r\n                                    })\r\n                            })\r\n                            .catch((err) => {\r\n                                $scope.isLoading = false;\r\n                                $scope.chatId = null;\r\n                            })\r\n                    };\r\n\r\n                    $scope.getDetailedProduct = () => {\r\n                        const { Product_Id } = $scope.chat;\r\n                        apiService.products.getDetailedProduct(Product_Id)\r\n                            .then((res) => {\r\n                                $scope.product = res.Data;\r\n                                $scope.getChatHistory();\r\n                            })\r\n                            .catch((err) => {\r\n                                $scope.chat = null;\r\n                                $scope.isLoading = false;\r\n                            })\r\n                    };\r\n\r\n                    $scope.getChatHistory = () => {\r\n                        chatService.getChatHistory($scope.chat.Chat_QBRoomId,0)\r\n                            .then((msgs) => {\r\n                                chatService.clearUnreadBadgesForDialog($scope.chat.Chat_QBRoomId);\r\n                                $scope.$evalAsync(() => {\r\n                                    $scope.canLoadMoreMsgs = true;\r\n                                    $scope.messages = msgs;\r\n                                    $scope.isLoading = false;\r\n                                    // document.getElementById('composeTextMessage').focus();\r\n                                })\r\n                            })\r\n                            .catch((err) => {\r\n                                $scope.$evalAsync(() => {\r\n                                    $scope.messages = [];\r\n                                    $scope.isLoading = false;\r\n                                })\r\n                            })\r\n                    };\r\n\r\n                    $scope.loadMoreMessages = () => {\r\n                        if (!$scope.isGettingMoreMsgs && $scope.canLoadMoreMsgs) {\r\n                            $scope.isGettingMoreMsgs = true;\r\n                            console.log('loadMoreMessages');\r\n                            chatService.getChatHistory($scope.chat.Chat_QBRoomId,$scope.messages.length)\r\n                                .then((msgs) => {\r\n                                    if (msgs.length == 0) {\r\n                                        $scope.canLoadMoreMsgs = false;\r\n                                    }\r\n                                    $scope.isGettingMoreMsgs = false;\r\n                                    $scope.messages = msgs.concat($scope.messages);\r\n\r\n\r\n                                })\r\n                                .catch((err) => {\r\n                                    $scope.isGettingMoreMsgs = false;\r\n                                })\r\n                        }\r\n                    };\r\n\r\n                    $scope.toggleNav = () => {\r\n                        $mdSidenav(enums.inAppSideNavsIds.chatSideNav).toggle();\r\n                    };\r\n\r\n                    $scope.sendMessage = () => {\r\n                        chatService.sendMessage({\r\n                            dialogId: $scope.chat.Chat_QBRoomId,\r\n                            text: $scope.compose.text,\r\n                            productId: $scope.chat.Product_Id,\r\n                            input: null\r\n                        });\r\n                        $scope.compose.text = '';\r\n                    };\r\n\r\n                    $scope.keyPress = ($event) => {\r\n                        if ($event.which == 13 && !$event.shiftKey) {\r\n                            $event.preventDefault();\r\n                            if ($scope.compose.text != '')\r\n                                $scope.sendMessage();\r\n                            else\r\n                                ptUtils.playErrorSound();\r\n                        }\r\n                    };\r\n\r\n                    $scope.uploadMedia = () => {\r\n                        $scope.$$postDigest(() => {\r\n                            angular.element(document.getElementById('chatMediaUpload'))[0].click();\r\n                        })\r\n                    };\r\n                    $scope.onUploaded = (inputElement) => {\r\n                        $scope.$evalAsync(() => {\r\n                            $scope.isUploadingMedia = true;\r\n                            if (inputElement && inputElement.files && inputElement.files.length > 0) {\r\n                                chatService.sendMessage({\r\n                                    dialogId: $scope.chat.Chat_QBRoomId,\r\n                                    text: null,\r\n                                    input: inputElement\r\n\r\n                                })\r\n                                    .then(() => {\r\n                                        $scope.$evalAsync(() => {\r\n                                            $scope.isUploadingMedia = false;\r\n                                        });\r\n                                    })\r\n                                    .catch((err) => {\r\n                                        $scope.$evalAsync(() => {\r\n                                            $scope.isUploadingMedia = false;\r\n                                        });\r\n                                        alert('error! upload again!')\r\n                                    })\r\n                            }\r\n                        })\r\n                    };\r\n                    deregs.push($rootScope.$on(enums.busChatEvents.detailedChatSelected,(event,data) => {\r\n                        $scope.toggleNav();\r\n                        if (data && data.chatId) {\r\n                            $scope.setSelectedChat(data.chatId);\r\n                        } else\r\n                            $scope.setSelectedChat(null);\r\n                    }));\r\n\r\n\r\n                    deregs.push($rootScope.$on(enums.busChatEvents.newMessage,(event,data) => {\r\n                            $scope.messages.push(data);\r\n                            chatService.clearUnreadBadgesForDialog($scope.chat.Chat_QBRoomId);\r\n                            $scope.$apply();\r\n                    }));\r\n\r\n                    deregs.push($rootScope.$on(enums.busChatEvents.selectPendingChat,(event,data) => {\r\n                        $scope.setSelectedChat(data.chatId,true);\r\n                    }));\r\n\r\n\r\n                    $scope.$on('$destroy',function () {\r\n                        while (deregs.length > 0)\r\n                            deregs.pop()()\r\n                    })\r\n                }\r\n            }\r\n        }]);","'use strict';\r\nangular.module('paladinApp')\r\n    .directive('chatListMessageItem',[function () {\r\n        return {\r\n            restrict: 'E',\r\n            templateUrl: './views/templates/chatListMessageItem.tpl.html',\r\n            scope: {\r\n                myImage:'=?',\r\n                recipientImage: '=?',\r\n                message: '=',\r\n            },\r\n            link: function ($scope, elem, attr) {\r\n                \r\n            }\r\n        }\r\n    }]);","'use strict';\r\nangular.module('paladinApp')\r\n    .directive('chatsList',[\r\n        '$rootScope',\r\n        'enums',\r\n        'chatService',\r\n        'appStateManager',\r\n        function (\r\n            $rootScope,\r\n            enums,\r\n            chatService,\r\n            appStateManager) {\r\n\r\n            return {\r\n                restrict: 'E',\r\n                templateUrl: './views/templates/chatsList.tpl.html',\r\n                link: function ($scope, attr, elem) {\r\n                    $scope.currentPage = 0;\r\n                    $scope.isLoading = true;\r\n                    $scope.canLoadMore = true;\r\n                    let isLoadingMore = false;\r\n                    $scope.chats = [];\r\n                    $scope.unreadDict = {};\r\n                    $scope.selectedChatId = null;\r\n                    $scope.loadChatsList = (isReplace = true) => {\r\n                        $scope.isLoading = true;\r\n                        chatService.getChatList(appStateManager.getUserId(),$scope.currentPage)\r\n                            .then((list) => {\r\n                                $scope.$evalAsync(() => {\r\n                                    $scope.isLoading = false;\r\n                                    isLoadingMore = false;\r\n                                    if (isReplace) {\r\n                                        $scope.chats = list;\r\n                                        $scope.currentPage = 0;\r\n                                        $scope.canLoadMore = true;\r\n                                    } else {\r\n                                        if (list.length > 0) {\r\n                                            $scope.chats = $scope.chats.concat(list);\r\n                                            $scope.currentPage++;\r\n                                        } else {\r\n                                            $scope.canLoadMore = false;\r\n                                        }\r\n                                    }\r\n                                });\r\n                                chatService.getUnreadMessage()\r\n                                    .then((dialogsDict) => {\r\n                                        $scope.unreadDict = dialogsDict || {};\r\n                                    })\r\n                                    .catch(() => $scope.unreadDict = {});\r\n                            })\r\n                            .catch((err) => {\r\n                                $scope.isLoading = false;\r\n                            })\r\n                    };\r\n\r\n                    $scope.onChatListItemClicked = (chatItem) => {\r\n                        console.log(chatItem);\r\n                        if ($scope.selectedChatId != chatItem.Chat_QBRoomId) {\r\n                            $scope.selectedChatId = chatItem.Chat_QBRoomId;\r\n                            $rootScope.$emit(enums.busChatEvents.detailedChatSelected, {chatId: chatItem.Chat_QBRoomId})\r\n                        }\r\n                    };\r\n                    $rootScope.$on(enums.busChatEvents.updateUnreadCount, (event,data) => {\r\n                           $scope.unreadDict = data.detailedDict || {}\r\n                    });\r\n\r\n                    let deregs = [];\r\n\r\n                    deregs.push($rootScope.$on(enums.busChatEvents.selectPendingChat,(event,data) => {\r\n                            $scope.selectedChatId = data.chatId;\r\n                    }));\r\n\r\n                    $scope.loadMore = () => {\r\n                        if ($scope.canLoadMore) {\r\n                            if (!isLoadingMore) {\r\n                                isLoadingMore = true;\r\n                                console.log('$scope.canLoadMore');\r\n                                $scope.loadChatsList(false);\r\n                            }\r\n                        }\r\n                    };\r\n\r\n                    $scope.loadChatsList(true);\r\n\r\n                    $scope.$on('$destroy',function () {\r\n                        while (deregs.length > 0)\r\n                            deregs.pop()()\r\n                    })\r\n                }\r\n            }\r\n\r\n        }]);","'use strict';\r\nangular.module('paladinApp')\r\n    .directive('contactLenderOrBorrower',[\r\n        '$rootScope',\r\n        'enums',\r\n        'appStateManager',\r\n        function (\r\n            $rootScope,\r\n            enums,\r\n            appStateManager) {\r\n            return {\r\n                restrict: 'E',\r\n                templateUrl:'./views/templates/contactLenderOrBorrower.tpl.html',\r\n                scope: {\r\n                    isTitleHidden: '=?',\r\n                    isDescriptionHidden: '=?',\r\n                    product: '=?',\r\n                    productBookingDetails: '=?',\r\n                    booking: '=?',\r\n                },\r\n                link: function ($scope, elem, att) {\r\n                    $scope.isTitleHidden = $scope.isTitleHidden || false;\r\n                    $scope.isDescriptionHidden = $scope.isDescriptionHidden || false;\r\n\r\n                    $scope.displayedUser = {\r\n                        username: null,\r\n                        profilePic: null,\r\n                        id: null,\r\n                        stars: undefined,\r\n                        reviews: undefined,\r\n                    };\r\n                    const init = () => {\r\n                        const product = $scope.product || {};\r\n                        $scope.isMyProduct = product.Lender_UserId == appStateManager.getUserId();\r\n                        $scope.isCanStartChat = !$scope.isMyProduct || $scope.booking != null;\r\n                        $scope.titleText = $scope.isMyProduct ? 'CONTACT_BORROWER' : 'CONTACT_LENDER';\r\n\r\n                        if ($scope.isMyProduct) {\r\n                            if ($scope.booking) { // if null, can't start chat anyways, so directive will be hidden\r\n                                $scope.displayedUser.username = $scope.booking.Borrower_Name;\r\n                                $scope.displayedUser.profilePic = $scope.booking.Borrower_Image;\r\n                                $scope.displayedUser.id = $scope.booking.Borrower_Id;\r\n                                $scope.displayedUser.stars = $scope.booking.Borrower_ReviewScore;\r\n                                $scope.displayedUser.reviews = $scope.booking.Borrower_ReviewCount;\r\n                            } else {\r\n                                $scope.isCanStartChat = false;\r\n                            }\r\n                        } else {\r\n                            if ($scope.product) {\r\n                                $scope.displayedUser.username = product.Lender_FullName;\r\n                                $scope.displayedUser.profilePic = product.Lender_User_DisplayPicturePath;\r\n                                $scope.displayedUser.id = product.Lender_UserId;\r\n                                $scope.displayedUser.stars = product.User_ReviewAsLender;\r\n                                $scope.displayedUser.reviews = product.User_ReviewCountAsLender;\r\n                            } else {\r\n                                $scope.isCanStartChat = false;\r\n                            }\r\n                        }\r\n                    };\r\n\r\n                    let deregs = [];\r\n                    deregs.push($scope.$watch('product',() => {\r\n                        init();\r\n                    }));\r\n\r\n                    deregs.push($scope.$watch('productBookingDetails',() => {\r\n                        init();\r\n                    }));\r\n\r\n                    deregs.push($scope.$watch('booking',() => {\r\n                        init();\r\n                    }));\r\n\r\n                    init();\r\n\r\n                    $scope.$on('$destroy',function () {\r\n                        while (deregs.length)\r\n                            deregs.pop()();\r\n                    })\r\n                }\r\n            }\r\n    }]);","angular.module('paladinApp')\r\n    .directive('copyTextToClipboard', [\r\n        '$mdToast',\r\n        function ($mdToast) {\r\n            return {\r\n                restrict:'A',\r\n                link: function ($scope, elem, attr) {\r\n\r\n                    // requires an element with an ID to be present on page\r\n                    // TODO: generalize for other uses\r\n\r\n                    $(elem).click(()=>{\r\n\r\n                        let containerId = attr.copyTextToClipboard;\r\n\r\n                        if (document.selection) {\r\n                            var range = document.body.createTextRange();\r\n                            range.moveToElementText(document.getElementById(containerId));\r\n                            range.select().createTextRange();\r\n                            document.execCommand(\"copy\");\r\n                            $mdToast.showSimple('Text copied to clipboard');\r\n                        } else if (window.getSelection) {\r\n                            var range = document.createRange();\r\n                            range.selectNode(document.getElementById(containerId));\r\n                            window.getSelection().addRange(range);\r\n                            document.execCommand(\"copy\");\r\n                            console.info(\"text copied\");\r\n                            $mdToast.showSimple('Text copied to clipboard');\r\n                        }\r\n\r\n                    })\r\n                }\r\n            };\r\n        }]\r\n    )\r\n","class FilterComponent {\r\n\r\n    constructor($scope,$sce,Filters,$rootScope,$translate,$location,enums) {\r\n      this.scope =$scope;\r\n      this.Filters = Filters;\r\n      this.translate = $translate;\r\n      //this.filter = {categories:[],languageCode:'en',selectedCategoryId:null,priceRange:[10,100]};\r\n      this.enums = enums;\r\n      this.rootScope = $rootScope;\r\n      this.categoryImageBaseUrl = window.globals.CATEGORY_IMAGE_URL;\r\n      this.location = $location;\r\n      this.sce = $sce;\r\n      this.slider = {};\r\n      this.showCategoriesDiv = false;\r\n      this.slider.priceSliderOption = {\r\n        options: {\r\n          orientation: 'horizontal',\r\n          min: 0,\r\n          max: 240,\r\n          step: 10,\r\n          range: true\r\n        }\r\n      };\r\n     this.slider.distanceSliderOption = {\r\n        options: {\r\n          orientation: 'horizontal',\r\n          min: 0,\r\n          max: 240,\r\n          step: 10,\r\n          range: false\r\n        }\r\n      };\r\n    }\r\n    \r\n    $onInit() {\r\n      this.scope.priceRange = [0,1000];\r\n      this.count=0;\r\n      this.selectedTab = this.filter.category.isTryAndBuy == true ? 0 : 1 || 0;\r\n      this.customCategoriesTnB = this.getCategories(true); \r\n      this.customCategoriesP2P = this.getCategories(false);\r\n      \r\n      var _this= this;\r\n      //this.scope.distanceRange = 100;\r\n\r\n\r\n      this.scope.$watch('priceRange',function(){\r\n        if (_this.filter.priceRange[0] != _this.scope.priceRange[0] ||\r\n          _this.filter.priceRange[1] != _this.scope.priceRange[1]) {\r\n          _this.filter.priceRange = _this.scope.priceRange;\r\n          //console.log(\"price range changed... to \" + _this.scope.priceRange);\r\n          //console.log(\"old price range is \" + _this.filter.priceRange);\r\n          _this.refreshProducts();\r\n        }\r\n      });\r\n\r\n      /*this.scope.$watch('distanceRange',function(){\r\n        _this.filter.distanceRange = _this.scope.distanceRange;\r\n        _this.refreshProducts();\r\n      })*/\r\n\r\n      /*\r\n      //here we already load the categories in case the page is refreshed, and we select the All Categories by default\r\n      if (!this.rootScope.filter || this.rootScope.forceLoadCategory) {\r\n        this.refreshCategories(null,null, $rootScope.lang);\r\n      }\r\n      */\r\n\r\n      \r\n      this.scope.$on('languageChanged', function(event,data){\r\n        _this.filter.languageCode = _this.getCurrentLanguageCode();\r\n\r\n        if (_this.filter.category.selectedSubCategoryId != null) {\r\n          //subcategory selected\r\n\r\n          _this.refreshCategories(_this.filter.category.selectedCategoryId,\r\n                                  _this.filter.category.selectedSubCategoryId, _this.filter.languageCode);\r\n   \r\n        } else if (_this.filter.category.selectedCategoryId != null) {\r\n          //parent category other than All Categories selected\r\n          _this.refreshCategories(_this.filter.category.selectedCategoryId, null, _this.filter.languageCode);\r\n\r\n        } else {\r\n          _this.refreshCategories(null, null, _this.filter.languageCode);\r\n        }\r\n\r\n      }); \r\n\r\n    }\r\n\r\n    selectCategories(selCategoryId, selSubcategoryId, lang) {\r\n      if (selCategoryId==null) {\r\n        this.selectCategory(this.enums.allCategories[lang], false);\r\n      } else {\r\n        this.selectCategory(this.Filters.getCategoryById(selCategoryId, lang), false);\r\n        if (selSubcategoryId!=null)\r\n          this.selectSubCategory(this.Filters.getSubcategoryById(selSubcategoryId, lang), false);\r\n      }\r\n    }\r\n\r\n    refreshCategories(selCategoryId, selSubcategoryId, lang){\r\n\r\n      this.filter.categories = this.rootScope.categoriesMap.get(lang);\r\n      this.selectCategories(selCategoryId, selSubcategoryId, lang);\r\n    }\r\n\r\n    getCategories(isTryAndBuy) {\r\n      let categories = {};\r\n      let i = 0;\r\n      this.rootScope.categoriesMap.get(this.getCurrentLanguageCode()).forEach((item) => {\r\n        if (isTryAndBuy && item.IsTryAndBuy || !isTryAndBuy && !item.IsTryAndBuy) {\r\n          categories[i++] = item;\r\n        } \r\n      });\r\n\r\n      return categories;\r\n      \r\n    }\r\n\r\n    toggleDiv() {\r\n      this.showCategoriesDiv = !this.showCategoriesDiv;\r\n    }\r\n    getCurrentLanguageCode() {\r\n      return this.translate.use();\r\n    }\r\n    selectCategory(category, refreshProductList){\r\n      if(typeof category != 'string'){\r\n        this.filter.category.selectedCategoryId = category.Category_Id;\r\n        this.filter.category.selectedCategoryDesc =this.sce.trustAsHtml(category.Category_Description);  \r\n        this.filter.category.selectedCategoryName =this.sce.trustAsHtml(category.Category_Name);  \r\n        this.filter.category.selectedCategoryImagePath = category.Category_ImagePath;\r\n        this.filter.category.selectedCategoryBannerImage = category.Category_BannerPath;\r\n        this.filter.category.isTryAndBuy = category.IsTryAndBuy;\r\n        this.rootScope.category = this.filter.category.selectedCategoryName;\r\n        \r\n      }else{\r\n        this.filter.category.selectedCategoryId = null;\r\n        this.filter.category.selectedCategoryDesc =this.sce.trustAsHtml(category);\r\n        this.filter.category.selectedCategoryName =category;  \r\n        this.filter.category.selectedCategoryImagePath =null;\r\n        this.filter.category.isTryAndBuy = this.rootScope.isTryAndBuy;\r\n        this.filter.category.selectedCategoryBannerImage = window.globals.IS_PROMO ? this.enums.categoriesBannersPaths.promo : this.enums.categoriesBannersPaths.all[this.getCurrentLanguageCode()];\r\n        this.rootScope.category=category;\r\n\r\n      }\r\n      this.selectSubCategory(null,false);\r\n\r\n      //console.log('category clicked...')\r\n      \r\n      if (refreshProductList) {\r\n        this.refreshProducts();\r\n      }\r\n    }\r\n\r\n    onTabSelected() {\r\n      if (this.selectedTab == 0) {\r\n        this.rootScope.$emit(this.enums.busNavigation.switchBrowseMode, {isTryAndBuy: true});\r\n      } else {\r\n        this.rootScope.$emit(this.enums.busNavigation.switchBrowseMode, {isTryAndBuy: false});\r\n      }\r\n    }\r\n\r\n    selectSubCategory(subCategory,refreshProductList){\r\n      if(subCategory){\r\n        //console.log(this.sce.trustAsHtml(subCategory.SubCategory_Name));\r\n        this.filter.category.selectedSubCategoryId = subCategory.SubCategory_Id;\r\n        this.filter.category.selectedSubCategoryDesc =this.sce.trustAsHtml(subCategory.SubCategory_Description);  \r\n        this.filter.category.selectedSubCategoryName =this.sce.trustAsHtml(subCategory.SubCategory_Name);  \r\n        this.filter.category.selectedSubCategoryImagePath = subCategory.SubCategory_ImagePath;\r\n        this.filter.category.selectedSubCategoryBannerImage = subCategory.SubCategory_BannerPath;\r\n        this.rootScope.subcategory=this.filter.category.selectedSubCategoryName;\r\n      }else{\r\n        this.filter.category.selectedSubCategoryId = null;\r\n        this.filter.category.selectedSubCategoryDesc =null;  \r\n        this.filter.category.selectedSubCategoryName =null;  \r\n        this.filter.category.selectedSubCategoryImagePath = null;\r\n        this.filter.category.selectedSubCategoryBannerImage = null;\r\n        this.rootScope.subcategory = null;\r\n      }\r\n\r\n      this.filter.search.searchStr = '';\r\n      this.filter.search.currentSearchStr='';\r\n      this.rootScope.searchKey = null;\r\n      this.location.search('search',null);\r\n      \r\n      if (this.rootScope.searchKey != null) {\r\n        this.rootScope.searchKey = null;\r\n      }\r\n\r\n      this.filter.currentPage =1;\r\n\r\n      //console.log('sub category clicked...')\r\n      if(refreshProductList)this.refreshProducts();\r\n    }\r\n\r\n    getCategoryUrl(category, subcategory, isTryAndBuy) {\r\n      return this.Filters.getCategoriesUrl(category==0 ? this.translate.instant('ACTG') : category.Category_Name, \r\n            subcategory == null ? null : subcategory.SubCategory_Name, isTryAndBuy, this.translate.use());\r\n    }\r\n    \r\n    refreshProducts(){\r\n        //console.log(\"REFRESH PRODUCTS in filters.js\");\r\n        this.rootScope.$broadcast('filtersUpdated',this.filter);\r\n    }    \r\n\r\n    increment() {\r\n      this.count++;\r\n    }\r\n\r\n    decrement() {\r\n      this.count--;\r\n    }\r\n    \r\n};\r\n\r\nangular\r\n.module('paladinApp')\r\n.component('filters', {\r\n  bindings: {\r\n    categories : '<',\r\n    filter :'=',\r\n    count: '='\r\n  },\r\n  controller: FilterComponent,\r\n  templateUrl: './views/templates/filter.tpl.html'\r\n})\r\n\r\n;","'use strict';\r\nangular.module('paladinApp')\r\n    .directive('focusMe',['$timeout',function ($timeout) {\r\n        return {\r\n            restrict: 'A',\r\n            link: function ($scope, elem, attr) {\r\n                $timeout(() => {\r\n                    if (!elem[0].disabled) {\r\n                        elem[0].focus();\r\n                    }\r\n                },300)\r\n\r\n            }\r\n        }\r\n    }]);","angular\r\n.module('paladinApp')\r\n.directive('footer',[\r\n    '$rootScope',\r\n    'menusService',\r\n    'appStateManager',\r\n    'enums',\r\n    '$mdMedia',\r\n    '$state',\r\n    function (\r\n        $rootScope,\r\n        menusService,\r\n        appStateManager,\r\n        enums,\r\n        $mdMedia,\r\n        $state) {\r\n    return {\r\n        restrict:'E',\r\n        templateUrl:'./views/templates/footer.tpl.html',\r\n        scope: {\r\n\r\n        },\r\n        link: function ($scope, elem, attr) {\r\n\r\n            $scope.extraStyle = {\r\n                height: '150px'\r\n            };\r\n\r\n            $scope.aboutMenu = menusService.commonMenus.aboutMenu;\r\n            $scope.linksMenu = menusService.commonMenus.linksMenu;\r\n            $scope.menuLists = [\r\n                menusService.commonMenus.aboutMenu,\r\n                menusService.commonMenus.accountLoggedIn,\r\n                menusService.commonMenus.accountLoggedOut,\r\n                menusService.commonMenus.linksMenu,\r\n            ];\r\n\r\n            $scope.supportedLanguages = window.globals.SUPPORTED_LANGS;\r\n            $scope.selectedLanguage = $scope.supportedLanguages.find((lang) => lang.code === appStateManager.currentLang);\r\n\r\n            $scope.menuClick = (item) => {\r\n                menusService.menuClickHandlerMethod(item);\r\n            };\r\n\r\n            $scope.getMenuItemLink = (item) => {\r\n                return item.link || '#';\r\n            };\r\n\r\n            $scope.filterMenuItems = (item) => {\r\n              return menusService.shouldShowMenuItem(item)\r\n            };\r\n\r\n            $scope.onSelectLanguage = function(code) {\r\n                $scope.selectedLanguage = $scope.supportedLanguages.find((lang) => lang.code === code);\r\n                $rootScope.$emit(enums.busEvents.preferredLanguageChange,{currentLang: code});\r\n                $rootScope.$broadcast('languageChanged', code);\r\n            };\r\n\r\n            const setExtraHeight = (extraHeight) => {\r\n                if (extraHeight != $scope.extraStyle.height)\r\n                    $scope.extraStyle.height = extraHeight;\r\n\r\n            };\r\n            let deregs = [];\r\n\r\n            deregs.push($rootScope.$on(enums.busEvents.footerExtraHeight,(event,data) => {\r\n                $scope.extraStyle.height = data.height || $scope.extraStyle.height;\r\n            }));\r\n\r\n            deregs.push($scope.$watch(function () {return $mdMedia('gt-sm') },function (mgSm) {\r\n                    let extraHeight = '0';\r\n                    if (!mgSm) {\r\n                        if (\r\n                            $state.includes('app.products.newProduct') ||\r\n                            $state.includes('app.products.selectedProduct') ||\r\n                            $state.includes('app.bookings.bookingDetailed') ||\r\n                            $state.includes('app.bookings.paymentDetailed') ||\r\n                            $state.includes('app.bookings.bookingDetailed') ||\r\n                            $state.includes('verification.user')\r\n\r\n                        ) {\r\n                            extraHeight = '150px'\r\n                        }\r\n                    }\r\n\r\n                    setExtraHeight(extraHeight)\r\n            }));\r\n\r\n\r\n            $scope.$on('$destroy',() => {\r\n                while (deregs.length)\r\n                    deregs.pop()();\r\n            });\r\n        }\r\n\r\n    }\r\n}]);","angular\r\n.module('paladinApp')\r\n.component('header', {\r\n  bindings: {\r\n      user:'=',\r\n  },\r\n  controller: class HeaderComponent {\r\n\r\n    constructor($base64, $scope,$rootScope,$translate, $mdDialog, $http, $cookies, $timeout,popupService,enums) {\r\n      this.base64 = $base64;\r\n      this.scope =$scope;\r\n      this.rootScope = $rootScope;\r\n      this.translate = $translate;\r\n      this.baseUrl = window.globals.API_URL;\r\n      this.supportedLanguages = window.globals.SUPPORTED_LANGS;\r\n      this.profileImageBaseUrl = window.globals.PROFILE_IMAGE_URL;\r\n      this.mdDialog = $mdDialog;\r\n      this.http = $http;\r\n      this.btnStatus = 10;\r\n      this.signupMessage = \"\";\r\n      this.signupStatus = \"\";\r\n      this.signupFacebookStatus = \"\";\r\n      this.signupacebookMessage = \"\";\r\n      this.loginFacebookStatus = \"\";\r\n      this.loginFacebookMessage = \"\";\r\n      this.loginStatus = \"\";\r\n      this.loginMessage = \"\";\r\n      this.cookies = $cookies;\r\n      this.userStatus = false;\r\n      this.timeout = $timeout;\r\n      this.popupService = popupService;\r\n      this.enums = enums;\r\n      this.user = null;\r\n      this.registerBusEvents();\r\n    };\r\n    \r\n\r\n    registerBusEvents() {\r\n        let deregs = [];\r\n\r\n        deregs.push(this.rootScope.$on(this.enums.busEvents.updatedUser,(event,data) => {\r\n            this.user = data;\r\n            this.userStatus = this.user != null;\r\n        }));\r\n\r\n        this.scope.$on('$destroy', function() {\r\n            while (deregs.length)\r\n                deregs.pop()();\r\n        });\r\n    }\r\n\r\n    $onInit() {\r\n\r\n      this.profileDefaultImage=\"../../assets/profile.png\"; \r\n      var _this = this;\r\n      this.currentLang =this.translate.proposedLanguage()?this.translate.proposedLanguage(): this.translate.preferredLanguage();\r\n      this.currentLang  = this.rootScope.lang;\r\n      this.translate.use(this.rootScope.lang);\r\n      \r\n      this.scope.$on('updateLanguage', function(event,data){\r\n        _this.changeLanguage(data,false)\r\n      })\r\n      \r\n      if(this.cookies.getObject('globals') != undefined)\r\n          if (this.cookies.getObject('globals').currentUser != undefined)\r\n              if (this.cookies.getObject('globals').currentUser.username != undefined)\r\n                     this.userStatus = true;     \r\n        \r\n       \r\n      this.rootScope.$on('registeredSuccess', function(event,data){\r\n        _this.userStatus = true;     \r\n      })   \r\n    }\r\n\r\n    changeLanguage(lang,broadcastChange){\r\n      this.rootScope.lang = lang.code;\r\n      this.translate.use(lang.code);\r\n      this.currentLang = lang.code;\r\n  \r\n      \r\n      if(broadcastChange) {\r\n          this.rootScope.$broadcast('languageChanged', lang.code);\r\n          this.rootScope.$emit(this.enums.busEvents.preferredLanguageChange,{currentLang: lang.code});\r\n      }\r\n\r\n    }\r\n\r\n    hide() {\r\n      this.mdDialog.hide();\r\n    };\r\n\r\n    cancel() {\r\n      this.mdDialog.cancel();\r\n    };\r\n\r\n    answer(answer) {\r\n      this.mdDialog.hide(answer);\r\n    };\r\n\r\n    forgotPassword(email){\r\n      this.btnForgotPasswordStatus = 1;\r\n      var dataObj = {\r\n        User_Email : email,\r\n        LanguageCode: this.currentLang == \"it\" ? \"it-IT\" : this.currentLang\r\n      };\r\n        \r\n        \r\n        this.http.defaults.headers.common['Authorization'] = 'Basic ' + this.base64.encode('Paladin:Paladin123');\r\n        this.http.defaults.headers.common['Charset'] = 'UTF-8';\r\n        this.http.defaults.headers.common['Content-Type'] = 'application/json';\r\n\r\n          this.http.post(this.baseUrl + \"ForgetPassword/\", JSON.stringify(dataObj)).then((response) => {\r\n                this.btnForgotPasswordStatus = 10;\r\n                this.forgotpasswordStatus = response.data.Status;\r\n                this.forgotPasswordMessage = response.data.Message;\r\n            });\r\n\r\n    }\r\n      showTabDialogForgotPassword(ev){\r\n\r\n        this.mdDialog.show({\r\n          controller: ()=>this,\r\n        controllerAs: 'ctrl',\r\n          templateUrl: 'tabDialogForgotPassword',\r\n          parent: angular.element(document.body),\r\n          targetEvent: ev,\r\n          clickOutsideToClose:true,\r\n        http: this.http\r\n        });\r\n          \r\n\r\n      }\r\n\r\n\r\n  register(username, password, email, location) {\r\n    this.btnStatus = 1;\r\n    var dataObj = {\r\n      User_UserName : username,\r\n      User_Email : email,\r\n      User_Address : location,\r\n      User_Password : password,\r\n      User_UDIDType : 3,\r\n      LanguageCode: this.currentLang == \"it\" ? \"it-IT\" : this.currentLang\r\n    };\r\n        this.http.post(this.baseUrl + \"SignUp/\", dataObj).then((response) => {\r\n           this.btnStatus = 10;\r\n              this.signupStatus = response.data.Status;\r\n              if(response.data.Status == 'error')\r\n                this.signupMessage = response.data.Message;\r\n          });\r\n  }\r\n  registerFacebook() {\r\n\r\n    if(this.rootScope.facebookApiLoaded) {\r\n\r\n        this.btnStatus = 1;\r\n\r\n        var dataObj = {\r\n          User_UserName :this.rootScope.facebook_user.name.replace(\" \",\"-\") ,\r\n          User_Email : this.rootScope.facebook_user.email,\r\n          User_Address : this.rootScope.facebook_user.address,\r\n          User_Password : \"\",\r\n          User_UDIDType : 3,\r\n          LanguageCode: this.currentLang  == \"it\" ? \"it-IT\" : this.currentLang,\r\n          User_DisplayPicturePath:'http://graph.facebook.com/' + this.rootScope.facebook_user.id + '/picture?type=small',\r\n          User_DisplayPicture: 'http://graph.facebook.com/' + this.rootScope.facebook_user.id + '/picture?type=small',\r\n          User_FacebookId: this.rootScope.facebook_user.id ,\r\n          User_FullName: this.rootScope.facebook_user.name,\r\n          User_QBId:''\r\n        };\r\n\r\n\r\n            this.http.post(this.baseUrl + \"SignUp/\", dataObj).then((response) => {\r\n               this.btnStatus = 10;\r\n                  this.signupFacebookStatus = response.data.Status;\r\n                  if(response.data.Status == 'error'){\r\n                    this.signupFacebookMessage = response.data.Message;\r\n                  }else{\r\n                    this.rootScope.globals = {\r\n                        currentUser: {\r\n                            username: response.data.Data.User_UserName,\r\n                            token_type: response.data.Data.oAuthToken.token_type,\r\n                            access_token: response.data.Data.oAuthToken.access_token,\r\n                            refresh_token:  response.data.Data.oAuthToken.refresh_token,\r\n                            User_Id: response.data.Data.User_Id,\r\n                            User_DisplayPicturePath:'http://graph.facebook.com/' + this.rootScope.facebook_user.id + '/picture?type=small',\r\n                            User_DisplayPicture: 'http://graph.facebook.com/' + this.rootScope.facebook_user.id + '/picture?type=small'\r\n                          }\r\n                        };\r\n                    \r\n                        var cookieExp = new Date();\r\n                        cookieExp.setDate(cookieExp.getDate() + response.data.Data.oAuthToken.expires_in);\r\n                        this.cookies.putObject('globals', this.rootScope.globals, { expires: cookieExp });\r\n                        \r\n                        this.http.defaults.headers.common['Authorization'] = this.cookies.getObject('globals').currentUser.token_type + ' ' + this.cookies.getObject('globals').currentUser.access_token;\r\n                        this.hide();\r\n                        this.userStatus = true;\r\n                  }\r\n\r\n              });\r\n        }else{\r\n            this.signupFacebookStatus = 'error';\r\n            this.signupFacebookMessage =  this.translate.instant('FACEBOOK_LOADING');\r\n            var _this = this;\r\n            this.timeout( function(){\r\n              _this.registerFacebook();\r\n            }, 2000 );\r\n        }\r\n\r\n  }\r\n  logout(){\r\n      this.userStatus = false;\r\n      this.cookies.remove(\"globals\");\r\n      this.http.defaults.headers.common['Authorization'] = '';\r\n  };\r\n\r\n  login(username, password) {\r\n    this.btnStatus = 1;\r\n    var dataObj = {\r\n      User_UserName : username,\r\n      User_Email : \"\",\r\n      User_Mobile: \"\",\r\n      User_Password : password,\r\n      User_FacebookId: \"\",\r\n      LanguageCode: this.currentLang == \"it\" ? \"it-IT\" : this.currentLang\r\n    };\r\n\r\n\r\n    this.http.post(this.baseUrl + \"Login/\", dataObj).then((response) => {\r\n       this.btnStatus = 10;\r\n\r\n      if(response.data.Status != 'error'){\r\n          this.loginStatus = response.data.Status;\r\n          console.log(response.data.Data);\r\n          this.rootScope.globals = {\r\n            currentUser: {\r\n                username: response.data.Data.User_UserName,\r\n                token_type: response.data.Data.oAuthToken.token_type,\r\n                access_token: response.data.Data.oAuthToken.access_token,\r\n                refresh_token:  response.data.Data.oAuthToken.refresh_token,\r\n                User_Id: response.data.Data.User_Id,\r\n                User_DisplayPicturePath : response.data.Data.User_DisplayPicturePath\r\n              }\r\n            };\r\n        \r\n            var cookieExp = new Date();\r\n            cookieExp.setDate(cookieExp.getDate() + response.data.Data.oAuthToken.expires_in);\r\n            this.cookies.putObject('globals', this.rootScope.globals, { expires: cookieExp });\r\n            \r\n            this.http.defaults.headers.common['Authorization'] = this.cookies.getObject('globals').currentUser.token_type + ' ' + this.cookies.getObject('globals').currentUser.access_token;\r\n            \r\n            this.http.get(this.baseUrl + \"GetUserProfile?User_Id=\" + this.cookies.getObject('globals').currentUser.User_Id + \"&LanguageCode=\" + this.currentLang).then((response) => {\r\n                console.log(response);\r\n                this.hide();\r\n                this.userStatus = true;\r\n              });\r\n    \r\n          }else{\r\n            console.log(JSON.stringify(response, null, 4));\r\n            this.loginStatus = response.data.Status;\r\n            this.loginMessage = response.data.Message;\r\n          }\r\n\r\n\r\n      });\r\n  };\r\n\r\n  showTabDialog(ev) {\r\n      this.popupService.showLoginSignupPopup();\r\n  }\r\n  },\r\n  templateUrl: './views/templates/header.tpl.html'\r\n})\r\n","angular.module('paladinApp')\r\n    .directive('headerV2',[\r\n        '$rootScope',\r\n        'appStateManager',\r\n        'popupService',\r\n        '$mdMenu',\r\n        '$translate',\r\n        'enums',\r\n        '$mdSidenav',\r\n        '$window',\r\n        'menusService',\r\n        'apiService',\r\n        '$state',\r\n        '$transitions',\r\n        '$mdComponentRegistry',\r\n        function (\r\n            $rootScope,\r\n            appStateManager,\r\n            popupService,\r\n            $mdMenu,\r\n            $translate,\r\n            enums,\r\n            $mdSidenav,\r\n            $window,\r\n            menusService,\r\n            apiService,\r\n            $state,\r\n            $transitions,\r\n            $mdComponentRegistry) {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    // isScrollOffsetZero: '=',\r\n                },\r\n                templateUrl: './views/templates/headerV2.tpl.html',\r\n                link: function ($scope, elem, attr) {\r\n                    $scope.isScrollOffsetZero = ($state.current.data || {}).isCollapsingHeader || false;\r\n                    $scope.searchText = '';\r\n                    $scope.searchItems = ['one','two','three','four','five'];\r\n\r\n                    $scope.unreadBadge = 0;\r\n                    $scope.aboutMenu = menusService.commonMenus.aboutMenu.list;\r\n\r\n                    $scope.profileMenu = menusService.commonMenus.accountLoggedIn.list;\r\n                    $scope.loggedOutMenu = menusService.commonMenus.accountLoggedOut.list;\r\n                    $scope.commonMenu = menusService.commonMenus.common.list;\r\n                    $scope.linksMenu = menusService.commonMenus.linksMenu;\r\n\r\n                    $scope.loggedInMenu = [\r\n                        {\r\n                            title: $translate.instant('LENT_BORROWED'),\r\n                            BL: (() => alert(`Navigate to ${$translate.instant('LENT_BORROWED')}`))\r\n                        },\r\n                        {\r\n                            title: $translate.instant('LISTINGS'),\r\n                            BL: (() => alert(`Navigate to ${$translate.instant('LISTINGS')}`))\r\n                        },\r\n                        {\r\n                            title: $translate.instant('MESSAGES'),\r\n                            BL: (() => alert(`Navigate to ${$translate.instant('MESSAGES')}`))\r\n                        },\r\n\r\n                    ];\r\n\r\n                    $scope.loginSignUpPopupClick = (isSignUp) => {\r\n                        popupService.showLoginSignupPopup(isSignUp);\r\n                    };\r\n\r\n\r\n                    $scope.querySearch = (textQuery) => {\r\n                        const query = textQuery.toLowerCase();\r\n                        return apiService.products.getSuggestions(query)\r\n                            .then((response) => {\r\n                                return [{Rank: Infinity, Keyword: textQuery},...response.Data.sort((a,b) => b.Rank - a.Rank)];\r\n                            })\r\n                    };\r\n\r\n                    $scope.headerMenuClick = (item) => {\r\n                        $scope.close();\r\n                        menusService.menuClickHandlerMethod(item)\r\n                    };\r\n\r\n                    $scope.getMenuItemLink = (item) => {\r\n                        return item.link || '#';\r\n                    };\r\n\r\n                    $scope.initiateSearch = (keyword) => {\r\n                        if (keyword && keyword != '') {\r\n                            $rootScope.$emit(enums.busNavigation.browseKeyword,{keyword});\r\n                        }\r\n                    };\r\n\r\n\r\n                    $scope.searchBarOnKeyPress = ($event) => {\r\n                        if ($event.which == 13 && $event.target.value && $event.target.value != '') {\r\n                            $scope.initiateSearch($event.target.value);\r\n                            $event.preventDefault();\r\n                        }\r\n                    };\r\n\r\n                    $scope.toggleSideNav = () => {\r\n                        if ($mdComponentRegistry.get(enums.inAppSideNavsIds.chatSideNav) && $mdSidenav(enums.inAppSideNavsIds.chatSideNav).isOpen())\r\n                            $mdSidenav(enums.inAppSideNavsIds.chatSideNav).toggle();\r\n\r\n                        $mdSidenav(enums.inAppSideNavsIds.mainMobileNav).toggle();\r\n                    };\r\n\r\n                    $scope.close = () => {\r\n                        $mdSidenav(enums.inAppSideNavsIds.mainMobileNav).close()\r\n                    };\r\n\r\n                    if (appStateManager.user) { //TODO here user is always undefined \r\n                        $scope.user = appStateManager.user;  \r\n                    }\r\n\r\n                    $scope.updateCreditButton = () => {\r\n                        let userId = appStateManager.getUserId();\r\n                        if (userId) {            \r\n                            apiService.users.getUserCredit({userId})\r\n                            .then(\r\n                                (result) => {\r\n                                    $scope.currentCredit = result.Data.User_Credit;\r\n                                    $scope.currentCreditText = ($scope.currentCredit && $scope.currentCredit>0) \r\n                                        ? $translate.instant('CREDIT_MENU_ITEM') + \": \" + $scope.currentCredit + \"€\"\r\n                                        : $translate.instant('GET_FREE_CREDIT'); \r\n                                },\r\n                                (reason) => {\r\n                                    console.log('getUserCredit failed because: ', reason);\r\n        \r\n                                });\r\n                        }\r\n                    }\r\n\r\n                    \r\n                    \r\n                    $scope.creditMenuClick = () => {\r\n                        $scope.close();\r\n                        $rootScope.$emit(enums.busNavigation.userProfile, {userId: $scope.user.User_Id})\r\n                    }\r\n                    \r\n\r\n                    let deregs = [];\r\n                    deregs.push($rootScope.$on(enums.busEvents.updatedUser,(event,data) => {\r\n                        $scope.user = appStateManager.user;\r\n                        $scope.updateCreditButton();\r\n                    }));\r\n\r\n                    deregs.push($rootScope.$on(enums.busChatEvents.updateUnreadCount,(event,data) => {\r\n                        $scope.unreadBadge = data.total || 0;\r\n                        $scope.$apply();\r\n                    }));\r\n\r\n                    $transitions.onSuccess({to: 'app.**'}, function() {\r\n                        $scope.isScrollOffsetZero = ($state.current.data || {}).isCollapsingHeader || false;\r\n                        $scope.hideSearch = $state.includes('app.browse')\r\n                    });\r\n\r\n                    // let isLocked = false;\r\n                    angular.element(document.getElementById('main-ui-view')).bind('scroll',function () {\r\n\r\n                            const lastState = $scope.isScrollOffsetZero;\r\n                            let newState;\r\n                           if (this.scrollTop > 50)\r\n                               newState = false;\r\n                           else\r\n                               newState =\r\n                                   ($state.current.data || {}).isCollapsingHeader || false;\r\n                        if (newState !== lastState) {\r\n                            $scope.$evalAsync(() => {\r\n                                $scope.isScrollOffsetZero = newState;\r\n                            })\r\n                            // if (!isLocked) {\r\n                            //     isLocked = true;\r\n                            //     $scope.$apply(function () {\r\n                            //         isLocked = false;\r\n                            //     });\r\n                            // }\r\n                        }\r\n                    });\r\n\r\n                    $scope.$on('$destroy',() => {\r\n                        angular.element(document.getElementById('main-ui-view')).unbind('scroll');\r\n                        while (deregs.length)\r\n                            deregs.pop()();\r\n                    })\r\n\r\n                    $scope.updateCreditButton();\r\n                }\r\n            }\r\n    }]);","angular.module('paladinApp')\r\n.directive('homeStepsTutorial',['$rootScope','$sce',function ($rootScope,$sce) {\r\n    return {\r\n        restrict: 'E',\r\n        scope: {\r\n            stepsList: '<', /* strings[]*/\r\n            imgUrl: '<',\r\n            tutorialTitle: '<',\r\n            tutorialDescription:'<',\r\n        },\r\n        templateUrl:'./views/templates/homeStepsTutorial.tpl.html',\r\n        link: function ($scope, elem, attt) {\r\n            $scope.tutorialTitle = $sce.trustAsHtml($scope.tutorialTitle);\r\n        }\r\n    }\r\n}]);\r\n// /views/templates/homeStepsTutorial.tpl.html","angular.module('paladinApp')\r\n.directive('lazyLoading',[function () {\r\n    return {\r\n        restrict:'A',\r\n        link: function ($scope, elem, attr) {\r\n\r\n            /*We build sourceSet based on sizes: \r\n                Product: 100w,200w,300w,400w,500w\r\n                Profile: 100w,300w,500w\r\n                */\r\n            const buildSourceSet = (imagePath, isProfile) => {\r\n                let sourceSet = '';\r\n                for (var index = 1; index <= 5; index++) {\r\n                    if (isProfile && index%2 == 0) continue;  \r\n                    sourceSet = sourceSet + imagePath + attr.lazyLoading + \"_\"+index+\"00 \"+index+\"00w, \";   \r\n                }\r\n                if (sourceSet.length > 0)\r\n                    sourceSet = sourceSet + imagePath + attr.lazyLoading + \" 600w\";\r\n                    \r\n                return sourceSet;           \r\n            }\r\n            angular.element(elem)[0].src = '/assets/empty-image.png';\r\n\r\n            const getImagePath = () => {\r\n                let imagePath = '';\r\n                if (attr.imageType) {\r\n                    if  (attr.imageType == \"product\") {\r\n                        imagePath = window.globals.PRODUCT_IMAGE_URL;\r\n                    } else if (attr.imageType == \"profile\") {\r\n                        if (attr.lazyLoading.length > 0) \r\n                            imagePath = window.globals.PROFILE_IMAGE_URL;\r\n                        else imagePath = '/assets/profile.png';\r\n                    }\r\n                }\r\n                return imagePath;\r\n            }\r\n            \r\n            \r\n            function loadImg(changes){\r\n                changes.forEach(change => {\r\n                    if(change.intersectionRatio > 0){\r\n                        const imagePath = getImagePath();\r\n                        change.target.src = imagePath + attr.lazyLoading;\r\n                        if (attr.imageType && (attr.imageType == \"product\" \r\n                        || attr.imageType == \"profile\" && attr.lazyLoading.length > 0)) {\r\n                            change.target.srcset= buildSourceSet(imagePath, attr.imageType == \"profile\"); \r\n                        }\r\n                    }   \r\n                })\r\n            }    \r\n\r\n            const observer = new IntersectionObserver(loadImg)\r\n            const img = angular.element(elem)[0];\r\n            observer.observe(img)\r\n\r\n        }\r\n    }\r\n}]);","'use strict';\r\nangular.module('paladinApp')\r\n.directive(\r\n    \"lazyLoadingManual\", function( $window, $document ) {\r\n\r\n\r\n        // I manage all the images that are currently being\r\n        // monitored on the page for lazy loading.\r\n        var lazyLoader = (function() {\r\n\r\n            // I maintain a list of images that lazy-loading\r\n            // and have yet to be rendered.\r\n            var images = [];\r\n\r\n            // I define the render timer for the lazy loading\r\n            // images to that the DOM-querying (for offsets)\r\n            // is chunked in groups.\r\n            var renderTimer = null;\r\n            var renderDelay = 10;\r\n\r\n            // I cache the window element as a jQuery reference.\r\n            var win = $( $window );\r\n\r\n            // I cache the document document height so that\r\n            // we can respond to changes in the height due to\r\n            // dynamic content.\r\n            var doc = $document;\r\n            var documentHeight = angular.element($window);\r\n            // var documentHeight = doc.height();\r\n            var documentTimer = null;\r\n            var documentDelay = 200;\r\n\r\n            // I determine if the window dimension events\r\n            // (ie. resize, scroll) are currenlty being\r\n            // monitored for changes.\r\n            var isWatchingWindow = false;\r\n\r\n\r\n            // ---\r\n            // PUBLIC METHODS.\r\n            // ---\r\n\r\n\r\n            // I start monitoring the given image for visibility\r\n            // and then render it when necessary.\r\n            function addImage( image ) {\r\n\r\n                images.push( image );\r\n\r\n                if ( ! renderTimer ) {\r\n\r\n                    startRenderTimer();\r\n\r\n                }\r\n\r\n                if ( ! isWatchingWindow ) {\r\n\r\n                    startWatchingWindow();\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n            // I remove the given image from the render queue.\r\n            function removeImage( image ) {\r\n\r\n                // Remove the given image from the render queue.\r\n                for ( var i = 0 ; i < images.length ; i++ ) {\r\n\r\n                    if ( images[ i ] === image ) {\r\n\r\n                        images.splice( i, 1 );\r\n                        break;\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                // If removing the given image has cleared the\r\n                // render queue, then we can stop monitoring\r\n                // the window and the image queue.\r\n                if ( ! images.length ) {\r\n\r\n                    clearRenderTimer();\r\n\r\n                    stopWatchingWindow();\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n            // ---\r\n            // PRIVATE METHODS.\r\n            // ---\r\n\r\n\r\n            // I check the document height to see if it's changed.\r\n            function checkDocumentHeight() {\r\n\r\n                // If the render time is currently active, then\r\n                // don't bother getting the document height -\r\n                // it won't actually do anything.\r\n                if ( renderTimer ) {\r\n\r\n                    return;\r\n\r\n                }\r\n\r\n                var currentDocumentHeight = angular.element($window);\r\n\r\n                // If the height has not changed, then ignore -\r\n                // no more images could have come into view.\r\n                if ( currentDocumentHeight === documentHeight ) {\r\n\r\n                    return;\r\n\r\n                }\r\n\r\n                // Cache the new document height.\r\n                documentHeight = currentDocumentHeight;\r\n\r\n                startRenderTimer();\r\n\r\n            }\r\n\r\n\r\n            // I check the lazy-load images that have yet to\r\n            // be rendered.\r\n            function checkImages() {\r\n\r\n                // Log here so we can see how often this\r\n                // gets called during page activity.\r\n                //console.log( \"Checking for visible images...\" );\r\n\r\n                var visible = [];\r\n                var hidden = [];\r\n\r\n                // Determine the window dimensions.\r\n                var windowHeight = win.height();\r\n                var scrollTop = win.scrollTop();\r\n\r\n                // Calculate the viewport offsets.\r\n                var topFoldOffset = scrollTop;\r\n                var bottomFoldOffset = ( topFoldOffset + windowHeight );\r\n\r\n                // Query the DOM for layout and seperate the\r\n                // images into two different categories: those\r\n                // that are now in the viewport and those that\r\n                // still remain hidden.\r\n                for ( var i = 0 ; i < images.length ; i++ ) {\r\n\r\n                    var image = images[ i ];\r\n\r\n                    if ( image.isVisible( topFoldOffset, bottomFoldOffset ) ) {\r\n\r\n                        visible.push( image );\r\n\r\n                    } else {\r\n\r\n                        hidden.push( image );\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                // Update the DOM with new image source values.\r\n                for ( var i = 0 ; i < visible.length ; i++ ) {\r\n\r\n                    visible[ i ].render();\r\n\r\n                }\r\n\r\n                // Keep the still-hidden images as the new\r\n                // image queue to be monitored.\r\n                images = hidden;\r\n\r\n                // Clear the render timer so that it can be set\r\n                // again in response to window changes.\r\n                clearRenderTimer();\r\n\r\n                // If we've rendered all the images, then stop\r\n                // monitoring the window for changes.\r\n                if ( ! images.length ) {\r\n\r\n                    stopWatchingWindow();\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n            // I clear the render timer so that we can easily\r\n            // check to see if the timer is running.\r\n            function clearRenderTimer() {\r\n\r\n                clearTimeout( renderTimer );\r\n\r\n                renderTimer = null;\r\n\r\n            }\r\n\r\n\r\n            // I start the render time, allowing more images to\r\n            // be added to the images queue before the render\r\n            // action is executed.\r\n            function startRenderTimer() {\r\n\r\n                renderTimer = setTimeout( checkImages, renderDelay );\r\n                \r\n            }\r\n\r\n\r\n            // I start watching the window for changes in dimension.\r\n            function startWatchingWindow() {\r\n\r\n                isWatchingWindow = true;\r\n\r\n                // Listen for window changes.\r\n                win.on( \"resize.lazyLoading\", windowChanged );\r\n                win.on( \"scroll.lazyLoading\", windowChanged );\r\n\r\n                // Set up a timer to watch for document-height changes.\r\n                documentTimer = setInterval( checkDocumentHeight, documentDelay );\r\n\r\n            }\r\n\r\n\r\n            // I stop watching the window for changes in dimension.\r\n            function stopWatchingWindow() {\r\n\r\n                isWatchingWindow = false;\r\n\r\n                // Stop watching for window changes.\r\n                win.off( \"resize.lazyLoading\" );\r\n                win.off( \"scroll.lazyLoading\" );\r\n\r\n                // Stop watching for document changes.\r\n                clearInterval( documentTimer );\r\n\r\n            }\r\n\r\n\r\n            // I start the render time if the window changes.\r\n            function windowChanged() {\r\n\r\n                if ( ! renderTimer ) {\r\n\r\n                    startRenderTimer();\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n            // Return the public API.\r\n            return({\r\n                addImage: addImage,\r\n                removeImage: removeImage\r\n            });\r\n\r\n        })();\r\n\r\n\r\n        // ------------------------------------------ //\r\n        // ------------------------------------------ //\r\n\r\n\r\n        // I represent a single lazy-load image.\r\n        function LazyImage( element, attributes) {\r\n\r\n            // I am the interpolated LAZY SRC attribute of\r\n            // the image as reported by AngularJS.\r\n            var source = '/assets/empty-image.png';\r\n            element[ 0 ].src = source;\r\n            var imagePath = '';\r\n\r\n            if (attributes.imageType) {\r\n                if (attributes.imageType == \"product\") {\r\n                    imagePath = window.globals.PRODUCT_IMAGE_URL;\r\n                }\r\n            }\r\n\r\n\r\n            // I determine if the image has already been\r\n            // rendered (ie, that it has been exposed to the\r\n            // viewport and the source had been loaded).\r\n            var isRendered = false;\r\n\r\n            // I am the cached height of the element. We are\r\n            // going to assume that the image doesn't change\r\n            // height over time.\r\n            var height = null;\r\n\r\n\r\n            // ---\r\n            // PUBLIC METHODS.\r\n            // ---\r\n\r\n\r\n            // I determine if the element is above the given\r\n            // fold of the page.\r\n            function isVisible( topFoldOffset, bottomFoldOffset ) {\r\n\r\n                // If the element is not visible because it\r\n                // is hidden, don't bother testing it.\r\n                if ( ! element.is( \":visible\" ) ) {\r\n\r\n                    return( false );\r\n\r\n                }\r\n\r\n                // If the height has not yet been calculated,\r\n                // the cache it for the duration of the page.\r\n                if ( height === null ) {\r\n\r\n                    height = element.height();\r\n\r\n                }\r\n\r\n                // Update the dimensions of the element.\r\n                var top = element.offset().top;\r\n                var bottom = ( top + height );\r\n\r\n                // Return true if the element is:\r\n                // 1. The top offset is in view.\r\n                // 2. The bottom offset is in view.\r\n                // 3. The element is overlapping the viewport.\r\n                return(\r\n                        (\r\n                            ( top <= bottomFoldOffset ) &&\r\n                            ( top >= topFoldOffset )\r\n                        )\r\n                    ||\r\n                        (\r\n                            ( bottom <= bottomFoldOffset ) &&\r\n                            ( bottom >= topFoldOffset )\r\n                        )\r\n                    ||\r\n                        (\r\n                            ( top <= topFoldOffset ) &&\r\n                            ( bottom >= bottomFoldOffset )\r\n                        )\r\n                );\r\n\r\n            }\r\n\r\n\r\n            // I move the cached source into the live source.\r\n            function render() {\r\n\r\n                isRendered = true;\r\n\r\n                renderSource();\r\n\r\n            }\r\n\r\n\r\n            // I set the interpolated source value reported\r\n            // by the directive / AngularJS.\r\n            function setSource( newSource ) {\r\n\r\n\r\n                source = newSource;\r\n\r\n                if ( isRendered ) {\r\n\r\n                    renderSource();\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n            // ---\r\n            // PRIVATE METHODS.\r\n            // ---\r\n\r\n\r\n            // I load the lazy source value into the actual\r\n            // source value of the image element.\r\n            function renderSource() {\r\n\r\n                \r\n                element[ 0 ].src = imagePath + source;\r\n                //console.log(\"Added source image: \" + imagePath + source);\r\n            }\r\n\r\n\r\n            // Return the public API.\r\n            return({\r\n                isVisible: isVisible,\r\n                render: render,\r\n                setSource: setSource\r\n            });\r\n\r\n        }\r\n\r\n\r\n        // ------------------------------------------ //\r\n        // ------------------------------------------ //\r\n\r\n\r\n        // I bind the UI events to the scope.\r\n        function link( $scope, element, attributes ) {\r\n\r\n            var lazyImage = new LazyImage( element, attributes);\r\n\r\n            // Start watching the image for changes in its\r\n            // visibility.\r\n            lazyLoader.addImage( lazyImage );\r\n\r\n\r\n            // Since the lazy-src will likely need some sort\r\n            // of string interpolation, we don't want to\r\n            attributes.$observe(\r\n                \"lazyLoading\",\r\n                function( newSource ) {\r\n\r\n                    lazyImage.setSource( newSource );\r\n\r\n                }\r\n            );\r\n\r\n\r\n            // When the scope is destroyed, we need to remove\r\n            // the image from the render queue.\r\n            $scope.$on(\r\n                \"$destroy\",\r\n                function() {\r\n\r\n                    lazyLoader.removeImage( lazyImage );\r\n\r\n                }\r\n            );\r\n\r\n        }\r\n\r\n\r\n        // Return the directive configuration.\r\n        return({\r\n            link: link,\r\n            restrict: \"A\"\r\n        });\r\n\r\n    }\r\n);","angular.module('paladinApp')\r\n.directive('loaderContainer',[\r\n    function () {\r\n        return {\r\n            restrict: 'E',\r\n            transclude: true,\r\n            // scope: {\r\n            //     isLoading: '=',\r\n            //     loaderSize: '=?',\r\n            // },\r\n            templateUrl:'./views/templates/loaderContainer.tpl.html',\r\n            link: function ($scope, elem, attr) {\r\n                $scope.loaderSize = $scope.loaderSize || 50;\r\n            }\r\n        }\r\n    }]);","'use strict';\r\nangular.module('paladinApp')\r\n    .directive('whenScrolled', function() {\r\n        let threshold = 10;\r\n        return function(scope, elm, attr) {\r\n            var raw = elm[0];\r\n\r\n            elm.bind('scroll', function() {\r\n                if (Math.ceil(raw.scrollTop + raw.offsetHeight) >= raw.scrollHeight - threshold) {\r\n                    var t = setTimeout(() => {\r\n                        scope.$apply(attr.whenScrolled);\r\n                        clearTimeout(t);\r\n                        t = null;\r\n                    },10)\r\n                }\r\n            });\r\n        }\r\n    });","angular.module('paladinApp')\r\n.directive('productImage',[function () {\r\n    return {\r\n        restrict:'A',\r\n        link: function ($scope, elem, attr) {\r\n            angular.element(elem)[0].src = '/assets/blank-image.jpg';\r\n            \r\n            function loadImg(changes){\r\n                changes.forEach(change => {\r\n                    if(change.intersectionRatio > 0){\r\n                        change.target.src = window.globals.PRODUCT_IMAGE_URL + attr.productImage;\r\n                    }\r\n                })\r\n            }    \r\n\r\n            const observer = new IntersectionObserver(loadImg)\r\n            const img = angular.element(elem)[0];\r\n            observer.observe(img)\r\n\r\n            \r\n        }\r\n    }\r\n}]);","angular\r\n.module('paladinApp')\r\n.component('products', {\r\n  bindings: {\r\n    filter:'=',\r\n    count: '<',\r\n    loading:'<'\r\n  },\r\n  controller:class ProductController {\r\n\r\n    constructor($scope,$sce,Filters,$rootScope,enums,ngMeta,$translate,$window,$location){\r\n      this.scope =$scope;\r\n      this.sce = $sce;\r\n      this.Filters = Filters;\r\n      this.rootScope= $rootScope;\r\n      this.ngMeta=ngMeta;\r\n      this.loading=true;\r\n      this.translate = $translate;\r\n      this.window = $window ;\r\n      this.location =$location;\r\n      this.enums = enums;\r\n    }\r\n\r\n    $onInit() {\r\n      this.count=0;    \r\n      this.loading=true; \r\n      var _this = this;\r\n      \r\n\r\n      this.scope.$on('showSpinner', function(event){\r\n        \r\n        _this.loading = true;\r\n      });\r\n\r\n      this.scope.$on('hideSpinner', function(event){\r\n        \r\n        _this.loading = false;\r\n      });\r\n\r\n      \r\n    }\r\n\r\n    getCurrentCategory(){\r\n      \r\n      \r\n      return this.translate.instant('ACTG');\r\n    }\r\n\r\n    isNotAllCategory(){\r\n      return this.filter.category.defaultCategoryName!=this.filter.category.selectedCategoryName \r\n            && this.filter.category.selectedCategoryName != this.getCurrentCategory();\r\n    }\r\n\r\n    refreshProducts(){      \r\n      //console.log(\"REFRESH PRODUCTS in products.js\");  \r\n      this.rootScope.$broadcast('filtersUpdated',this.filter);       \r\n    }    \r\n\r\n    sortBy(sort,code){\r\n      this.filter.sortBy = sort;\r\n      this.filter.sortByCode = code;\r\n      this.filter.currentPage = 1;\r\n      this.refreshProducts();\r\n    }\r\n\r\n    getBannerImageUrl(){\r\n      return (this.isNotAllCategory() ? window.globals.CATEGORY_IMAGE_URL : '')\r\n        + (this.filter.category.selectedSubCategoryBannerImage ? this.filter.category.selectedSubCategoryBannerImage : this.filter.category.selectedCategoryBannerImage);\r\n    }\r\n\r\n    getCategoryDescription(){\r\n      if (!this.filter.category.selectedCategoryId) {\r\n        //all categories selected\r\n        var desc = this.translate.instant('ALL_CATEGORIES_DESC');\r\n        if (desc.length>0) {\r\n          return this.sce.trustAsHtml(desc);\r\n        } else {\r\n          return null;\r\n        }\r\n      } else if (this.filter.category.selectedSubCategoryId != null) {\r\n        //sub category selected\r\n        return this.filter.category.selectedSubCategoryDesc;\r\n      } else {\r\n        return this.filter.category.selectedCategoryDesc;\r\n      }  \r\n    }\r\n\r\n    switchCategoryToAll(category){      \r\n      this.filter.category.selectedCategoryId = null;\r\n      this.filter.category.selectedCategoryDesc =this.sce.trustAsHtml(this.translate.instant('ACTG'));\r\n      this.filter.category.selectedCategoryName =this.translate.instant('ACTG');  \r\n      this.filter.category.selectedCategoryImagePath=null;\r\n      this.filter.category.selectedCategoryBannerImage = window.globals.IS_PROMO ? this.enums.categoriesBannersPaths.promo : this.enums.categoriesBannersPaths.all[this.translate.use()];\r\n      this.removeSubCategory();      \r\n      this.refreshProducts();\r\n    }\r\n\r\n    getH1(){\r\n      \r\n      var h1 = '';\r\n      var selectedCategoryStr = this.filter.category && this.filter.category.selectedSubCategoryName \r\n        ? this.filter.category.selectedSubCategoryName\r\n        : this.filter.category.selectedCategoryName;\r\n\r\n        \r\n      h1 += this.isNotAllCategory() ? this.translate.instant('FIND_THE_BEST')+' ' : this.translate.instant('RENT') + ' ';\r\n        \r\n      if (this.filter.search.currentSearchStr && this.filter.search.currentSearchStr.length>0) {\r\n        h1 +=\"\\\"\" + this.filter.search.currentSearchStr + \"\\\"\" + \" \" + this.translate.instant('WITHIN') + \" \";\r\n      } \r\n        h1 += selectedCategoryStr;\r\n\r\n      var placeName = this.filter.glCity;\r\n      if(placeName){\r\n         h1 += this.translate.instant('IN')+' '+placeName.split(',')[0]; \r\n      } \r\n      //return this.capitalizeFilter(h1);\r\n      return h1;\r\n    }\r\n\r\n    getH2(){\r\n      var h2 = this.translate.instant('RENT_AT_BEST_PRICE')+ ' ';\r\n\r\n      if(this.filter.category && this.filter.category.selectedCategoryName && !this.filter.category.selectedSubCategoryName){\r\n        h2 += this.filter.category.selectedCategoryName;\r\n      }else if(this.filter.category && this.filter.category.selectedSubCategoryName){\r\n        h2 += this.filter.category.selectedSubCategoryName;\r\n      }\r\n\r\n      var placeName =this.filter.glCity;\r\n      if(placeName){\r\n         h2 += this.translate.instant('IN')+' '+placeName.split(',')[0]; \r\n      } \r\n      return h2;\r\n    }\r\n    \r\n    getCategoriesUrl(categoryName, subcategoryName) {\r\n      return this.Filters.getCategoriesUrl(categoryName, subcategoryName, this.rootScope.isTryAndBuy, this.translate.use());\r\n    }\r\n\r\n\r\n    removeSubCategory(){      \r\n      this.filter.category.selectedSubCategoryId = null;\r\n      this.filter.category.selectedSubCategoryDesc =null;  \r\n      this.filter.category.selectedSubCategoryName =null;  \r\n      this.filter.category.selectedSubCategoryImagePath = null;\r\n      this.filter.category.selectedSubCategoryBannerImage = null;\r\n    }\r\n\r\n    switchMainCategory(){      \r\n      //here when sub category is implemented make it defaut so only main category will be seen\r\n      this.removeSubCategory();\r\n      this.refreshProducts();\r\n    }\r\n    switchSubCategory(){\r\n      this.refreshProducts();\r\n    }\r\n    /*goBack(){\r\n      console.log('GO BACK CLICKED')\r\n      console.log(this.translate.proposedLanguage())\r\n      //this.location.url('/');\r\n      //this.refreshProducts();\r\n    }*/\r\n\r\n  },\r\n  templateUrl:'./views/templates/products.tpl.html'\r\n})\r\n\r\n;","angular.module('paladinApp')\r\n    .directive('productStatusLabel',[\r\n        '$rootScope',\r\n        'enums',\r\n        'ptUtils',\r\n        function (\r\n            $rootScope,\r\n            enums,\r\n            ptUtils) {\r\n            return {\r\n                restrict: 'E',\r\n                templateUrl:'./views/templates/productStatusLabel.tpl.html',\r\n                scope: {\r\n                    statusId: '=',\r\n                },\r\n                link: function ($scope, elem, attr) {\r\n                    /*\r\n                      \"PRODUCT_STATUS_REQUESTED\": \"Requested\",\r\n                      \"PRODUCT_STATUS_ACCEPTED\": \"Accepted\",\r\n                      \"PRODUCT_STATUS_CANCELED\": \"Canceled\",\r\n                      \"PRODUCT_STATUS_DECLINED\": \"Declined\",\r\n                      \"PRODUCT_STATUS_TIMEOUT\": \"Timeout\",\r\n                      \"PRODUCT_STATUS_STARTED\": \"Started\",\r\n                      \"PRODUCT_STATUS_ENDED\": \"Ended\"\r\n\r\n                '50': '#69C187', //available,\r\n                '100': '#fb814a', // requested\r\n                '200': '#ee4e4a', // timeout / canceled (pre accept) / canceled by lender / canceled by borrower / declined\r\n                '300': '#4ec07e', // accepted\r\n                '400': '#0d87f6', // started\r\n                '500': '#8d72f4', // ended\r\n                'A100': '#fff', // not in use (must have for palette definition)\r\n                'A200': '#fff', // not in use (must have for palette definition)\r\n                'A400': '#fff', // not in use (must have for palette definition)\r\n                'A700': '#fff', // not in use (must have for palette definition)\r\n                    */\r\n                    $scope.setDataForStatusId = () => {\r\n                        let {\r\n                            text,\r\n                            color\r\n                        } = ptUtils.getDisplayDataForTransactionStatus($scope.statusId);\r\n                        $scope.mainColor = color;\r\n                        $scope.statusLabel = text;\r\n                    };\r\n\r\n                    $scope.setDataForStatusId();\r\n\r\n                }\r\n            }\r\n        }]);","angular.module('paladinApp')\r\n    .directive('productsTeaser',[\r\n        '$rootScope',\r\n        'apiService',\r\n        'enums',\r\n        'dataService',\r\n        'appStateManager',\r\n        'toastService',\r\n        '$timeout',\r\n        function (\r\n            $rootScope,\r\n            apiService,\r\n            enums,\r\n            dataService,\r\n            appStateManager,\r\n            toastService,\r\n            $timeout\r\n        ) {\r\n            return {\r\n                restrict:'E',\r\n                templateUrl:'./views/templates/productsTeaser.tpl.html',\r\n                scope: {\r\n                    customTitle: '<?',\r\n                    categoryId: '<?',\r\n                    categoryName: '<?',\r\n                    subCategoryId: '<?',\r\n                    categoryDescription: '<?',\r\n                    descriptionLink:'<?',\r\n                    isPopularItems:'<?',\r\n                    isRecentItems: '<?',\r\n                    isTryAndBuy: '<?',\r\n                    productIds: '<?',\r\n                    userId: '<?',\r\n                    products: '<?',\r\n                    currentProductId: '<?',\r\n                },\r\n                link: function ($scope, elem, attr) {\r\n                    $scope.isLoading = true;\r\n                    $scope.isPopularItems = $scope.isPopularItems || false;\r\n                    $scope.isRecentItems = $scope.isRecentItems || false;\r\n                    $scope.category = null;\r\n                    $scope.products = $scope.products || [];\r\n                    $scope.scrollArrows = { isRightVisible: false,  isLeftVisible: false };\r\n\r\n                    const init = () => {\r\n\r\n                        if ($scope.products) {\r\n                            $scope.isLoading = false;\r\n                            $timeout( () => {\r\n                                $scope.validateScrollingArrows();\r\n                            },300);\r\n                            return;\r\n                        }\r\n                            \r\n\r\n                        if ($scope.categoryId) {                      \r\n                            if (!appStateManager.categoriesDict) {\r\n                                return dataService.getCategories()\r\n                            }\r\n                            $scope.category = appStateManager.categoriesDict[$scope.categoryId];\r\n                        }\r\n\r\n                        fetchProducts();\r\n                    };\r\n\r\n                    const getData = () => {\r\n                        //get products via productID list\r\n                        if ($scope.products) {\r\n                            return \r\n                        }\r\n                        if ($scope.productIds) {\r\n                            return apiService.products.getSearchedProducts({\r\n                                productPerPage: 20,\r\n                                sortBy: enums.productsSortOptions.bestProduct,\r\n                                productIDs: $scope.productIds,\r\n                            });\r\n                        }\r\n\r\n                        if ($scope.isTryAndBuy) {\r\n                               return apiService.products.getPopularTryAndBuy();\r\n                        } else if ($scope.userId) {\r\n                                let requestParams = {\r\n                                    userId: $scope.userId,\r\n                                    productsFilter: enums.userProductsFilter.myProductsToBorrow,\r\n                                };\r\n                                return apiService.products.getUserProducts(requestParams)\r\n                                    .then((res) => {\r\n                                        return {Data:[res.Data.User_AllProducts]}\r\n                                    })\r\n                        } else {\r\n                            \r\n                            let requestParams = {\r\n                                productPerPage: 20,\r\n                            };\r\n\r\n                            if ($scope.categoryId) {\r\n                                requestParams.categoryId = $scope.categoryId;\r\n                                requestParams.sortBy = enums.productsSortOptions.bestProduct;\r\n                                if ($scope.subCategoryId) {\r\n                                    requestParams.subCategoryId = $scope.subCategoryId;\r\n                                }\r\n                            } else if ($scope.isPopularItems) {\r\n                                requestParams.sortBy = enums.productsSortOptions.popularity;\r\n                            } else if ($scope.isRecentItems) {\r\n                                requestParams.sortBy = enums.productsSortOptions.recent;\r\n                            }\r\n                            return apiService.products.getSearchedProducts(requestParams);\r\n                        }\r\n                        // return new Promise((resolve,reject)=> reject('Method not implemented'))\r\n                    };\r\n                    const fetchProducts = () => {\r\n                        $scope.isLoading = true;\r\n                        getData()\r\n                            .then((response) => {\r\n                                $scope.isLoading = false;\r\n                                $scope.products = response.Data[0].filter((product) => product.Product_Id != $scope.currentProductId);\r\n                                $timeout( () => {\r\n                                    $scope.validateScrollingArrows();\r\n                                },300);\r\n                            })\r\n                            .catch((err) => {\r\n                                $scope.isLoading = false;\r\n                                $scope.products = [];\r\n                            })\r\n                    };\r\n\r\n\r\n\r\n                    $scope.onSwipe = (isLeft, $event, $target) => {\r\n                        // button-overlay -> products-teaser-list-item -> products-teaser-list -> div#productsTeaserList + categoryId\r\n                        let objToScroll = $target.current.parentElement.parentElement.parentElement;\r\n                        if (objToScroll) {\r\n\r\n\r\n                            const minScrollOffset = 0,\r\n                                visibleWidth = objToScroll.clientWidth,\r\n                                maxScrollOffset = objToScroll.scrollWidth - visibleWidth,\r\n                                currentOffset = objToScroll.scrollLeft,\r\n                                itemWidth = $target.current.clientWidth,\r\n                                itemsInPage = visibleWidth / itemWidth;\r\n\r\n\r\n                            let newScrollTo = isLeft ? currentOffset + (visibleWidth - (itemWidth / itemsInPage) ): currentOffset - (visibleWidth - (itemWidth / itemsInPage) );\r\n                            if (newScrollTo > maxScrollOffset)\r\n                                newScrollTo = maxScrollOffset;\r\n                            else if (newScrollTo < minScrollOffset)\r\n                                newScrollTo = minScrollOffset;\r\n\r\n                            let initialTimes = 30;\r\n                            let times = 0;\r\n                            let offset = currentOffset > newScrollTo ? currentOffset - newScrollTo : newScrollTo - currentOffset;\r\n                            let step = offset / initialTimes;\r\n                            let lastOffset = currentOffset < newScrollTo ? currentOffset + step : currentOffset - step;\r\n                            // objToScroll.scrollTo(newScrollTo, objToScroll.scrollTop);\r\n\r\n\r\n                            const id = setInterval(() => {\r\n                                lastOffset = currentOffset < newScrollTo ? lastOffset + step : lastOffset - step;\r\n                                objToScroll.scrollTo(lastOffset, objToScroll.scrollTop);\r\n                                if (times == initialTimes) {\r\n                                    clearInterval(id);\r\n                                    $scope.validateScrollingArrows();\r\n                                }\r\n                                times++\r\n                            }, step*0.4);\r\n\r\n                        }\r\n\r\n\r\n                    };\r\n\r\n                    $scope.onArrowClick = (isLeft) => {\r\n                        // 'productTeaserItem-' + $scope.products[0].Product_Id\r\n                        const firstItem = angular.element(document.querySelector(`#productTeaserItem-${$scope.products[0].Product_Id} .products-teaser-list-item-v2 .button-overlay`))[0];\r\n                        $scope.onSwipe(isLeft,null,{current: firstItem});\r\n                    };\r\n\r\n                    $scope.validateScrollingArrows = () => {\r\n                        $scope.instantiateScroller();\r\n                        if ($scope.products.length > 0) {\r\n                            const firstItem = angular.element(document.querySelector(`#productTeaserItem-${$scope.products[0].Product_Id} .products-teaser-list-item-v2 .button-overlay`))[0];\r\n                                // if (firstItem) {\r\n                                    const scroller = angular.element(document.getElementById('productsTeaserList' + ( $scope.categoryId || ($scope.isRecentItems ? 'Recent' : $scope.isPopularItems ? 'Popular' : ''))));\r\n                                    if (scroller[0]) {\r\n                                        const visibleWidth = scroller[0].clientWidth,\r\n                                            maxScrollOffset = scroller[0].scrollWidth - visibleWidth,\r\n                                            currentOffset = scroller[0].scrollLeft;\r\n                                        $scope.$evalAsync(() => {\r\n                                            $scope.scrollArrows.isLeftVisible = Math.round(currentOffset) != 0;\r\n                                            $scope.scrollArrows.isRightVisible = Math.round(currentOffset) != maxScrollOffset;\r\n                                        })\r\n                                    }\r\n\r\n                                // }\r\n\r\n                        } else {\r\n                            $scope.$evalAsync(() => {\r\n                                $scope.scrollArrows.isLeftVisible = false;\r\n                                $scope.scrollArrows.isRightVisible = false;\r\n                            })\r\n                        }\r\n                    };\r\n                    $scope.seeAll = () => {\r\n                        if ($scope.categoryId) {\r\n                            $rootScope.$emit(enums.busNavigation.browseCategory, {categoryName: $scope.categoryName});\r\n                        }\r\n                        else if ($scope.isPopularItems || $scope.isRecentItems)\r\n                            $rootScope.$emit(enums.busNavigation.browseSort,{sortBy: $scope.isRecentItems ? enums.productsSortOptions.recent : enums.productsSortOptions.popularity});\r\n                        else if ($scope.userId) {\r\n                            $rootScope.$emit(enums.busNavigation.userProfile,{userId:$scope.userId})\r\n                        } else if ($scope.isTryAndBuy != undefined) {\r\n                            $rootScope.$emit(enums.busNavigation.switchBrowseMode, {isTryAndBuy: $scope.isTryAndBuy})  \r\n                        }\r\n\r\n                    };\r\n\r\n                    $scope.getHrefLink = () => {\r\n                        let href='';\r\n                \r\n                        if ($scope.categoryId) {\r\n                            href = window.globals.ROOT_PATH + appStateManager.currentLang + \"/categorie/\"+ $scope.categoryName;\r\n                        \r\n                            // $rootScope.$emit(enums.busNavigation.userProfile,{userId:$scope.userId})\r\n                        } else if ($scope.isTryAndBuy != undefined) {\r\n                            href = window.globals.ROOT_PATH + appStateManager.currentLang + \"/categorie/\"+ \r\n                                    ($scope.isTryAndBuy ? '' : \"privato/\") +\r\n                                    (appStateManager.currentLang == 'it'? \"Tutte-le-Categorie\" : \"All-Categories\")+ \"?sortBy=SortByBestProduct&pageIndex=1\";\r\n                        } else if ($scope.userId) {\r\n\r\n                        }\r\n\r\n                        return href.length > 0 ? href.split(' ').join('-') : \"javascript:void(0);\";\r\n                    }\r\n\r\n                    $scope.instantiateScroller = () => {\r\n                        if (!$scope.scroller) {\r\n                            $scope.scroller = angular.element(document.getElementById('productsTeaserList' + ( $scope.categoryId || ($scope.isRecentItems ? 'Recent' : $scope.isPopularItems ? 'Popular' : ''))));\r\n\r\n                            $scope.scroller.bind('resize',function () {\r\n                                $scope.validateScrollingArrows();\r\n                            });\r\n                        }\r\n                    };\r\n\r\n                    let deregs = [];\r\n\r\n\r\n                    deregs.push($rootScope.$on(enums.busEvents.categoriesUpdate,(event,data) => {\r\n                        init();\r\n                    }));\r\n\r\n\r\n                    $scope.$on('$destroy',function () {\r\n                        if ($scope.scroller)\r\n                            $scope.scroller.unbind('resize');\r\n                        while (deregs.length)\r\n                            deregs.pop()();\r\n                    });\r\n                    init();\r\n                }\r\n            }\r\n        }]);","angular.module('paladinApp')\r\n.directive('productTeaserListItem',['$rootScope','enums','ptUtils', function ($rootScope,enums, ptUtils) {\r\n    return {\r\n        restrict:'E',\r\n        scope: {\r\n            product:'<',\r\n            onSwipe: '&',\r\n        },\r\n        templateUrl:'./views/templates/productTeaserListItem.tpl.html',\r\n        link: function ($scope, elem, attr) {\r\n            $scope.onItemClick = () => {\r\n                $rootScope.$emit(enums.busNavigation.productDetailed,{product: $scope.product})\r\n            };\r\n\r\n            $scope.getProductUrl = () => {\r\n                if ($scope.product)\r\n                    return ptUtils.getProductDetailUrl($scope.product);\r\n                return \"#\";\r\n            }\r\n\r\n            \r\n            $scope.onItemSwipe = (isLeft,$event,$target) => {\r\n              if ($scope.onSwipe)\r\n                  $scope.onSwipe()(isLeft,$event,$target);\r\n            }\r\n        }\r\n    }\r\n}]);","angular\r\n    .module('paladinApp')\r\n.component('productlist', {\r\n  bindings: {\r\n      filter:'=',\r\n      pages:'<',\r\n      totalPages:'<',\r\n      productsList:'=?',\r\n      count: '<',\r\n      isLoading: '=?'\r\n  },\r\n  controller: class FilterComponent {\r\n\r\n    constructor($scope,$rootScope,$location,Products,ngMeta,pager,$anchorScroll,$translate,enums,ptUtils) {\r\n        this.rootScope = $rootScope;\r\n        this.scope = $scope;\r\n        this.Products=Products;\r\n        this.profileImageBaseUrl = window.globals.PROFILE_IMAGE_URL;\r\n        this.productImageBaseUrl = window.globals.PRODUCT_IMAGE_URL;\r\n        this.ngMeta=ngMeta;\r\n        this.pager=pager;\r\n        this.anchorScroll=$anchorScroll;\r\n        this.translate = $translate;\r\n        this.location = $location;\r\n        this.enums = enums;\r\n        this.ptUtils = ptUtils;\r\n    }\r\n    $onInit() {\r\n      //this.products=[];\r\n      this.count=0;\r\n      this.totalPages=0;\r\n      this.productsList = null;\r\n      this.isLoading = false;\r\n  //    this.refreshPageList();      \r\n      this.anchorScroll.yOffset = 0;\r\n      this.profileDefaultImage=\"../../assets/profile.png\";  \r\n\r\n      //this.onFilterChange(false);\r\n      var _this = this;\r\n      this.scope.$on('filtersUpdated', function(event){\r\n        _this.onFilterChange(false);\r\n      });\r\n\r\n      this.scope.$on('languageChanged', function(event,data){\r\n        \r\n        _this.filter.languageCode = data;\r\n        _this.onFilterChange(false);\r\n      });\r\n\r\n      if (this.rootScope.filter) {\r\n        this.onFilterChange(false);  \r\n      }\r\n\r\n    }\r\n\r\n    updateMetaTags(){\r\n      this.ngMeta.setTitle(this.getPageTitle());\r\n      this.ngMeta.setTag('description',this.getMetaTags());\r\n      this.ngMeta.setTag('imagePath', '../../assets/paladin-logo-300x300.png');\r\n    }\r\n\r\n    getPageTitle(){\r\n      if (!this.filter.category.selectedCategoryId) \r\n      {\r\n        //all categories selected, we put static title\r\n        return this.translate.instant('HOME_TITLE');\r\n      }\r\n      var title = this.translate.instant('RENT')+' ';\r\n      if(this.filter.category && this.filter.category.selectedCategoryName && !this.filter.category.selectedSubCategoryName){\r\n        title += this.filter.category.selectedCategoryName;\r\n      }else if(this.filter.category && this.filter.category.selectedSubCategoryName){\r\n        title += this.filter.category.selectedSubCategoryName;\r\n      }\r\n\r\n      var placeName =this.filter.glCity;\r\n      if(placeName){\r\n        title += this.translate.instant('IN')+' '+placeName.split(',')[0]; \r\n      }\r\n\r\n      return title;\r\n    }\r\n\r\n    getPricePerDayLabel() {\r\n      return this.translate.instant(window.innerWidth < 768 ? 'PD' : 'PPD');\r\n    }\r\n\r\n   \r\n    getMetaTags(){\r\n      if (this.filter.category.selectedCategoryName == this.enums.allCategories[this.filter.languageCode]) {\r\n        return this.translate.instant(\"DEFAULT_META_DESC\");\r\n      }\r\n      var tag = this.translate.instant(\"RENT_AND_LEND\")+' ';\r\n      if(this.filter.category && this.filter.category.selectedCategoryName){\r\n        tag += this.filter.category.selectedCategoryName;\r\n      }else if(this.filter.category && this.filter.category.selectedSubCategoryName){\r\n        tag += this.filter.category.selectedSubCategoryName;\r\n      }\r\n\r\n      var placeName =this.filter.glCity;\r\n      if(placeName){\r\n            tag += this.translate.instant('IN')+' '+placeName.split(',')[0]; \r\n      }\r\n      tag+=' ' + this.translate.instant(\"WITH\") + ' Paladin!'\r\n      return tag;\r\n    }\r\n\r\n    getDistanceLabel(product) {\r\n\r\n      return '< ' + Math.ceil(this.getDistanceFromLatLonInKm(product.Product_Latitude, product.Product_Longitude, \r\n        this.rootScope.filter.search.lat, this.rootScope.filter.search.lng)) + \" \" + this.translate.instant(\"KM_FROM_YOU\");\r\n      \r\n    }\r\n\r\n    getDistanceFromLatLonInKm(lat1,lon1,lat2,lon2) {\r\n      var R = 6371; // Radius of the earth in km\r\n      var dLat = this.deg2rad(lat2-lat1);  // deg2rad below\r\n      var dLon = this.deg2rad(lon2-lon1); \r\n      var a = \r\n        Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n        Math.cos(this.deg2rad(lat1)) * Math.cos(this.deg2rad(lat2)) * \r\n        Math.sin(dLon/2) * Math.sin(dLon/2)\r\n        ; \r\n      var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \r\n      var d = R * c; // Distance in km\r\n      return d;\r\n    }\r\n    \r\n    deg2rad(deg) {\r\n      return deg * (Math.PI/180)\r\n    }\r\n\r\n   navigateToProduct(product) {\r\n        this.rootScope.$emit(this.enums.busNavigation.productDetailed,{ product });\r\n   }\r\n\r\n    getProductDetailUrl(product){\r\n      var url = '/';\r\n\r\n      if(product){\r\n\r\n        url+= this.filter.languageCode ? this.filter.languageCode : '';\r\n      \r\n        url+= '/product';\r\n\r\n\r\n        //url+='/'+product.Product_Title.trim().split('-').join('+').split(' ').join('-').split('/').join('^');\r\n        url+='/'+this.Products.encryptProductURL(product.Product_Id);\r\n        url+='-' + product.Product_Id;\r\n\r\n        /*\r\n        var placeName = this.filter.glCity;\r\n        this.rootScope.searchedLocation = placeName;\r\n        if(placeName){\r\n          //url+='?searchedLocation='+encodeURIComponent(placeName);\r\n        }\r\n\r\n        if(this.filter.search.searchStr){\r\n          this.rootScope.q = this.filter.search.searchStr;\r\n          //url+='&&q='+encodeURIComponent(this.filter.search.searchStr); \r\n        }\r\n\r\n        if(this.filter.category && this.filter.category.selectedCategoryName){\r\n          if(url.indexOf('?')<0)url+='?';\r\n\r\n          //console.log('SEL CAT : '+this.filter.category.selectedCategoryName)\r\n          this.rootScope.category = this.filter.category.selectedCategoryName.toString().replace(/-/g, ' ');\r\n          //url += '&&category='+this.filter.category.selectedCategoryName.toString().replace(/\\s+/g, '-');\r\n        }\r\n        if(this.filter.category && this.filter.category.selectedSubCategoryName){\r\n          if(url.indexOf('?')<0)url+='?';\r\n\r\n          //console.log('SEL SUBCAT : '+this.filter.category.selectedSubCategoryName)\r\n          this.rootScope.subcategory =this.filter.category.selectedSubCategoryName.toString().replace(/-/g, ' ');\r\n         // url += '&&subcategory='+this.filter.category.selectedSubCategoryName.toString().replace(/\\s+/g, '-');\r\n        }\r\n      }\r\n      //console.log('before redirect : '+this.filter.category.selectedCategoryName);\r\n      */\r\n      }\r\n      return url;\r\n      //return url;\r\n    }\r\n\r\n    goToProductPage(product) {\r\n      this.location.url(getProductDetailUrl(product));\r\n    }\r\n    \r\n    goTo(pageNumber){\r\n      this.filter.currentPage = pageNumber;\r\n      \r\n      this.onFilterChange(true);       \r\n    }\r\n    \r\n    isFirstPage(){\r\n      if(this.filter.currentPage==1)return true;\r\n      return false;\r\n    }\r\n\r\n    setPage(page){\r\n         if (page>=1 && page <=this.totalPages) {\r\n           this.filter.currentPage = page;\r\n           this.refreshPageList();\r\n           this.onFilterChange(true);   \r\n         }\r\n    }\r\n    refreshPageList() {\r\n      this.pages = this.pager.GetPager(this.totalPages,this.filter.currentPage,5);\r\n      this.isLoading = false;\r\n      this.ngMeta.setTag(\"prevUrl\", undefined);\r\n      this.ngMeta.setTag(\"nextUrl\", undefined);\r\n\r\n      if (this.filter.currentPage > 1) {\r\n        this.ngMeta.setTag(\"prevUrl\", this.location.absUrl().replace('pageIndex=' + this.filter.currentPage,'pageIndex=' + (this.filter.currentPage-1)));\r\n      }\r\n      if (this.filter.currentPage < this.totalPages) {\r\n        this.ngMeta.setTag(\"nextUrl\", this.location.absUrl().replace('pageIndex=' + this.filter.currentPage,'pageIndex=' + (this.filter.currentPage+1)));\r\n\r\n      }\r\n      // this.rootScope.$broadcast('hideSpinner');\r\n      \r\n    }\r\n\r\n    scrollToAnchor() {\r\n\r\n      var oldAnchor = this.location.hash();\r\n      this.location.hash(\"breadcrumb\");\r\n      this.anchorScroll();\r\n      this.location.hash(oldAnchor);\r\n    }\r\n\r\n    getProductUrl(product) {\r\n      if (product)\r\n          return this.ptUtils.getProductDetailUrl(product);\r\n      return \"#\";\r\n    }\r\n\r\n    isParentCategorySelected() {\r\n      return this.filter.category.selectedCategoryId && this.filter.category.selectedSubCategoryId == null;\r\n    }\r\n\r\n    onFilterChange(scrollTop){   \r\n      \r\n      if (this.rootScope.filter && !this.isParentCategorySelected() && window.innerWidth < 768 || scrollTop) {\r\n        this.scrollToAnchor();\r\n      }           \r\n      // this.rootScope.$broadcast('showSpinner');\r\n      this.isLoading = true;\r\n        this.productsList = [];\r\n      this.updateMetaTags();\r\n\r\n\r\n      this.scope.$evalAsync(() => {\r\n          this.productsList = [];\r\n          Promise.all([\r\n              this.Products.getAll(this.filter),\r\n              this.Products.getTotalPageCount(this.filter)\r\n          ])\r\n              .then((results) => {\r\n                  this.scope.$evalAsync(() => {\r\n                      this.isLoading = false;\r\n                      this.productsList = results[0].data.Data[0];\r\n                      this.totalPages = results[1].data.Data;\r\n                      this.refreshPageList()\r\n                  })\r\n              })\r\n              .catch((err) => {\r\n                  this.scope.$evalAsync(() => {\r\n                      this.isLoading = false;\r\n                      this.productsList = [];\r\n                      this.totalPages = 0;\r\n                  })\r\n              });\r\n      });\r\n\r\n    }\r\n\r\n    increment() {\r\n      this.count++;\r\n    }\r\n    decrement() {\r\n      this.count--;\r\n    }\r\n    \r\n  },\r\n  templateUrl:'./views/templates/product_list.tpl.html'\r\n})\r\n\r\n;","angular.module('paladinApp')\r\n    .directive('profileImage',[function () {\r\n        return {\r\n            restrict:'A',\r\n            link: function ($scope, elem, attr) {\r\n                const update = () => {\r\n                    if (elem && elem[0]) {\r\n                        if (attr.profileImage == '')\r\n                            elem[0].src = '/assets/profile.png';\r\n                        else\r\n                            elem[0].src = window.globals.PROFILE_IMAGE_URL + attr.profileImage;\r\n                    }\r\n                };\r\n\r\n                update();\r\n\r\n\r\n                let deregs = [];\r\n\r\n                deregs.push($scope.$watch('profileImage',() => {\r\n                    update();\r\n                }));\r\n\r\n                $scope.$on('$destroy',() => {\r\n                    while (deregs.length)\r\n                        deregs.pop()();\r\n                })\r\n\r\n            }\r\n        }\r\n    }]);","angular.module('paladinApp')\r\n    .directive('ratingView', [function () {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {\r\n                rating: '=',\r\n                count: '<?',\r\n                readOnly: '<?',\r\n                onRating: '&'\r\n            },\r\n            templateUrl: './views/templates/ratingView.tpl.html',\r\n            link: function ($scope, elem, attrs) {\r\n                \r\n                $scope.onRatingSet = (rating) => {\r\n                    if ($scope.onRating)\r\n                        $scope.onRating({rating: rating});\r\n                }\r\n            }\r\n        }\r\n    }]);","angular.module('paladinApp')\r\n.directive('rentalRequestHowTo',[function () {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: './views/templates/rentalRequestHowTo.tpl.html',\r\n        scope: {\r\n            isTryAndBuy: '=?',\r\n            isBuy: '=?',\r\n        },\r\n        link: function ($scope, elem, attr) {\r\n\r\n        }\r\n    }\r\n}]);","'use strict';\r\nangular.module('paladinApp')\r\n    .directive('rentalRequestPicker', [\r\n        '$rootScope',\r\n        'appStateManager',\r\n        'enums',\r\n        'apiService',\r\n        'moment',\r\n        '$translate',\r\n        'ptUtils',\r\n        'gtmService',\r\n        function (\r\n            $rootScope,\r\n            appStateManager,\r\n            enums,\r\n            apiService,\r\n            moment,\r\n            $translate,\r\n            ptUtils,\r\n            gtmService,\r\n        ) {\r\n            return {\r\n                restrict: 'E',\r\n                templateUrl: './views/templates/rentalRequestPicker.tpl.html',\r\n                scope: {\r\n                    product: '=',\r\n                    productBookingDetails: '=',\r\n                    onRequestRent: '&',\r\n                    onDatesUpdated: '&',\r\n                },\r\n                link: function ($scope, elem, attr) {\r\n                    console.log('rentalRequestPicker: ', elem[0].id);\r\n\r\n                    $scope.userCredit = null;\r\n\r\n                    $scope.calculatePrice = (isShowErrorOnFaiure = true) => {\r\n                        $scope.statusError = undefined;\r\n\r\n                        let calculateTransactionPrice = () => {\r\n                            ptUtils.calculatePricingListForProduct(\r\n                                $scope.startDate,\r\n                                $scope.endDate,\r\n                                $scope.product,\r\n                                $scope.productBookingDetails,\r\n                                true,\r\n                                $scope.userCredit\r\n                            )\r\n                                .then((prices) => {\r\n                                    $scope.$evalAsync(() => {\r\n                                        $scope.statusError = undefined;\r\n                                        $scope.prices = prices\r\n                                    })\r\n                                })\r\n                                .catch((err) => {\r\n                                    $scope.$evalAsync(() => {\r\n                                        $scope.prices = [];\r\n                                        if (isShowErrorOnFaiure) {\r\n                                            if (err && err.message) {\r\n                                                $scope.statusError = err.message;\r\n                                            }\r\n                                        }\r\n                                    })\r\n                                })\r\n                        };\r\n\r\n                        // TODO: Refactor this and make sure credit is not requested more than necessary\r\n                        // maybe move the credit object to appStateManager\r\n\r\n                        let userId = appStateManager.getUserId();\r\n                        if (userId) {\r\n                            apiService.users.getUserCredit({userId})\r\n                                .then((result) => {\r\n                                    $scope.userCredit = result.Data;\r\n                                    calculateTransactionPrice();\r\n                                })\r\n                                .catch((err) => {\r\n                                    console.error('getuserCredit failed ', err)\r\n                                })\r\n                        }\r\n                    };\r\n                    $scope.bookingPickerId = attr.id + '-bookingPicker';\r\n\r\n                    $scope.init = () => {\r\n                        // const dates = ptUtils.getProductFirstAvailableDatesToRent($scope.productBookingDetails);\r\n                        $scope.statusError = undefined;\r\n                        $scope.startDate = undefined; //dates.startDate;\r\n                        $scope.endDate = undefined; //dates.endDate;\r\n                        $scope.calculatePrice(false);\r\n                    };\r\n                    // scope.validateDates = () => {\r\n                    //\r\n                    // };\r\n                    $scope.onDatesSelected = ({startDate, endDate}) => {\r\n                        if ($scope.startDate != startDate || $scope.endDate != endDate) {\r\n                            $scope.startDate = startDate;\r\n                            $scope.endDate = endDate;\r\n                            $scope.calculatePrice();\r\n\r\n                            if ($scope.onDatesUpdated)\r\n                                $scope.onDatesUpdated()\r\n                                ({\r\n                                    startDate: $scope.startDate,\r\n                                    endDate: $scope.endDate,\r\n                                    componentId: elem[0].id,\r\n                                })\r\n                        }\r\n                    };\r\n\r\n                    $scope.onBuyBtnClicked = () => {\r\n                        $rootScope.$emit(enums.busNavigation.paymentDetailed,{\r\n                            productId: $scope.product.Product_Id,\r\n                            purchase: true\r\n                        })                    \r\n                    }\r\n\r\n                    $scope.onRequestRentBtnClicked = () => {\r\n                        if ($scope.prices == undefined || $scope.prices.length == 0) {\r\n                            $scope.$$postDigest(() => {\r\n                                angular.element(document.querySelector(`#${elem[0].id} #desktopPicker span.md-select-value`))[0].click();\r\n                            })\r\n                            return;\r\n                        }\r\n                        $scope.onRequestRent()\r\n                        ({\r\n                            startDate: $scope.startDate,\r\n                            endDate: $scope.endDate,\r\n                            componentId: elem[0].id,\r\n                        });\r\n\r\n                        gtmService.trackEvent('booking', 'request-now-button-post-calendar', 'productDetailpage', 'value');\r\n\r\n                    };\r\n\r\n                    $scope.init();\r\n\r\n                    let deregs = [];\r\n\r\n                    deregs.push($rootScope.$on(enums.busEvents.rentalRequestPickerUpdateDates, (event, data) => {\r\n                        if (data && data.startDate && data.endDate && data.componentId == elem[0].id) {\r\n                            $scope.onDatesSelected(data);\r\n                        }\r\n                    }));\r\n\r\n                    $scope.$on('$destroy', () => {\r\n                        while (deregs.length)\r\n                            deregs.pop()();\r\n                    })\r\n                }\r\n            }\r\n        }]);\r\n","angular.module('paladinApp')\r\n.directive('reviewsList',[\r\n    '$rootScope',\r\n    'appStateManager',\r\n    function ($rootScope,\r\n              appStateManager) {\r\n            return {\r\n                restrict: 'E',\r\n                templateUrl: './views/templates/reviewsList.tpl.html',\r\n                scope: {\r\n                    reviews:'=',\r\n                },\r\n                link: function ($scope, elem, attr) {\r\n                }\r\n            }\r\n    }]);","angular.module('paladinApp')\r\n.directive('reviewsListItem',[\r\n    '$rootScope',\r\n    function ($rootScope) {\r\n        return {\r\n            restrict: 'E',\r\n            templateUrl:'./views/templates/reviewsListItem.tpl.html',\r\n            scope: {\r\n                review:'=',\r\n            },\r\n            link: function ($scope, elem, attr) {\r\n\r\n            }\r\n        }\r\n    }]);","angular\r\n.module('paladinApp')\r\n.component('search', {\r\n  bindings: {\r\n\r\n    filter:'='\r\n  },\r\n  controller: class FilterComponent {\r\n\r\n  constructor($scope,$rootScope,$translate,apiService,enums) {\r\n    this.scope = $scope;\r\n    this.rootScope = $rootScope;\r\n    this.translate = $translate;\r\n    this.apiService = apiService;\r\n    this.enums = enums;\r\n  }\r\n\r\n  $onInit() {\r\n      var _this = this;\r\n      this.scope.distanceDropDown = [{\r\n            \"l_id\": 1,\r\n            \"distance\":1,\r\n            \"name\": \"VC\"\r\n          }, {\r\n            \"l_id\": 2,\r\n            \"distance\":5,\r\n            \"name\": \"NB\"\r\n          }, {\r\n            \"l_id\": 3,\r\n            \"distance\":10,\r\n            \"name\": \"IC\"\r\n          },\r\n          {\r\n            \"l_id\": 4,\r\n            \"distance\":50,\r\n            \"name\": \"IA\"\r\n          },\r\n          {\r\n            \"l_id\": 5,\r\n            \"distance\":200,\r\n            \"name\": \"FA\"\r\n          }\r\n      ];\r\n      this.scope.distanceRange=200;\r\n      this.selectedRange={\r\n                                \"l_id\": 5,\r\n                                \"distance\":200,\r\n                                \"name\": \"FA\"\r\n                              };\r\n      this.scope.myModelVal= this.scope.distanceDropDown[4];\r\n\r\n      this.scope.$on('distanceChanged', function(event, args){\r\n        if (args) {\r\n          _this.changeDistanceFilter();\r\n        }\r\n        _this.loading = false;\r\n      });\r\n\r\n      this.selectedItem = '';\r\n\r\n  }\r\n\r\n  initiateSearch(keyword) {\r\n    if (keyword && keyword != '') {\r\n      this.filter.search.searchStr = keyword;\r\n      this.applySearch();\r\n    }\r\n  }\r\n\r\n  onSearchTextChange() {\r\n    if (this.filter.search.searchStr == '') \r\n      this.applySearch();\r\n  }\r\n\r\n\r\nsearchBarOnKeyPress($event) {\r\n    \r\n    this.filter.search.searchStr = $event.target.value || '';\r\n    \r\n    if ($event.which == 13 && $event.target.value) {\r\n        this.initiateSearch($event.target.value);\r\n        \r\n        var autoChild = document.getElementById('search-bar-browse-page').firstElementChild;\r\n        var el = angular.element(autoChild);\r\n        el.scope().$mdAutocompleteCtrl.hidden = true;\r\n        $event.preventDefault();\r\n    }\r\n  }\r\n  \r\n  querySearch(textQuery) {\r\n    if (textQuery && textQuery != '') {\r\n    const query = textQuery.toLowerCase();\r\n    return this.apiService.products.getSuggestions(query)\r\n        .then((response) => {\r\n            return [{Rank: Infinity, Keyword: textQuery},...response.Data.sort((a,b) => b.Rank - a.Rank)];\r\n        })\r\n    }\r\n  }\r\n\r\n  showLocation() {\r\n    return this.filter.sortBy === this.enums.productsSortOptions.geoLocation;\r\n  }\r\n  \r\n\r\n  onSelectedSuggestion(item,model,label,event) {\r\n    this.filter.search.searchStr = item;\r\n    event.stopPropagation();\r\n  }\r\n  onKeyPressed(event, item) {\r\n\r\n    if (event.keyCode == 13) {\r\n      applySearch();\r\n    } \r\n\r\n    if (event.keyCode == 38 || event.keyCode == 40) {\r\n      this.filter.search.searchStr = item; \r\n    }\r\n\r\n  }\r\n  \r\n\r\n  changeDistanceFilter(){\r\n      if(this.filter){\r\n          this.filter.distanceRange=this.selectedRange.distance;\r\n          this.applySearch();\r\n      }\r\n  }\r\n  applySearch(){\r\n      this.filter.currentPage =1;\r\n      this.filter.search.currentSearchStr = this.filter.search.searchStr;\r\n      this.rootScope.$broadcast('filtersUpdated');\r\n  }\r\n  addSuggestionToSearch(suggestion, loadResults) {\r\n    this.filter.search.searchStr = suggestion;\r\n    applySearch();\r\n  }\r\n  smallScreen() {\r\n    return window.innerWidth<768;\r\n  }\r\n},\r\n  templateUrl:'./views/templates/search.tpl.html'\r\n});","angular.module('paladinApp')\r\n.directive('searchBar',[function () {\r\n    return {\r\n        restrict:'E',\r\n        scope: {\r\n            isOpen: '=?',\r\n            isGreenBackground:'=?',\r\n        },\r\n        templateUrl:'./views/templates/searchBar.tpl.html',\r\n        link: function ($scope, elem, attr) {\r\n\r\n        }\r\n    }\r\n}]);","angular.module('paladinApp')\r\n.directive('userAvatar',[function () {\r\n    return {\r\n        restrict:'E',\r\n        scope: {\r\n            user: '<?',\r\n            userId: '<?',\r\n            picSize: '<?',\r\n            userImage: '<?',\r\n        },\r\n        templateUrl:'./views/templates/userAvatar.tpl.html',\r\n        link: function ($scope, elem, attr) {\r\n        // <img class=\"userAvatarImage\" ng-if=\"user != null\" ng-src=\"{{user.User_DisplayPicturePath =! null ? (imgServerPath +  user.User_DisplayPicturePath) : '/assets/profile.png'}}\" alt=\"{{::user.User_UserName}}\"/>\r\n\r\n            const init = () => {\r\n                $scope.picSize = $scope.picSize || 30;\r\n                $scope.picSizeParsed = $scope.picSize + \"px\";\r\n                $scope.sizeStyle = `width: ${$scope.picSize}px; height: ${$scope.picSize}px;`;\r\n                $scope.imgServerPath = window.globals.PROFILE_IMAGE_URL;\r\n                const temp = $scope.userImage;\r\n                    $scope.userImage = '';\r\n                    if ($scope.user) {\r\n                        $scope.userImage = $scope.user.User_DisplayPicturePath;\r\n                    } else if (temp) {\r\n                        $scope.userImage = temp;\r\n                    }\r\n            };\r\n\r\n            init();\r\n\r\n\r\n\r\n            let deregs = [];\r\n            deregs.push($scope.$watch('userImage',() => {\r\n                init();\r\n            }));\r\n\r\n            deregs.push($scope.$watch('user',() => {\r\n\r\n                init();\r\n            }));\r\n\r\n            $scope.$on('destroy',() => {\r\n                while (deregs.length)\r\n                    deregs.pop()();\r\n            });\r\n        }\r\n    }\r\n}]);","angular.module('paladinApp')\r\n    .directive('userItem',[\r\n        '$rootScope',\r\n        'enums',\r\n        'appStateManager',\r\n        function (\r\n            $rootScope,\r\n            enums,\r\n            appStateManager) {\r\n\r\n            return {\r\n                restrict: 'E',\r\n                templateUrl: './views/templates/userItem.tpl.html',\r\n                scope: {\r\n                    userId: '=?',\r\n                    userName:'=?',\r\n                    userImage: '=?',\r\n                    reviews: '=?',\r\n                    stars: '=?',\r\n                    picSize: '=?',\r\n                },\r\n                link: function ($scope, elem, attr) {\r\n                    $scope.picSize = $scope.picSize || 50;\r\n                    $scope.goToProfile = () => {\r\n                        if ($scope.userId)\r\n                            $rootScope.$emit(enums.busNavigation.userProfile,{userId: $scope.userId})\r\n                    }\r\n                }\r\n            }\r\n\r\n        }]);","angular.module('paladinApp')\r\n    .directive('userListingsList',[\r\n        '$rootScope',\r\n        'enums',\r\n        'apiService',\r\n        function ($rootScope,\r\n                  enums,\r\n                  apiService) {\r\n            return {\r\n                restrict: 'E',\r\n                templateUrl:'./views/templates/userListingsList.tpl.html',\r\n                scope: {\r\n                    userId: '=',\r\n                    isMinified: '=?',\r\n                },\r\n                link: function ($scope, elem, att) {\r\n                    $scope.isMinified = $scope.isMinified || false;\r\n                    $scope.isLoading = false;\r\n                    $scope.userProducts = [];\r\n                    $scope.fetchUserListings = () => {\r\n                        $scope.isLoading = true;\r\n                        apiService.products.getUserProducts({\r\n                            productsFilter: enums.userProductsFilter.lentProduct,\r\n                            userId: $scope.userId,\r\n                        })\r\n                            .then((res) => {\r\n                                $scope.userProducts = res.Data.User_AllProducts;\r\n                                $scope.isLoading = false;\r\n                            })\r\n                    };\r\n\r\n                    $scope.listItemClick = (product) => {\r\n                        $rootScope.$emit(enums.busNavigation.productDetailed,{ product })\r\n                    };\r\n\r\n                    $scope.fetchUserListings();\r\n                }\r\n            }\r\n        }]);","angular.module('paladinApp')\r\n    .directive('userListingsListItem',[\r\n        '$rootScope',\r\n        'enums',\r\n        function (\r\n            $rootScope,\r\n            enums) {\r\n            return {\r\n                restrict: 'E',\r\n                templateUrl:'./views/templates/userListingsListItem.tpl.html',\r\n                scope: {\r\n                    product: '<',\r\n                    isMinified: '=?'\r\n                },\r\n                link: function ($scope, elem, attr) {\r\n                    $scope.isMinified = $scope.isMinified || false;\r\n                }\r\n            }\r\n        }]);","angular.module('paladinApp').filter('capitalize', function() {\r\n    return function(input){\r\n        //console.log('capitalize : '+input)\r\n        if (input) {\r\n            if (input.indexOf(' ') !== -1) {\r\n                var inputPieces,\r\n                    i;\r\n\r\n                input = input.toLowerCase();\r\n                inputPieces = input.split(' ');\r\n\r\n                for (i = 0; i < inputPieces.length; i++) {\r\n                    inputPieces[i] = capitalizeString(inputPieces[i].trim());\r\n                }\r\n\r\n                return inputPieces.toString().replace(/,/g, ' ');\r\n            }\r\n            else {\r\n                input = input.toLowerCase();\r\n                return capitalizeString(input);\r\n            }\r\n        }\r\n        function capitalizeString(inputString) {\r\n            return inputString.substring(0, 1).toUpperCase() + inputString.substring(1);\r\n        }\r\n\r\n        return input\r\n    };\r\n});","angular.module('paladinApp')\r\n.filter('ptCurrency', function () {\r\n   return function (input) {\r\n       return '€ ' + input\r\n   }\r\n});","angular.module('paladinApp')\r\n.filter('ptHtmlToPlainText',function () {\r\n    return function (input) {\r\n        return  input ? String(input).replace(/<[^>]+>/gm, '') : input;\r\n    }\r\n});","angular.module('paladinApp')\r\n.filter('ptTruncate',function () {\r\n    return function (input, maxChars) {\r\n\r\n        if (input) {\r\n            if (input.length > maxChars) {\r\n                return input.slice(0,maxChars-3) + '...';\r\n            }\r\n        }\r\n        return input\r\n    }\r\n});"],"sourceRoot":""}